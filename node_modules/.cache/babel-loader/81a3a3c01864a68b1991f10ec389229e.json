{"ast":null,"code":"export { getContext, setContext } from \"./core/Global\";\nexport * from \"./classes\";\nexport * from \"./version\";\nimport { getContext } from \"./core/Global\";\nimport { ToneAudioBuffer } from \"./core/context/ToneAudioBuffer\";\nexport { start } from \"./core/Global\";\n/**\n * The current audio context time of the global [[Context]].\n * See [[Context.now]]\n * @category Core\n */\n\nexport var now = getContext().now.bind(getContext());\n/**\n * The current audio context time of the global [[Context]] without the [[Context.lookAhead]]\n * See [[Context.immediate]]\n * @category Core\n */\n\nexport var immediate = getContext().immediate.bind(getContext());\n/**\n * The Transport object belonging to the global Tone.js Context.\n * See [[Transport]]\n * @category Core\n */\n\nexport var Transport = getContext().transport;\n/**\n * The Destination (output) belonging to the global Tone.js Context.\n * See [[Destination]]\n * @category Core\n */\n\nexport var Destination = getContext().destination;\n/**\n * The [[Listener]] belonging to the global Tone.js Context.\n * @category Core\n */\n\nexport var Listener = getContext().listener;\n/**\n * Draw is used to synchronize the draw frame with the Transport's callbacks.\n * See [[Draw]]\n * @category Core\n */\n\nexport var Draw = getContext().draw;\n/**\n * A reference to the global context\n * See [[Context]]\n * @category Core\n */\n\nexport var context = getContext();\n/**\n * Promise which resolves when all of the loading promises are resolved.\n * Alias for static [[ToneAudioBuffer.loaded]] method.\n * @category Core\n */\n\nexport var loaded = ToneAudioBuffer.loaded.bind(ToneAudioBuffer);","map":{"version":3,"sources":["../../Tone/index.ts"],"names":[],"mappings":"AAAA,SAAS,UAAT,EAAqB,UAArB,QAAuC,eAAvC;AACA,cAAc,WAAd;AACA,cAAc,WAAd;AACA,SAAS,UAAT,QAA2B,eAA3B;AACA,SAAS,eAAT,QAAgC,gCAAhC;AACA,SAAS,KAAT,QAAsB,eAAtB;AAEA;;;;;;AAKA,OAAO,IAAM,GAAG,GAAG,UAAU,GAAG,GAAb,CAAiB,IAAjB,CAAsB,UAAU,EAAhC,CAAZ;AAEP;;;;;;AAKA,OAAO,IAAM,SAAS,GAAG,UAAU,GAAG,SAAb,CAAuB,IAAvB,CAA4B,UAAU,EAAtC,CAAlB;AAEP;;;;;;AAKA,OAAO,IAAM,SAAS,GAAG,UAAU,GAAG,SAA/B;AAEP;;;;;;AAKA,OAAO,IAAM,WAAW,GAAG,UAAU,GAAG,WAAjC;AAEP;;;;;AAIA,OAAO,IAAM,QAAQ,GAAG,UAAU,GAAG,QAA9B;AAEP;;;;;;AAKA,OAAO,IAAM,IAAI,GAAG,UAAU,GAAG,IAA1B;AAEP;;;;;;AAKA,OAAO,IAAM,OAAO,GAAG,UAAU,EAA1B;AAEP;;;;;;AAKA,OAAO,IAAM,MAAM,GAAG,eAAe,CAAC,MAAhB,CAAuB,IAAvB,CAA4B,eAA5B,CAAf","sourceRoot":"","sourcesContent":["export { getContext, setContext } from \"./core/Global\";\nexport * from \"./classes\";\nexport * from \"./version\";\nimport { getContext } from \"./core/Global\";\nimport { ToneAudioBuffer } from \"./core/context/ToneAudioBuffer\";\nexport { start } from \"./core/Global\";\n/**\n * The current audio context time of the global [[Context]].\n * See [[Context.now]]\n * @category Core\n */\nexport var now = getContext().now.bind(getContext());\n/**\n * The current audio context time of the global [[Context]] without the [[Context.lookAhead]]\n * See [[Context.immediate]]\n * @category Core\n */\nexport var immediate = getContext().immediate.bind(getContext());\n/**\n * The Transport object belonging to the global Tone.js Context.\n * See [[Transport]]\n * @category Core\n */\nexport var Transport = getContext().transport;\n/**\n * The Destination (output) belonging to the global Tone.js Context.\n * See [[Destination]]\n * @category Core\n */\nexport var Destination = getContext().destination;\n/**\n * The [[Listener]] belonging to the global Tone.js Context.\n * @category Core\n */\nexport var Listener = getContext().listener;\n/**\n * Draw is used to synchronize the draw frame with the Transport's callbacks.\n * See [[Draw]]\n * @category Core\n */\nexport var Draw = getContext().draw;\n/**\n * A reference to the global context\n * See [[Context]]\n * @category Core\n */\nexport var context = getContext();\n/**\n * Promise which resolves when all of the loading promises are resolved.\n * Alias for static [[ToneAudioBuffer.loaded]] method.\n * @category Core\n */\nexport var loaded = ToneAudioBuffer.loaded.bind(ToneAudioBuffer);\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}