{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nexport class BaseSubject {\n  constructor(initialValue) {\n    this.store = void 0;\n    this.bs = void 0;\n    this.state$ = void 0;\n    this.state = void 0;\n    this.previous = void 0;\n    this.bs = new BehaviorSubject(initialValue);\n    this.state$ = this.bs.asObservable();\n    this.state = initialValue;\n    this.previous = this.state;\n    this.state$.subscribe(s => {\n      this.state = s;\n    });\n  }\n\n  patch(newValue, event = \"Not specified\") {\n    this.previous = this.state;\n    const newState = Object.assign({}, this.state, newValue);\n    this.bs.next(newState);\n  }\n\n  set(newValue) {\n    this.previous = this.state;\n    const newState = Object.assign({}, newValue);\n    this.bs.next(newState);\n  }\n\n}","map":{"version":3,"sources":["/Users/erickoduniyi/Desktop/affective_chaos_control/Emulators/wind-field/src/engine/BaseSubject.ts"],"names":["BehaviorSubject","BaseSubject","constructor","initialValue","store","bs","state$","state","previous","asObservable","subscribe","s","patch","newValue","event","newState","Object","assign","next","set"],"mappings":"AAAA,SAASA,eAAT,QAA4C,MAA5C;AAEA,OAAO,MAAeC,WAAf,CAA8B;AASnCC,EAAAA,WAAW,CAACC,YAAD,EAA2B;AAAA,SAPnBC,KAOmB;AAAA,SAL5BC,EAK4B;AAAA,SAJtCC,MAIsC;AAAA,SAHtCC,KAGsC;AAAA,SAFtCC,QAEsC;AACpC,SAAKH,EAAL,GAAU,IAAIL,eAAJ,CAAuBG,YAAvB,CAAV;AACA,SAAKG,MAAL,GAAc,KAAKD,EAAL,CAAQI,YAAR,EAAd;AAEA,SAAKF,KAAL,GAAaJ,YAAb;AACA,SAAKK,QAAL,GAAgB,KAAKD,KAArB;AACA,SAAKD,MAAL,CAAYI,SAAZ,CAAsBC,CAAC,IAAI;AACzB,WAAKJ,KAAL,GAAaI,CAAb;AACD,KAFD;AAGD;;AAEDC,EAAAA,KAAK,CAACC,QAAD,EAAuBC,KAAa,GAAG,eAAvC,EAAwD;AAC3D,SAAKN,QAAL,GAAgB,KAAKD,KAArB;AACA,UAAMQ,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKV,KAAvB,EAA8BM,QAA9B,CAAjB;AACA,SAAKR,EAAL,CAAQa,IAAR,CAAaH,QAAb;AACD;;AAEDI,EAAAA,GAAG,CAACN,QAAD,EAAuB;AACxB,SAAKL,QAAL,GAAgB,KAAKD,KAArB;AACA,UAAMQ,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,QAAlB,CAAjB;AACA,SAAKR,EAAL,CAAQa,IAAR,CAAaH,QAAb;AACD;;AA9BkC","sourcesContent":["import { BehaviorSubject, Observable } from 'rxjs';\n\nexport abstract class BaseSubject<T> {\n\n  protected abstract store: string;\n\n  protected bs: BehaviorSubject<T>;\n  state$: Observable<T>;\n  state: T;\n  previous: T;\n\n  constructor(initialValue: Partial<T>) {\n    this.bs = new BehaviorSubject<T>(initialValue as T);\n    this.state$ = this.bs.asObservable();\n\n    this.state = initialValue as T;\n    this.previous = this.state as T;\n    this.state$.subscribe(s => {\n      this.state = s;\n    });\n  }\n\n  patch(newValue: Partial<T>, event: string = \"Not specified\") {\n    this.previous = this.state;\n    const newState = Object.assign({}, this.state, newValue);\n    this.bs.next(newState);\n  }\n\n  set(newValue: Partial<T>) {\n    this.previous = this.state;\n    const newState = Object.assign({}, newValue) as T;\n    this.bs.next(newState);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}