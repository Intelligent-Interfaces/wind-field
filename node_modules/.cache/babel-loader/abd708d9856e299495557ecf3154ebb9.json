{"ast":null,"code":"import _slicedToArray from \"/Users/erickoduniyi/Desktop/affective_chaos_control/Emulators/wind-field/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/erickoduniyi/Desktop/affective_chaos_control/Emulators/wind-field/src/components/TapeDisplay/index.tsx\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { CanvasSpace } from 'pts';\nimport { Box } from '../Box';\nimport styled from '../../styled';\nimport Machine from '../../engine/MachineSubject';\nconst DisplayStyles = styled(Box)`\n  background: ${props => props.theme.colors.dark};\n  height: 100%;\n  width: 100%;\n  padding: 8px;\n\n  * {\n    margin: 0;\n    color: white;\n    user-select: none;\n  }\n\n  canvas {\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nconst TapeDisplay = () => {\n  const cv = useRef(null);\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  useEffect(() => {\n    const sub = Machine.state$.subscribe(next => {\n      setState(next);\n    });\n    return () => sub.unsubscribe();\n  }, []);\n  useEffect(() => {\n    let space;\n\n    if (cv.current) {\n      space = new CanvasSpace(cv.current);\n      const form = space.getForm();\n      space.add({\n        animate: () => {\n          if (Machine.synth && Machine.synth.context.state === \"suspended\") {\n            space.pause();\n          }\n\n          if (Machine.sound) {\n            let area = space.size.$divide(1);\n            let idx = space.pointer.$divide(area).floor();\n            let rect = [idx.$multiply(area), idx.$multiply(area).add(area)];\n            let freqs = Machine.sound.freqDomainTo([area.x, area.y / 2], [rect[0].x, 0]).map(f => [[f.x, rect[0].y + area.y / 2 - f.y], [f.x, rect[0].y + area.y / 2 + f.y]]);\n            form.stroke('#2E3337');\n            form.fill(\"#2E3337\").rect(rect);\n            form.strokeOnly(\"#5CB6F2\", Math.ceil(area.x / 1024)).lines(freqs);\n          }\n        }\n      });\n      space.play();\n    }\n\n    return () => {\n      if (space) {\n        space.stop();\n      }\n    };\n  }, []);\n  return React.createElement(DisplayStyles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Box, {\n    height: \"100%\",\n    bg: \"dark\",\n    ref: cv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }));\n};\n\nexport { TapeDisplay };","map":{"version":3,"sources":["/Users/erickoduniyi/Desktop/affective_chaos_control/Emulators/wind-field/src/components/TapeDisplay/index.tsx"],"names":["React","useEffect","useState","useRef","CanvasSpace","Box","styled","Machine","DisplayStyles","props","theme","colors","dark","TapeDisplay","cv","state","setState","sub","state$","subscribe","next","unsubscribe","space","current","form","getForm","add","animate","synth","context","pause","sound","area","size","$divide","idx","pointer","floor","rect","$multiply","freqs","freqDomainTo","x","y","map","f","stroke","fill","strokeOnly","Math","ceil","lines","play","stop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { CanvasSpace } from 'pts';\nimport { Box } from '../Box';\nimport styled from '../../styled';\nimport Machine from '../../engine/MachineSubject';\nimport { MachineState } from '../../interfaces';\n\nconst DisplayStyles = styled(Box)`\n  background: ${props => props.theme.colors.dark};\n  height: 100%;\n  width: 100%;\n  padding: 8px;\n\n  * {\n    margin: 0;\n    color: white;\n    user-select: none;\n  }\n\n  canvas {\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nconst TapeDisplay: React.FC<any> = () => {\n\n  const cv = useRef<HTMLDivElement>(null);\n  const [state, setState] = useState<MachineState>();\n\n  useEffect(\n    () => {\n      const sub = Machine.state$.subscribe((next: MachineState) => {\n        setState(next);\n      });\n\n      return () => sub.unsubscribe();\n    },\n    []\n  );\n\n  useEffect(\n    () => {\n      let space: CanvasSpace;\n\n      if (cv.current) {\n        space = new CanvasSpace(cv.current);\n        const form = space.getForm();\n        space.add({\n          animate: () => {\n            if (Machine.synth && Machine.synth.context.state === \"suspended\") {\n              space.pause();\n            }\n\n            if (Machine.sound) {\n              let area = space.size.$divide(1);\n              let idx = space.pointer.$divide(area).floor();\n              let rect = [idx.$multiply(area), idx.$multiply(area).add(area)];\n              let freqs: any = Machine.sound.freqDomainTo([area.x, area.y / 2], [rect[0].x, 0]).map(f => [[f.x, rect[0].y + area.y / 2 - f.y], [f.x, rect[0].y + area.y / 2 + f.y]]);\n\n              form.stroke('#2E3337');\n              form.fill(\"#2E3337\").rect(rect);\n              form.strokeOnly(\"#5CB6F2\", Math.ceil(area.x / 1024)).lines(freqs);\n            }\n          }\n        })\n        space.play();\n      }\n\n      return () => {\n        if (space) {\n          space.stop();\n        }\n      }\n    },\n    []\n  )\n\n  return (\n    <DisplayStyles>\n      <Box height=\"100%\" bg=\"dark\" ref={cv}></Box>\n    </DisplayStyles>\n  );\n}\n\nexport { TapeDisplay };\n"]},"metadata":{},"sourceType":"module"}