{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Add } from \"./Add\";\nimport { Multiply } from \"./Multiply\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Performs a linear scaling on an input signal.\n * Scales a NormalRange input to between\n * outputMin and outputMax.\n *\n * @example\n * import { Scale, Signal } from \"tone\";\n * const scale = new Scale(50, 100);\n * const signal = new Signal(0.5).connect(scale);\n * // the output of scale equals 75\n * @category Signal\n */\n\nvar Scale =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Scale, _super);\n\n  function Scale() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"]))) || this;\n\n    _this.name = \"Scale\";\n    var options = optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"]);\n    _this._mult = _this.input = new Multiply({\n      context: _this.context,\n      value: options.max - options.min\n    });\n    _this._add = _this.output = new Add({\n      context: _this.context,\n      value: options.min\n    });\n    _this._min = options.min;\n    _this._max = options.max;\n\n    _this.input.connect(_this.output);\n\n    return _this;\n  }\n\n  Scale.getDefaults = function () {\n    return Object.assign(SignalOperator.getDefaults(), {\n      max: 1,\n      min: 0\n    });\n  };\n\n  Object.defineProperty(Scale.prototype, \"min\", {\n    /**\n     * The minimum output value. This number is output when the value input value is 0.\n     */\n    get: function () {\n      return this._min;\n    },\n    set: function (min) {\n      this._min = min;\n\n      this._setRange();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Scale.prototype, \"max\", {\n    /**\n     * The maximum output value. This number is output when the value input value is 1.\n     */\n    get: function () {\n      return this._max;\n    },\n    set: function (max) {\n      this._max = max;\n\n      this._setRange();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * set the values\n   */\n\n  Scale.prototype._setRange = function () {\n    this._add.value = this._min;\n    this._mult.value = this._max - this._min;\n  };\n\n  Scale.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._add.dispose();\n\n    this._mult.dispose();\n\n    return this;\n  };\n\n  return Scale;\n}(SignalOperator);\n\nexport { Scale };","map":{"version":3,"sources":["../../../Tone/signal/Scale.ts"],"names":[],"mappings":";AACA,SAAS,oBAAT,QAAqC,uBAArC;AACA,SAAS,GAAT,QAAoB,OAApB;AACA,SAAS,QAAT,QAAyB,YAAzB;AACA,SAAS,cAAT,QAA+B,kBAA/B;AAOA;;;;;;;;;;;;;AAYA,IAAA,KAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAwE,EAAA,OAAA,CAAA,SAAA,CAAA,KAAA,EAAA,MAAA;;AAiCvE,WAAA,KAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,MAAM,CAAC,MAAP,CAAc,oBAAoB,CAAC,KAAK,CAAC,WAAN,EAAD,EAAsB,SAAtB,EAAiC,CAAC,KAAD,EAAQ,KAAR,CAAjC,CAAlC,CAAN,KAA0F,IAD3F;;AA/BS,IAAA,KAAA,CAAA,IAAA,GAAe,OAAf;AAiCR,QAAM,OAAO,GAAG,oBAAoB,CAAC,KAAK,CAAC,WAAN,EAAD,EAAsB,SAAtB,EAAiC,CAAC,KAAD,EAAQ,KAAR,CAAjC,CAApC;AAEA,IAAA,KAAI,CAAC,KAAL,GAAa,KAAI,CAAC,KAAL,GAAa,IAAI,QAAJ,CAAa;AACtC,MAAA,OAAO,EAAE,KAAI,CAAC,OADwB;AAEtC,MAAA,KAAK,EAAE,OAAO,CAAC,GAAR,GAAc,OAAO,CAAC;AAFS,KAAb,CAA1B;AAKA,IAAA,KAAI,CAAC,IAAL,GAAY,KAAI,CAAC,MAAL,GAAc,IAAI,GAAJ,CAAQ;AACjC,MAAA,OAAO,EAAE,KAAI,CAAC,OADmB;AAEjC,MAAA,KAAK,EAAE,OAAO,CAAC;AAFkB,KAAR,CAA1B;AAKA,IAAA,KAAI,CAAC,IAAL,GAAY,OAAO,CAAC,GAApB;AACA,IAAA,KAAI,CAAC,IAAL,GAAY,OAAO,CAAC,GAApB;;AAEA,IAAA,KAAI,CAAC,KAAL,CAAW,OAAX,CAAmB,KAAI,CAAC,MAAxB;;;AACA;;AAEM,EAAA,KAAA,CAAA,WAAA,GAAP,YAAA;AACC,WAAO,MAAM,CAAC,MAAP,CAAc,cAAc,CAAC,WAAf,EAAd,EAA4C;AAClD,MAAA,GAAG,EAAE,CAD6C;AAElD,MAAA,GAAG,EAAE;AAF6C,KAA5C,CAAP;AAIA,GALM;;AAUP,EAAA,MAAA,CAAA,cAAA,CAAI,KAAA,CAAA,SAAJ,EAAI,KAAJ,EAAO;AAHP;;;SAGA,YAAA;AACC,aAAO,KAAK,IAAZ;AACA,KAFM;SAGP,UAAQ,GAAR,EAAW;AACV,WAAK,IAAL,GAAY,GAAZ;;AACA,WAAK,SAAL;AACA,KANM;oBAAA;;AAAA,GAAP;AAWA,EAAA,MAAA,CAAA,cAAA,CAAI,KAAA,CAAA,SAAJ,EAAI,KAAJ,EAAO;AAHP;;;SAGA,YAAA;AACC,aAAO,KAAK,IAAZ;AACA,KAFM;SAGP,UAAQ,GAAR,EAAW;AACV,WAAK,IAAL,GAAY,GAAZ;;AACA,WAAK,SAAL;AACA,KANM;oBAAA;;AAAA,GAAP;AAQA;;;;AAGQ,EAAA,KAAA,CAAA,SAAA,CAAA,SAAA,GAAR,YAAA;AACC,SAAK,IAAL,CAAU,KAAV,GAAkB,KAAK,IAAvB;AACA,SAAK,KAAL,CAAW,KAAX,GAAmB,KAAK,IAAL,GAAY,KAAK,IAApC;AACA,GAHO;;AAKR,EAAA,KAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACC,IAAA,MAAA,CAAA,SAAA,CAAM,OAAN,CAAa,IAAb,CAAa,IAAb;;AACA,SAAK,IAAL,CAAU,OAAV;;AACA,SAAK,KAAL,CAAW,OAAX;;AACA,WAAO,IAAP;AACA,GALD;;AAMD,SAAA,KAAA;AAAC,CAhGD,CAAwE,cAAxE,CAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Add } from \"./Add\";\nimport { Multiply } from \"./Multiply\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Performs a linear scaling on an input signal.\n * Scales a NormalRange input to between\n * outputMin and outputMax.\n *\n * @example\n * import { Scale, Signal } from \"tone\";\n * const scale = new Scale(50, 100);\n * const signal = new Signal(0.5).connect(scale);\n * // the output of scale equals 75\n * @category Signal\n */\nvar Scale = /** @class */ (function (_super) {\n    tslib_1.__extends(Scale, _super);\n    function Scale() {\n        var _this = _super.call(this, Object.assign(optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"]))) || this;\n        _this.name = \"Scale\";\n        var options = optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"]);\n        _this._mult = _this.input = new Multiply({\n            context: _this.context,\n            value: options.max - options.min,\n        });\n        _this._add = _this.output = new Add({\n            context: _this.context,\n            value: options.min,\n        });\n        _this._min = options.min;\n        _this._max = options.max;\n        _this.input.connect(_this.output);\n        return _this;\n    }\n    Scale.getDefaults = function () {\n        return Object.assign(SignalOperator.getDefaults(), {\n            max: 1,\n            min: 0,\n        });\n    };\n    Object.defineProperty(Scale.prototype, \"min\", {\n        /**\n         * The minimum output value. This number is output when the value input value is 0.\n         */\n        get: function () {\n            return this._min;\n        },\n        set: function (min) {\n            this._min = min;\n            this._setRange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Scale.prototype, \"max\", {\n        /**\n         * The maximum output value. This number is output when the value input value is 1.\n         */\n        get: function () {\n            return this._max;\n        },\n        set: function (max) {\n            this._max = max;\n            this._setRange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * set the values\n     */\n    Scale.prototype._setRange = function () {\n        this._add.value = this._min;\n        this._mult.value = this._max - this._min;\n    };\n    Scale.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._add.dispose();\n        this._mult.dispose();\n        return this;\n    };\n    return Scale;\n}(SignalOperator));\nexport { Scale };\n//# sourceMappingURL=Scale.js.map"]},"metadata":{},"sourceType":"module"}