{"ast":null,"code":"import _slicedToArray from \"/Users/erickoduniyi/Desktop/Work/multi_media_signal_processing/skeuomorphic-synth-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/erickoduniyi/Desktop/Work/multi_media_signal_processing/skeuomorphic-synth-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/erickoduniyi/Desktop/Work/multi_media_signal_processing/skeuomorphic-synth-master/src/components/PianoKey/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Button } from '../Button';\nimport styled from '../../styled';\nimport { space } from 'styled-system';\nimport Machine from '../../engine/MachineSubject';\nimport { useKeyPress } from '../../hooks';\nconst PianoKeyStyles = styled(Button)`\n  ${space}\n`;\n\nconst PianoKey = (_ref) => {\n  let octave = _ref.octave,\n      note = _ref.note,\n      color = _ref.color,\n      keyCode = _ref.keyCode,\n      rest = _objectWithoutProperties(_ref, [\"octave\", \"note\", \"color\", \"keyCode\"]);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        mouseDown = _useState2[0],\n        setMouseDown = _useState2[1];\n\n  const keyPress = useKeyPress(keyCode);\n  useEffect(() => {\n    setMouseDown(keyPress);\n  }, [keyCode, keyPress]);\n  useEffect(() => {\n    if (mouseDown) {\n      Machine.attack(note, octave);\n    } else {\n      Machine.release();\n    }\n  }, [mouseDown, note, octave]);\n  return React.createElement(PianoKeyStyles, Object.assign({\n    bg: color,\n    down: mouseDown,\n    onMouseDown: () => setMouseDown(true),\n    onMouseUp: () => setMouseDown(false)\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n};\n\nexport { PianoKey };","map":{"version":3,"sources":["/Users/erickoduniyi/Desktop/Work/multi_media_signal_processing/skeuomorphic-synth-master/src/components/PianoKey/index.tsx"],"names":["React","useState","useEffect","Button","styled","space","Machine","useKeyPress","PianoKeyStyles","PianoKey","octave","note","color","keyCode","rest","mouseDown","setMouseDown","keyPress","attack","release"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,MAAP,MAA6C,cAA7C;AACA,SAAqBC,KAArB,QAAkC,eAAlC;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAcA,MAAMC,cAAc,GAAGJ,MAAM,CAACD,MAAD,CAA6B;IACtDE,KAAM;CADV;;AAIA,MAAMI,QAAiC,GAAG,UAA+C;AAAA,MAA5CC,MAA4C,QAA5CA,MAA4C;AAAA,MAApCC,IAAoC,QAApCA,IAAoC;AAAA,MAA9BC,KAA8B,QAA9BA,KAA8B;AAAA,MAAvBC,OAAuB,QAAvBA,OAAuB;AAAA,MAAXC,IAAW;;AAAA,oBACrDb,QAAQ,CAAU,KAAV,CAD6C;AAAA;AAAA,QAChFc,SADgF;AAAA,QACrEC,YADqE;;AAEvF,QAAMC,QAAQ,GAAGV,WAAW,CAACM,OAAD,CAA5B;AAEAX,EAAAA,SAAS,CACP,MAAM;AACJc,IAAAA,YAAY,CAACC,QAAD,CAAZ;AACD,GAHM,EAIP,CAACJ,OAAD,EAAUI,QAAV,CAJO,CAAT;AAOAf,EAAAA,SAAS,CACP,MAAM;AACJ,QAAIa,SAAJ,EAAe;AACbT,MAAAA,OAAO,CAACY,MAAR,CAAeP,IAAf,EAAqBD,MAArB;AACD,KAFD,MAEO;AACLJ,MAAAA,OAAO,CAACa,OAAR;AACD;AACF,GAPM,EAQP,CAACJ,SAAD,EAAYJ,IAAZ,EAAkBD,MAAlB,CARO,CAAT;AAWA,SACE,oBAAC,cAAD;AACE,IAAA,EAAE,EAAEE,KADN;AAEE,IAAA,IAAI,EAAEG,SAFR;AAGE,IAAA,WAAW,EAAE,MAAMC,YAAY,CAAC,IAAD,CAHjC;AAIE,IAAA,SAAS,EAAE,MAAMA,YAAY,CAAC,KAAD;AAJ/B,KAKMF,IALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAQD,CA9BD;;AAgCA,SAASL,QAAT","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button } from '../Button';\nimport styled, { IThemeStyledFunction } from '../../styled';\nimport { SpaceProps, space } from 'styled-system';\nimport Machine from '../../engine/MachineSubject';\nimport { useKeyPress } from '../../hooks';\n\ntype PianoKeyStyleProps = IThemeStyledFunction & SpaceProps & {\n  bg?: string;\n  down?: boolean;\n}\n\ntype PianoKeyProps = PianoKeyStyleProps & {\n  note: string;\n  octave: number;\n  color?: \"#F5AEE4\";\n  keyCode: string;\n}\n\nconst PianoKeyStyles = styled(Button)<PianoKeyStyleProps>`\n  ${space}\n`;\n\nconst PianoKey: React.FC<PianoKeyProps> = ({ octave, note, color, keyCode, ...rest }) => {\n  const [mouseDown, setMouseDown] = useState<boolean>(false);\n  const keyPress = useKeyPress(keyCode);\n\n  useEffect(\n    () => {\n      setMouseDown(keyPress);\n    },\n    [keyCode, keyPress]\n  )\n\n  useEffect(\n    () => {\n      if (mouseDown) {\n        Machine.attack(note, octave)\n      } else {\n        Machine.release();\n      }\n    },\n    [mouseDown, note, octave]\n  )\n\n  return (\n    <PianoKeyStyles\n      bg={color}\n      down={mouseDown}\n      onMouseDown={() => setMouseDown(true)}\n      onMouseUp={() => setMouseDown(false)}\n      {...rest} />\n  );\n}\n\nexport { PianoKey };\n"]},"metadata":{},"sourceType":"module"}