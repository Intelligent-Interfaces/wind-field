{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Analyser } from \"./Analyser\";\n/**\n * The base class for Metering classes.\n */\n\nvar MeterBase =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MeterBase, _super);\n\n  function MeterBase() {\n    var _this = _super.call(this, optionsFromArguments(MeterBase.getDefaults(), arguments)) || this;\n\n    _this.name = \"MeterBase\";\n    _this.input = _this.output = _this._analyser = new Analyser({\n      context: _this.context,\n      size: 256,\n      type: \"waveform\"\n    });\n    return _this;\n  }\n\n  MeterBase.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._analyser.dispose();\n\n    return this;\n  };\n\n  return MeterBase;\n}(ToneAudioNode);\n\nexport { MeterBase };","map":{"version":3,"sources":["../../../../Tone/component/analysis/MeterBase.ts"],"names":[],"mappings":";AAAA,SAAgC,aAAhC,QAA2E,kCAA3E;AACA,SAAS,oBAAT,QAAqC,0BAArC;AACA,SAAS,QAAT,QAAyB,YAAzB;AAIA;;;;AAGA,IAAA,SAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiE,EAAA,OAAA,CAAA,SAAA,CAAA,SAAA,EAAA,MAAA;;AAoBhE,WAAA,SAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,oBAAoB,CAAC,SAAS,CAAC,WAAV,EAAD,EAA0B,SAA1B,CAA1B,KAA+D,IADhE;;AAlBS,IAAA,KAAA,CAAA,IAAA,GAAe,WAAf;AAqBR,IAAA,KAAI,CAAC,KAAL,GAAa,KAAI,CAAC,MAAL,GAAc,KAAI,CAAC,SAAL,GAAiB,IAAI,QAAJ,CAAa;AACxD,MAAA,OAAO,EAAE,KAAI,CAAC,OAD0C;AAExD,MAAA,IAAI,EAAE,GAFkD;AAGxD,MAAA,IAAI,EAAE;AAHkD,KAAb,CAA5C;;AAKA;;AAED,EAAA,SAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACC,IAAA,MAAA,CAAA,SAAA,CAAM,OAAN,CAAa,IAAb,CAAa,IAAb;;AACA,SAAK,SAAL,CAAe,OAAf;;AACA,WAAO,IAAP;AACA,GAJD;;AAKD,SAAA,SAAA;AAAC,CAnCD,CAAiE,aAAjE,CAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Analyser } from \"./Analyser\";\n/**\n * The base class for Metering classes.\n */\nvar MeterBase = /** @class */ (function (_super) {\n    tslib_1.__extends(MeterBase, _super);\n    function MeterBase() {\n        var _this = _super.call(this, optionsFromArguments(MeterBase.getDefaults(), arguments)) || this;\n        _this.name = \"MeterBase\";\n        _this.input = _this.output = _this._analyser = new Analyser({\n            context: _this.context,\n            size: 256,\n            type: \"waveform\",\n        });\n        return _this;\n    }\n    MeterBase.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._analyser.dispose();\n        return this;\n    };\n    return MeterBase;\n}(ToneAudioNode));\nexport { MeterBase };\n//# sourceMappingURL=MeterBase.js.map"]},"metadata":{},"sourceType":"module"}