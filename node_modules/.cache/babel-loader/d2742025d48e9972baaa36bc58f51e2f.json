{"ast":null,"code":"\"use strict\";\n\n{\n  const defineMath = (name, assignment) => {\n    var configurable = typeof assignment === \"function\" ? true : false;\n    var writable = typeof assignment === \"function\" ? true : false;\n    var enumerable = typeof assignment === \"function\" ? true : false;\n    Object.defineProperty(Math, name, {\n      configurable: configurable,\n      enumerable: enumerable,\n      writable: writable,\n      value: assignment\n    });\n  };\n\n  defineMath(\"DEG_PER_RAD\", Math.PI / 180);\n  defineMath(\"RAD_PER_DEG\", 180 / Math.PI);\n  const f32A = new Float32Array(1);\n  defineMath(\"scale\", function scale(x, inLow, inHigh, outLow, outHigh) {\n    if (arguments.length === 0) {\n      return NaN;\n    }\n\n    if (Number.isNaN(x) || Number.isNaN(inLow) || Number.isNaN(inHigh) || Number.isNaN(outLow) || Number.isNaN(outHigh)) {\n      return NaN;\n    }\n\n    if (x === Infinity || x === -Infinity) {\n      return x;\n    }\n\n    return (x - inLow) * (outHigh - outLow) / (inHigh - inLow) + outLow;\n  });\n  defineMath(\"fscale\", function fscale(x, inLow, inHigh, outLow, outHigh) {\n    f32A[0] = Math.scale(x, inLow, inHigh, outLow, outHigh);\n    return f32A[0];\n  });\n  defineMath(\"clamp\", function clamp(x, lower, upper) {\n    return Math.min(upper, Math.max(lower, x));\n  });\n  defineMath(\"radians\", function radians(degrees) {\n    return degrees * Math.DEG_PER_RAD;\n  });\n  defineMath(\"degrees\", function degrees(radians) {\n    return radians * Math.RAD_PER_DEG;\n  });\n}","map":{"version":3,"sources":["/Users/erickoduniyi/Desktop/affective_chaos_control/Emulators/wind-field/node_modules/ecma-proposal-math-extensions/reference-implementation/index.js"],"names":["defineMath","name","assignment","configurable","writable","enumerable","Object","defineProperty","Math","value","PI","f32A","Float32Array","scale","x","inLow","inHigh","outLow","outHigh","arguments","length","NaN","Number","isNaN","Infinity","fscale","clamp","lower","upper","min","max","radians","degrees","DEG_PER_RAD","RAD_PER_DEG"],"mappings":"AAAA;;AAEA;AACE,QAAMA,UAAU,GAAG,CAACC,IAAD,EAAOC,UAAP,KAAsB;AACvC,QAAIC,YAAY,GAAG,OAAOD,UAAP,KAAsB,UAAtB,GAAmC,IAAnC,GAA0C,KAA7D;AACA,QAAIE,QAAQ,GAAG,OAAOF,UAAP,KAAsB,UAAtB,GAAmC,IAAnC,GAA0C,KAAzD;AACA,QAAIG,UAAU,GAAG,OAAOH,UAAP,KAAsB,UAAtB,GAAmC,IAAnC,GAA0C,KAA3D;AAEAI,IAAAA,MAAM,CAACC,cAAP,CAAsBC,IAAtB,EAA4BP,IAA5B,EAAkC;AAChCE,MAAAA,YAAY,EAAEA,YADkB;AAEhCE,MAAAA,UAAU,EAAEA,UAFoB;AAGhCD,MAAAA,QAAQ,EAAEA,QAHsB;AAIhCK,MAAAA,KAAK,EAAEP;AAJyB,KAAlC;AAMD,GAXD;;AAaAF,EAAAA,UAAU,CAAC,aAAD,EAAgBQ,IAAI,CAACE,EAAL,GAAU,GAA1B,CAAV;AACAV,EAAAA,UAAU,CAAC,aAAD,EAAgB,MAAMQ,IAAI,CAACE,EAA3B,CAAV;AAEA,QAAMC,IAAI,GAAG,IAAIC,YAAJ,CAAiB,CAAjB,CAAb;AAEAZ,EAAAA,UAAU,CAAC,OAAD,EAAU,SAASa,KAAT,CAAeC,CAAf,EAAkBC,KAAlB,EAAyBC,MAAzB,EAAiCC,MAAjC,EAAyCC,OAAzC,EAAkD;AACpE,QAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,aAAOC,GAAP;AACD;;AAED,QAAIC,MAAM,CAACC,KAAP,CAAaT,CAAb,KACAQ,MAAM,CAACC,KAAP,CAAaR,KAAb,CADA,IAEAO,MAAM,CAACC,KAAP,CAAaP,MAAb,CAFA,IAGAM,MAAM,CAACC,KAAP,CAAaN,MAAb,CAHA,IAIAK,MAAM,CAACC,KAAP,CAAaL,OAAb,CAJJ,EAI2B;AACzB,aAAOG,GAAP;AACD;;AAED,QAAIP,CAAC,KAAKU,QAAN,IACAV,CAAC,KAAK,CAACU,QADX,EACqB;AACnB,aAAOV,CAAP;AACD;;AAED,WAAO,CAACA,CAAC,GAAGC,KAAL,KAAeG,OAAO,GAAGD,MAAzB,KACJD,MAAM,GAAGD,KADL,IACcE,MADrB;AAED,GApBS,CAAV;AAsBAjB,EAAAA,UAAU,CAAC,QAAD,EAAW,SAASyB,MAAT,CAAgBX,CAAhB,EAAmBC,KAAnB,EAA0BC,MAA1B,EAAkCC,MAAlC,EAA0CC,OAA1C,EAAmD;AACtEP,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUH,IAAI,CAACK,KAAL,CAAWC,CAAX,EAAcC,KAAd,EAAqBC,MAArB,EAA6BC,MAA7B,EAAqCC,OAArC,CAAV;AACA,WAAOP,IAAI,CAAC,CAAD,CAAX;AACD,GAHS,CAAV;AAKAX,EAAAA,UAAU,CAAC,OAAD,EAAU,SAAS0B,KAAT,CAAeZ,CAAf,EAAkBa,KAAlB,EAAyBC,KAAzB,EAAgC;AAClD,WAAOpB,IAAI,CAACqB,GAAL,CAASD,KAAT,EAAgBpB,IAAI,CAACsB,GAAL,CAASH,KAAT,EAAgBb,CAAhB,CAAhB,CAAP;AACD,GAFS,CAAV;AAIAd,EAAAA,UAAU,CAAC,SAAD,EAAY,SAAS+B,OAAT,CAAiBC,OAAjB,EAA0B;AAC9C,WAAOA,OAAO,GAAGxB,IAAI,CAACyB,WAAtB;AACD,GAFS,CAAV;AAIAjC,EAAAA,UAAU,CAAC,SAAD,EAAY,SAASgC,OAAT,CAAiBD,OAAjB,EAA0B;AAC9C,WAAOA,OAAO,GAAGvB,IAAI,CAAC0B,WAAtB;AACD,GAFS,CAAV;AAGD","sourcesContent":["\"use strict\";\n\n{\n  const defineMath = (name, assignment) => {\n    var configurable = typeof assignment === \"function\" ? true : false;\n    var writable = typeof assignment === \"function\" ? true : false;\n    var enumerable = typeof assignment === \"function\" ? true : false;\n\n    Object.defineProperty(Math, name, {\n      configurable: configurable,\n      enumerable: enumerable,\n      writable: writable,\n      value: assignment\n    });\n  };\n\n  defineMath(\"DEG_PER_RAD\", Math.PI / 180);\n  defineMath(\"RAD_PER_DEG\", 180 / Math.PI);\n\n  const f32A = new Float32Array(1);\n\n  defineMath(\"scale\", function scale(x, inLow, inHigh, outLow, outHigh) {\n    if (arguments.length === 0) {\n      return NaN;\n    }\n\n    if (Number.isNaN(x) ||\n        Number.isNaN(inLow) ||\n        Number.isNaN(inHigh) ||\n        Number.isNaN(outLow) ||\n        Number.isNaN(outHigh)) {\n      return NaN;\n    }\n\n    if (x === Infinity ||\n        x === -Infinity) {\n      return x;\n    }\n\n    return (x - inLow) * (outHigh - outLow) /\n      (inHigh - inLow) + outLow;\n  });\n\n  defineMath(\"fscale\", function fscale(x, inLow, inHigh, outLow, outHigh) {\n    f32A[0] = Math.scale(x, inLow, inHigh, outLow, outHigh);\n    return f32A[0];\n  });\n\n  defineMath(\"clamp\", function clamp(x, lower, upper) {\n    return Math.min(upper, Math.max(lower, x));\n  });\n\n  defineMath(\"radians\", function radians(degrees) {\n    return degrees * Math.DEG_PER_RAD;\n  });\n\n  defineMath(\"degrees\", function degrees(radians) {\n    return radians * Math.RAD_PER_DEG;\n  });\n}\n"]},"metadata":{},"sourceType":"script"}