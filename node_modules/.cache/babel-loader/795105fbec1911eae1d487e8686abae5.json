{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase } from \"./MeterBase\";\n/**\n * DCMeter gets the raw value of the input signal at the current time.\n *\n * @example\n * import { DCMeter, UserMedia } from \"tone\";\n * const meter = new DCMeter();\n * const mic = new UserMedia();\n * mic.open();\n * // connect mic to the meter\n * mic.connect(meter);\n * // the current level of the mic\n * const level = meter.getValue();\n * @category Component\n */\n\nvar DCMeter =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(DCMeter, _super);\n\n  function DCMeter() {\n    var _this = _super.call(this, optionsFromArguments(DCMeter.getDefaults(), arguments)) || this;\n\n    _this.name = \"DCMeter\";\n    _this._analyser.type = \"waveform\";\n    _this._analyser.size = 256;\n    return _this;\n  }\n  /**\n   * Get the signal value of the incoming signal\n   */\n\n\n  DCMeter.prototype.getValue = function () {\n    var value = this._analyser.getValue();\n\n    return value[0];\n  };\n\n  return DCMeter;\n}(MeterBase);\n\nexport { DCMeter };","map":{"version":3,"sources":["../../../../Tone/component/analysis/DCMeter.ts"],"names":[],"mappings":";AAAA,SAAS,oBAAT,QAAqC,0BAArC;AACA,SAAS,SAAT,QAA4C,aAA5C;AAIA;;;;;;;;;;;;;;;AAcA,IAAA,OAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6B,EAAA,OAAA,CAAA,SAAA,CAAA,OAAA,EAAA,MAAA;;AAK5B,WAAA,OAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,oBAAoB,CAAC,OAAO,CAAC,WAAR,EAAD,EAAwB,SAAxB,CAA1B,KAA6D,IAD9D;;AAHS,IAAA,KAAA,CAAA,IAAA,GAAe,SAAf;AAMR,IAAA,KAAI,CAAC,SAAL,CAAe,IAAf,GAAsB,UAAtB;AACA,IAAA,KAAI,CAAC,SAAL,CAAe,IAAf,GAAsB,GAAtB;;AACA;AAED;;;;;AAGA,EAAA,OAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACC,QAAM,KAAK,GAAG,KAAK,SAAL,CAAe,QAAf,EAAd;;AACA,WAAO,KAAK,CAAC,CAAD,CAAZ;AACA,GAHD;;AAID,SAAA,OAAA;AAAC,CAnBD,CAA6B,SAA7B,CAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase } from \"./MeterBase\";\n/**\n * DCMeter gets the raw value of the input signal at the current time.\n *\n * @example\n * import { DCMeter, UserMedia } from \"tone\";\n * const meter = new DCMeter();\n * const mic = new UserMedia();\n * mic.open();\n * // connect mic to the meter\n * mic.connect(meter);\n * // the current level of the mic\n * const level = meter.getValue();\n * @category Component\n */\nvar DCMeter = /** @class */ (function (_super) {\n    tslib_1.__extends(DCMeter, _super);\n    function DCMeter() {\n        var _this = _super.call(this, optionsFromArguments(DCMeter.getDefaults(), arguments)) || this;\n        _this.name = \"DCMeter\";\n        _this._analyser.type = \"waveform\";\n        _this._analyser.size = 256;\n        return _this;\n    }\n    /**\n     * Get the signal value of the incoming signal\n     */\n    DCMeter.prototype.getValue = function () {\n        var value = this._analyser.getValue();\n        return value[0];\n    };\n    return DCMeter;\n}(MeterBase));\nexport { DCMeter };\n//# sourceMappingURL=DCMeter.js.map"]},"metadata":{},"sourceType":"module"}