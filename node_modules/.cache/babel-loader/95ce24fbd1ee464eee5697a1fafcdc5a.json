{"ast":null,"code":"import _objectSpread from \"/Users/erickoduniyi/Desktop/Work/multi_media_signal_processing/skeuomorphic-synth-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/erickoduniyi/Desktop/Work/multi_media_signal_processing/skeuomorphic-synth-master/src/components/Piano/index.tsx\";\nimport React from 'react';\nimport styled from '../../styled';\nimport { keyboardMap } from '../../utils/piano-keys';\nimport { Slot } from '../Slot';\nimport { Grid } from '../Grid';\nimport { PianoKey } from '../PianoKey';\nconst PianoStyles = styled.div`\n  grid-area: 4 / 4 / 18 / 18;\n  display: grid;\n  grid-template-columns: repeat(14, 1fr);\n  grid-template-rows: 1fr 2fr;\n`;\nconst PianoBlackKeys = styled.div`\n  grid-area: 1 / 1 / span 1 / span 14;\n  display: grid;\n  grid-template-columns: repeat(14, 1fr);\n  grid-template-rows: 1fr;\n`;\nconst PianoWhiteKeys = styled.div`\n  grid-area: 2 / 1 / span 2 / span 14;\n  display: grid;\n  grid-template-columns: repeat(14, 1fr);\n  grid-template-rows: repeat(1, 1fr);\n`;\n\nconst Piano = ({\n  octave = 4\n}) => {\n  const whiteKeys = () => {\n    // const visibleKeys = [...whiteKeyNames.slice(3), ...whiteKeyNames, ...whiteKeyNames.slice(0, 3)];\n    const visibleWhiteKeys = keyboardMap.map((item, index) => _objectSpread({}, item, {\n      i: index\n    })).filter(item => !item.key.includes('#'));\n    return visibleWhiteKeys.map((visibleWhiteKey, index) => React.createElement(Slot, {\n      key: index,\n      placement: `1 / ${index + 1} / span 2 / span 1`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(PianoKey, {\n      keyCode: visibleWhiteKey.code,\n      octave: index < 4 ? octave - 1 : index > 10 ? octave + 1 : octave,\n      note: visibleWhiteKey.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })));\n  };\n\n  return React.createElement(PianoStyles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(PianoBlackKeys, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Slot, {\n    placement: \"1 / 1 / span 1 / span 4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    columns: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Slot, {\n    placement: \"1 / 1 / span 1 / span 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(PianoKey, {\n    keyCode: \"Digit1\",\n    pl: 60,\n    octave: octave - 1,\n    color: \"#F5AEE4;\",\n    note: \"F#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(Slot, {\n    placement: \"1 / 4 / span 1 / span 2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(PianoKey, {\n    keyCode: \"Digit2\",\n    color: \"#F5AEE4;\",\n    octave: octave - 1,\n    note: \"G#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(Slot, {\n    placement: \"1 / 6 / span 1 / span 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(PianoKey, {\n    keyCode: \"Digit3\",\n    pr: 60,\n    color: \"#F5AEE4;\",\n    octave: octave - 1,\n    note: \"A#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })))), React.createElement(Slot, {\n    placement: \"1 / 5 / span 1 / span 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    columns: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Slot, {\n    placement: \"1 / 1 / span 1 / span 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(PianoKey, {\n    keyCode: \"Digit5\",\n    pl: 60,\n    color: \"#F5AEE4;\",\n    octave: octave,\n    note: \"C#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(Slot, {\n    placement: \"1 / 4 / span 1 / span 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(PianoKey, {\n    keyCode: \"Digit6\",\n    pr: 60,\n    color: \"#F5AEE4;\",\n    octave: octave,\n    note: \"D#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })))), React.createElement(Slot, {\n    placement: \"1 / 8 / span 1 / span 4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    columns: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Slot, {\n    placement: \"1 / 1 / span 1 / span 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(PianoKey, {\n    keyCode: \"Digit7\",\n    pl: 60,\n    color: \"#F5AEE4;\",\n    octave: octave,\n    note: \"F#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(Slot, {\n    placement: \"1 / 4 / span 1 / span 2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(PianoKey, {\n    keyCode: \"Digit8\",\n    color: \"#F5AEE4;\",\n    octave: octave,\n    note: \"G#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(Slot, {\n    placement: \"1 / 6 / span 1 / span 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(PianoKey, {\n    keyCode: \"Digit9\",\n    pr: 60,\n    color: \"#F5AEE4;\",\n    octave: octave,\n    note: \"A#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })))), React.createElement(Slot, {\n    placement: \"1 / 12 / span 1 / span 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    columns: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Slot, {\n    placement: \"1 / 1 / span 1 / span 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(PianoKey, {\n    keyCode: \"Minus\",\n    pl: 60,\n    color: \"dark\",\n    octave: octave + 1,\n    note: \"C#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(Slot, {\n    placement: \"1 / 4 / span 1 / span 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(PianoKey, {\n    keyCode: \"Equal\",\n    pr: 60,\n    color: \"dark\",\n    octave: octave + 1,\n    note: \"D#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }))))), React.createElement(PianoWhiteKeys, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, whiteKeys()));\n};\n\nexport { Piano };","map":{"version":3,"sources":["/Users/erickoduniyi/Desktop/Work/multi_media_signal_processing/skeuomorphic-synth-master/src/components/Piano/index.tsx"],"names":["React","styled","keyboardMap","Slot","Grid","PianoKey","PianoStyles","div","PianoBlackKeys","PianoWhiteKeys","Piano","octave","whiteKeys","visibleWhiteKeys","map","item","index","i","filter","key","includes","visibleWhiteKey","code"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from '../../styled';\nimport { keyboardMap } from '../../utils/piano-keys';\nimport { Slot } from '../Slot';\nimport { Grid } from '../Grid';\nimport { PianoKey } from '../PianoKey';\n\nconst PianoStyles = styled.div`\n  grid-area: 4 / 4 / 18 / 18;\n  display: grid;\n  grid-template-columns: repeat(14, 1fr);\n  grid-template-rows: 1fr 2fr;\n`;\n\nconst PianoBlackKeys = styled.div`\n  grid-area: 1 / 1 / span 1 / span 14;\n  display: grid;\n  grid-template-columns: repeat(14, 1fr);\n  grid-template-rows: 1fr;\n`;\n\nconst PianoWhiteKeys = styled.div`\n  grid-area: 2 / 1 / span 2 / span 14;\n  display: grid;\n  grid-template-columns: repeat(14, 1fr);\n  grid-template-rows: repeat(1, 1fr);\n`;\n\nconst Piano: React.FC<{ octave?: number }> = ({ octave = 4 }) => {\n\n  const whiteKeys = () => {\n    // const visibleKeys = [...whiteKeyNames.slice(3), ...whiteKeyNames, ...whiteKeyNames.slice(0, 3)];\n    const visibleWhiteKeys = keyboardMap.map((item, index) => ({ ...item, i: index })).filter((item: { code: string, key: string }) => !item.key.includes('#'));\n\n    return visibleWhiteKeys.map((visibleWhiteKey: { code: string, key: string, i: number }, index: number) => (\n      <Slot key={index} placement={`1 / ${index + 1} / span 2 / span 1`}>\n        <PianoKey keyCode={visibleWhiteKey.code} octave={index < 4 ? octave - 1 : index > 10 ? octave + 1 : octave} note={visibleWhiteKey.key}/>\n      </Slot>\n    ));\n  }\n\n  return (\n    <PianoStyles>\n      <PianoBlackKeys>\n\n        <Slot placement=\"1 / 1 / span 1 / span 4\">\n          <Grid columns={8}>\n            <Slot placement=\"1 / 1 / span 1 / span 3\">\n              <PianoKey keyCode=\"Digit1\" pl={60} octave={octave - 1} color=\"#F5AEE4;\" note=\"F#\" />\n            </Slot>\n            <Slot placement=\"1 / 4 / span 1 / span 2\">\n              <PianoKey keyCode=\"Digit2\" color=\"#F5AEE4;\" octave={octave - 1} note=\"G#\" />\n            </Slot>\n            <Slot placement=\"1 / 6 / span 1 / span 3\">\n              <PianoKey keyCode=\"Digit3\" pr={60} color=\"#F5AEE4;\" octave={octave - 1} note=\"A#\" />\n            </Slot>\n          </Grid>\n        </Slot>\n\n        <Slot placement=\"1 / 5 / span 1 / span 3\">\n          <Grid columns={6}>\n            <Slot placement=\"1 / 1 / span 1 / span 3\">\n              <PianoKey keyCode=\"Digit5\" pl={60} color=\"#F5AEE4;\" octave={octave} note=\"C#\" />\n            </Slot>\n            <Slot placement=\"1 / 4 / span 1 / span 3\">\n              <PianoKey keyCode=\"Digit6\" pr={60} color=\"#F5AEE4;\" octave={octave} note=\"D#\" />\n            </Slot>\n          </Grid>\n        </Slot>\n\n        <Slot placement=\"1 / 8 / span 1 / span 4\">\n          <Grid columns={8}>\n            <Slot placement=\"1 / 1 / span 1 / span 3\">\n              <PianoKey keyCode=\"Digit7\" pl={60} color=\"#F5AEE4;\" octave={octave} note=\"F#\" />\n            </Slot>\n            <Slot placement=\"1 / 4 / span 1 / span 2\">\n              <PianoKey keyCode=\"Digit8\" color=\"#F5AEE4;\" octave={octave} note=\"G#\" />\n            </Slot>\n            <Slot placement=\"1 / 6 / span 1 / span 3\">\n              <PianoKey keyCode=\"Digit9\" pr={60} color=\"#F5AEE4;\" octave={octave} note=\"A#\" />\n            </Slot>\n          </Grid>\n        </Slot>\n\n        <Slot placement=\"1 / 12 / span 1 / span 3\">\n          <Grid columns={6}>\n            <Slot placement=\"1 / 1 / span 1 / span 3\">\n              <PianoKey keyCode=\"Minus\" pl={60} color=\"dark\" octave={octave + 1} note=\"C#\" />\n            </Slot>\n            <Slot placement=\"1 / 4 / span 1 / span 3\">\n              <PianoKey keyCode=\"Equal\" pr={60} color=\"dark\" octave={octave + 1} note=\"D#\" />\n            </Slot>\n          </Grid>\n        </Slot>\n      </PianoBlackKeys>\n\n      <PianoWhiteKeys>\n        {whiteKeys()}\n      </PianoWhiteKeys>\n    </PianoStyles>\n  );\n}\n\nexport { Piano };\n"]},"metadata":{},"sourceType":"module"}