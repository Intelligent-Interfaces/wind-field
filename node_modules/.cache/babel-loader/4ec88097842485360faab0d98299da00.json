{"ast":null,"code":"/*! Source code licensed under Apache License 2.0. Copyright Â© 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nimport { Group } from \"./Pt\";\nexport const Const = {\n  xy: \"xy\",\n  yz: \"yz\",\n  xz: \"xz\",\n  xyz: \"xyz\",\n  horizontal: 0,\n  vertical: 1,\n  identical: 0,\n  right: 4,\n  bottom_right: 5,\n  bottom: 6,\n  bottom_left: 7,\n  left: 8,\n  top_left: 1,\n  top: 2,\n  top_right: 3,\n  epsilon: 0.0001,\n  max: Number.MAX_VALUE,\n  min: Number.MIN_VALUE,\n  pi: Math.PI,\n  two_pi: 6.283185307179586,\n  half_pi: 1.5707963267948966,\n  quarter_pi: 0.7853981633974483,\n  one_degree: 0.017453292519943295,\n  rad_to_deg: 57.29577951308232,\n  deg_to_rad: 0.017453292519943295,\n  gravity: 9.81,\n  newton: 0.10197,\n  gaussian: 0.3989422804014327\n};\nexport class Util {\n  static warnLevel(lv) {\n    if (lv) {\n      Util._warnLevel = lv;\n    }\n\n    return Util._warnLevel;\n  }\n\n  static getArgs(args) {\n    if (args.length < 1) return [];\n    let pos = [];\n    let isArray = Array.isArray(args[0]) || ArrayBuffer.isView(args[0]);\n\n    if (typeof args[0] === 'number') {\n      pos = Array.prototype.slice.call(args);\n    } else if (typeof args[0] === 'object' && !isArray) {\n      let a = [\"x\", \"y\", \"z\", \"w\"];\n      let p = args[0];\n\n      for (let i = 0; i < a.length; i++) {\n        if (p.length && i >= p.length || !(a[i] in p)) break;\n        pos.push(p[a[i]]);\n      }\n    } else if (isArray) {\n      pos = [].slice.call(args[0]);\n    }\n\n    return pos;\n  }\n\n  static warn(message = \"error\", defaultReturn = undefined) {\n    if (Util.warnLevel() == \"error\") {\n      throw new Error(message);\n    } else if (Util.warnLevel() == \"warn\") {\n      console.warn(message);\n    }\n\n    return defaultReturn;\n  }\n\n  static randomInt(range, start = 0) {\n    return Math.floor(Math.random() * range) + start;\n  }\n\n  static split(pts, size, stride, loopBack = false) {\n    let st = stride || size;\n    let chunks = [];\n\n    for (let i = 0; i < pts.length; i++) {\n      if (i * st + size > pts.length) {\n        if (loopBack) {\n          let g = pts.slice(i * st);\n          g = g.concat(pts.slice(0, (i * st + size) % size));\n          chunks.push(g);\n        } else {\n          break;\n        }\n      } else {\n        chunks.push(pts.slice(i * st, i * st + size));\n      }\n    }\n\n    return chunks;\n  }\n\n  static flatten(pts, flattenAsGroup = true) {\n    let arr = flattenAsGroup ? new Group() : new Array();\n    return arr.concat.apply(arr, pts);\n  }\n\n  static combine(a, b, op) {\n    let result = [];\n\n    for (let i = 0, len = a.length; i < len; i++) {\n      for (let k = 0, lenB = b.length; k < lenB; k++) {\n        result.push(op(a[i], b[k]));\n      }\n    }\n\n    return result;\n  }\n\n  static zip(arrays) {\n    let z = [];\n\n    for (let i = 0, len = arrays[0].length; i < len; i++) {\n      let p = [];\n\n      for (let k = 0; k < arrays.length; k++) {\n        p.push(arrays[k][i]);\n      }\n\n      z.push(p);\n    }\n\n    return z;\n  }\n\n  static stepper(max, min = 0, stride = 1, callback) {\n    let c = min;\n    return function () {\n      c += stride;\n\n      if (c >= max) {\n        c = min + (c - max);\n      }\n\n      if (callback) callback(c);\n      return c;\n    };\n  }\n\n  static forRange(fn, range, start = 0, step = 1) {\n    let temp = [];\n\n    for (let i = start, len = range; i < len; i += step) {\n      temp[i] = fn(i);\n    }\n\n    return temp;\n  }\n\n  static load(url, callback) {\n    var request = new XMLHttpRequest();\n    request.open('GET', url, true);\n\n    request.onload = function () {\n      if (request.status >= 200 && request.status < 400) {\n        callback(request.responseText, true);\n      } else {\n        callback(`Server error (${request.status}) when loading \"${url}\"`, false);\n      }\n    };\n\n    request.onerror = function () {\n      callback(`Unknown network error`, false);\n    };\n\n    request.send();\n  }\n\n}\nUtil._warnLevel = \"mute\";","map":{"version":3,"sources":["/Users/erickoduniyi/Desktop/affective_chaos_control/Emulators/wind-field/node_modules/pts/dist/es2015/Util.js"],"names":["Group","Const","xy","yz","xz","xyz","horizontal","vertical","identical","right","bottom_right","bottom","bottom_left","left","top_left","top","top_right","epsilon","max","Number","MAX_VALUE","min","MIN_VALUE","pi","Math","PI","two_pi","half_pi","quarter_pi","one_degree","rad_to_deg","deg_to_rad","gravity","newton","gaussian","Util","warnLevel","lv","_warnLevel","getArgs","args","length","pos","isArray","Array","ArrayBuffer","isView","prototype","slice","call","a","p","i","push","warn","message","defaultReturn","undefined","Error","console","randomInt","range","start","floor","random","split","pts","size","stride","loopBack","st","chunks","g","concat","flatten","flattenAsGroup","arr","apply","combine","b","op","result","len","k","lenB","zip","arrays","z","stepper","callback","c","forRange","fn","step","temp","load","url","request","XMLHttpRequest","open","onload","status","responseText","onerror","send"],"mappings":"AAAA;AACA,SAASA,KAAT,QAAsB,MAAtB;AACA,OAAO,MAAMC,KAAK,GAAG;AACjBC,EAAAA,EAAE,EAAE,IADa;AAEjBC,EAAAA,EAAE,EAAE,IAFa;AAGjBC,EAAAA,EAAE,EAAE,IAHa;AAIjBC,EAAAA,GAAG,EAAE,KAJY;AAKjBC,EAAAA,UAAU,EAAE,CALK;AAMjBC,EAAAA,QAAQ,EAAE,CANO;AAOjBC,EAAAA,SAAS,EAAE,CAPM;AAQjBC,EAAAA,KAAK,EAAE,CARU;AASjBC,EAAAA,YAAY,EAAE,CATG;AAUjBC,EAAAA,MAAM,EAAE,CAVS;AAWjBC,EAAAA,WAAW,EAAE,CAXI;AAYjBC,EAAAA,IAAI,EAAE,CAZW;AAajBC,EAAAA,QAAQ,EAAE,CAbO;AAcjBC,EAAAA,GAAG,EAAE,CAdY;AAejBC,EAAAA,SAAS,EAAE,CAfM;AAgBjBC,EAAAA,OAAO,EAAE,MAhBQ;AAiBjBC,EAAAA,GAAG,EAAEC,MAAM,CAACC,SAjBK;AAkBjBC,EAAAA,GAAG,EAAEF,MAAM,CAACG,SAlBK;AAmBjBC,EAAAA,EAAE,EAAEC,IAAI,CAACC,EAnBQ;AAoBjBC,EAAAA,MAAM,EAAE,iBApBS;AAqBjBC,EAAAA,OAAO,EAAE,kBArBQ;AAsBjBC,EAAAA,UAAU,EAAE,kBAtBK;AAuBjBC,EAAAA,UAAU,EAAE,oBAvBK;AAwBjBC,EAAAA,UAAU,EAAE,iBAxBK;AAyBjBC,EAAAA,UAAU,EAAE,oBAzBK;AA0BjBC,EAAAA,OAAO,EAAE,IA1BQ;AA2BjBC,EAAAA,MAAM,EAAE,OA3BS;AA4BjBC,EAAAA,QAAQ,EAAE;AA5BO,CAAd;AA8BP,OAAO,MAAMC,IAAN,CAAW;AACd,SAAOC,SAAP,CAAiBC,EAAjB,EAAqB;AACjB,QAAIA,EAAJ,EAAQ;AACJF,MAAAA,IAAI,CAACG,UAAL,GAAkBD,EAAlB;AACH;;AACD,WAAOF,IAAI,CAACG,UAAZ;AACH;;AACD,SAAOC,OAAP,CAAeC,IAAf,EAAqB;AACjB,QAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EACI,OAAO,EAAP;AACJ,QAAIC,GAAG,GAAG,EAAV;AACA,QAAIC,OAAO,GAAGC,KAAK,CAACD,OAAN,CAAcH,IAAI,CAAC,CAAD,CAAlB,KAA0BK,WAAW,CAACC,MAAZ,CAAmBN,IAAI,CAAC,CAAD,CAAvB,CAAxC;;AACA,QAAI,OAAOA,IAAI,CAAC,CAAD,CAAX,KAAmB,QAAvB,EAAiC;AAC7BE,MAAAA,GAAG,GAAGE,KAAK,CAACG,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BT,IAA3B,CAAN;AACH,KAFD,MAGK,IAAI,OAAOA,IAAI,CAAC,CAAD,CAAX,KAAmB,QAAnB,IAA+B,CAACG,OAApC,EAA6C;AAC9C,UAAIO,CAAC,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAR;AACA,UAAIC,CAAC,GAAGX,IAAI,CAAC,CAAD,CAAZ;;AACA,WAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAAC,CAACT,MAAtB,EAA8BW,CAAC,EAA/B,EAAmC;AAC/B,YAAKD,CAAC,CAACV,MAAF,IAAYW,CAAC,IAAID,CAAC,CAACV,MAApB,IAA+B,EAAES,CAAC,CAACE,CAAD,CAAD,IAAQD,CAAV,CAAnC,EACI;AACJT,QAAAA,GAAG,CAACW,IAAJ,CAASF,CAAC,CAACD,CAAC,CAACE,CAAD,CAAF,CAAV;AACH;AACJ,KARI,MASA,IAAIT,OAAJ,EAAa;AACdD,MAAAA,GAAG,GAAG,GAAGM,KAAH,CAASC,IAAT,CAAcT,IAAI,CAAC,CAAD,CAAlB,CAAN;AACH;;AACD,WAAOE,GAAP;AACH;;AACD,SAAOY,IAAP,CAAYC,OAAO,GAAG,OAAtB,EAA+BC,aAAa,GAAGC,SAA/C,EAA0D;AACtD,QAAItB,IAAI,CAACC,SAAL,MAAoB,OAAxB,EAAiC;AAC7B,YAAM,IAAIsB,KAAJ,CAAUH,OAAV,CAAN;AACH,KAFD,MAGK,IAAIpB,IAAI,CAACC,SAAL,MAAoB,MAAxB,EAAgC;AACjCuB,MAAAA,OAAO,CAACL,IAAR,CAAaC,OAAb;AACH;;AACD,WAAOC,aAAP;AACH;;AACD,SAAOI,SAAP,CAAiBC,KAAjB,EAAwBC,KAAK,GAAG,CAAhC,EAAmC;AAC/B,WAAOtC,IAAI,CAACuC,KAAL,CAAWvC,IAAI,CAACwC,MAAL,KAAgBH,KAA3B,IAAoCC,KAA3C;AACH;;AACD,SAAOG,KAAP,CAAaC,GAAb,EAAkBC,IAAlB,EAAwBC,MAAxB,EAAgCC,QAAQ,GAAG,KAA3C,EAAkD;AAC9C,QAAIC,EAAE,GAAGF,MAAM,IAAID,IAAnB;AACA,QAAII,MAAM,GAAG,EAAb;;AACA,SAAK,IAAInB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGc,GAAG,CAACzB,MAAxB,EAAgCW,CAAC,EAAjC,EAAqC;AACjC,UAAIA,CAAC,GAAGkB,EAAJ,GAASH,IAAT,GAAgBD,GAAG,CAACzB,MAAxB,EAAgC;AAC5B,YAAI4B,QAAJ,EAAc;AACV,cAAIG,CAAC,GAAGN,GAAG,CAAClB,KAAJ,CAAUI,CAAC,GAAGkB,EAAd,CAAR;AACAE,UAAAA,CAAC,GAAGA,CAAC,CAACC,MAAF,CAASP,GAAG,CAAClB,KAAJ,CAAU,CAAV,EAAa,CAACI,CAAC,GAAGkB,EAAJ,GAASH,IAAV,IAAkBA,IAA/B,CAAT,CAAJ;AACAI,UAAAA,MAAM,CAAClB,IAAP,CAAYmB,CAAZ;AACH,SAJD,MAKK;AACD;AACH;AACJ,OATD,MAUK;AACDD,QAAAA,MAAM,CAAClB,IAAP,CAAYa,GAAG,CAAClB,KAAJ,CAAUI,CAAC,GAAGkB,EAAd,EAAkBlB,CAAC,GAAGkB,EAAJ,GAASH,IAA3B,CAAZ;AACH;AACJ;;AACD,WAAOI,MAAP;AACH;;AACD,SAAOG,OAAP,CAAeR,GAAf,EAAoBS,cAAc,GAAG,IAArC,EAA2C;AACvC,QAAIC,GAAG,GAAID,cAAD,GAAmB,IAAI3E,KAAJ,EAAnB,GAAiC,IAAI4C,KAAJ,EAA3C;AACA,WAAOgC,GAAG,CAACH,MAAJ,CAAWI,KAAX,CAAiBD,GAAjB,EAAsBV,GAAtB,CAAP;AACH;;AACD,SAAOY,OAAP,CAAe5B,CAAf,EAAkB6B,CAAlB,EAAqBC,EAArB,EAAyB;AACrB,QAAIC,MAAM,GAAG,EAAb;;AACA,SAAK,IAAI7B,CAAC,GAAG,CAAR,EAAW8B,GAAG,GAAGhC,CAAC,CAACT,MAAxB,EAAgCW,CAAC,GAAG8B,GAApC,EAAyC9B,CAAC,EAA1C,EAA8C;AAC1C,WAAK,IAAI+B,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAGL,CAAC,CAACtC,MAAzB,EAAiC0C,CAAC,GAAGC,IAArC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5CF,QAAAA,MAAM,CAAC5B,IAAP,CAAY2B,EAAE,CAAC9B,CAAC,CAACE,CAAD,CAAF,EAAO2B,CAAC,CAACI,CAAD,CAAR,CAAd;AACH;AACJ;;AACD,WAAOF,MAAP;AACH;;AACD,SAAOI,GAAP,CAAWC,MAAX,EAAmB;AACf,QAAIC,CAAC,GAAG,EAAR;;AACA,SAAK,IAAInC,CAAC,GAAG,CAAR,EAAW8B,GAAG,GAAGI,MAAM,CAAC,CAAD,CAAN,CAAU7C,MAAhC,EAAwCW,CAAC,GAAG8B,GAA5C,EAAiD9B,CAAC,EAAlD,EAAsD;AAClD,UAAID,CAAC,GAAG,EAAR;;AACA,WAAK,IAAIgC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGG,MAAM,CAAC7C,MAA3B,EAAmC0C,CAAC,EAApC,EAAwC;AACpChC,QAAAA,CAAC,CAACE,IAAF,CAAOiC,MAAM,CAACH,CAAD,CAAN,CAAU/B,CAAV,CAAP;AACH;;AACDmC,MAAAA,CAAC,CAAClC,IAAF,CAAOF,CAAP;AACH;;AACD,WAAOoC,CAAP;AACH;;AACD,SAAOC,OAAP,CAAetE,GAAf,EAAoBG,GAAG,GAAG,CAA1B,EAA6B+C,MAAM,GAAG,CAAtC,EAAyCqB,QAAzC,EAAmD;AAC/C,QAAIC,CAAC,GAAGrE,GAAR;AACA,WAAO,YAAY;AACfqE,MAAAA,CAAC,IAAItB,MAAL;;AACA,UAAIsB,CAAC,IAAIxE,GAAT,EAAc;AACVwE,QAAAA,CAAC,GAAGrE,GAAG,IAAIqE,CAAC,GAAGxE,GAAR,CAAP;AACH;;AACD,UAAIuE,QAAJ,EACIA,QAAQ,CAACC,CAAD,CAAR;AACJ,aAAOA,CAAP;AACH,KARD;AASH;;AACD,SAAOC,QAAP,CAAgBC,EAAhB,EAAoB/B,KAApB,EAA2BC,KAAK,GAAG,CAAnC,EAAsC+B,IAAI,GAAG,CAA7C,EAAgD;AAC5C,QAAIC,IAAI,GAAG,EAAX;;AACA,SAAK,IAAI1C,CAAC,GAAGU,KAAR,EAAeoB,GAAG,GAAGrB,KAA1B,EAAiCT,CAAC,GAAG8B,GAArC,EAA0C9B,CAAC,IAAIyC,IAA/C,EAAqD;AACjDC,MAAAA,IAAI,CAAC1C,CAAD,CAAJ,GAAUwC,EAAE,CAACxC,CAAD,CAAZ;AACH;;AACD,WAAO0C,IAAP;AACH;;AACD,SAAOC,IAAP,CAAYC,GAAZ,EAAiBP,QAAjB,EAA2B;AACvB,QAAIQ,OAAO,GAAG,IAAIC,cAAJ,EAAd;AACAD,IAAAA,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoBH,GAApB,EAAyB,IAAzB;;AACAC,IAAAA,OAAO,CAACG,MAAR,GAAiB,YAAY;AACzB,UAAIH,OAAO,CAACI,MAAR,IAAkB,GAAlB,IAAyBJ,OAAO,CAACI,MAAR,GAAiB,GAA9C,EAAmD;AAC/CZ,QAAAA,QAAQ,CAACQ,OAAO,CAACK,YAAT,EAAuB,IAAvB,CAAR;AACH,OAFD,MAGK;AACDb,QAAAA,QAAQ,CAAE,iBAAgBQ,OAAO,CAACI,MAAO,mBAAkBL,GAAI,GAAvD,EAA2D,KAA3D,CAAR;AACH;AACJ,KAPD;;AAQAC,IAAAA,OAAO,CAACM,OAAR,GAAkB,YAAY;AAC1Bd,MAAAA,QAAQ,CAAE,uBAAF,EAA0B,KAA1B,CAAR;AACH,KAFD;;AAGAQ,IAAAA,OAAO,CAACO,IAAR;AACH;;AAvHa;AAyHlBrE,IAAI,CAACG,UAAL,GAAkB,MAAlB","sourcesContent":["/*! Source code licensed under Apache License 2.0. Copyright Â© 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nimport { Group } from \"./Pt\";\nexport const Const = {\n    xy: \"xy\",\n    yz: \"yz\",\n    xz: \"xz\",\n    xyz: \"xyz\",\n    horizontal: 0,\n    vertical: 1,\n    identical: 0,\n    right: 4,\n    bottom_right: 5,\n    bottom: 6,\n    bottom_left: 7,\n    left: 8,\n    top_left: 1,\n    top: 2,\n    top_right: 3,\n    epsilon: 0.0001,\n    max: Number.MAX_VALUE,\n    min: Number.MIN_VALUE,\n    pi: Math.PI,\n    two_pi: 6.283185307179586,\n    half_pi: 1.5707963267948966,\n    quarter_pi: 0.7853981633974483,\n    one_degree: 0.017453292519943295,\n    rad_to_deg: 57.29577951308232,\n    deg_to_rad: 0.017453292519943295,\n    gravity: 9.81,\n    newton: 0.10197,\n    gaussian: 0.3989422804014327\n};\nexport class Util {\n    static warnLevel(lv) {\n        if (lv) {\n            Util._warnLevel = lv;\n        }\n        return Util._warnLevel;\n    }\n    static getArgs(args) {\n        if (args.length < 1)\n            return [];\n        let pos = [];\n        let isArray = Array.isArray(args[0]) || ArrayBuffer.isView(args[0]);\n        if (typeof args[0] === 'number') {\n            pos = Array.prototype.slice.call(args);\n        }\n        else if (typeof args[0] === 'object' && !isArray) {\n            let a = [\"x\", \"y\", \"z\", \"w\"];\n            let p = args[0];\n            for (let i = 0; i < a.length; i++) {\n                if ((p.length && i >= p.length) || !(a[i] in p))\n                    break;\n                pos.push(p[a[i]]);\n            }\n        }\n        else if (isArray) {\n            pos = [].slice.call(args[0]);\n        }\n        return pos;\n    }\n    static warn(message = \"error\", defaultReturn = undefined) {\n        if (Util.warnLevel() == \"error\") {\n            throw new Error(message);\n        }\n        else if (Util.warnLevel() == \"warn\") {\n            console.warn(message);\n        }\n        return defaultReturn;\n    }\n    static randomInt(range, start = 0) {\n        return Math.floor(Math.random() * range) + start;\n    }\n    static split(pts, size, stride, loopBack = false) {\n        let st = stride || size;\n        let chunks = [];\n        for (let i = 0; i < pts.length; i++) {\n            if (i * st + size > pts.length) {\n                if (loopBack) {\n                    let g = pts.slice(i * st);\n                    g = g.concat(pts.slice(0, (i * st + size) % size));\n                    chunks.push(g);\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                chunks.push(pts.slice(i * st, i * st + size));\n            }\n        }\n        return chunks;\n    }\n    static flatten(pts, flattenAsGroup = true) {\n        let arr = (flattenAsGroup) ? new Group() : new Array();\n        return arr.concat.apply(arr, pts);\n    }\n    static combine(a, b, op) {\n        let result = [];\n        for (let i = 0, len = a.length; i < len; i++) {\n            for (let k = 0, lenB = b.length; k < lenB; k++) {\n                result.push(op(a[i], b[k]));\n            }\n        }\n        return result;\n    }\n    static zip(arrays) {\n        let z = [];\n        for (let i = 0, len = arrays[0].length; i < len; i++) {\n            let p = [];\n            for (let k = 0; k < arrays.length; k++) {\n                p.push(arrays[k][i]);\n            }\n            z.push(p);\n        }\n        return z;\n    }\n    static stepper(max, min = 0, stride = 1, callback) {\n        let c = min;\n        return function () {\n            c += stride;\n            if (c >= max) {\n                c = min + (c - max);\n            }\n            if (callback)\n                callback(c);\n            return c;\n        };\n    }\n    static forRange(fn, range, start = 0, step = 1) {\n        let temp = [];\n        for (let i = start, len = range; i < len; i += step) {\n            temp[i] = fn(i);\n        }\n        return temp;\n    }\n    static load(url, callback) {\n        var request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.onload = function () {\n            if (request.status >= 200 && request.status < 400) {\n                callback(request.responseText, true);\n            }\n            else {\n                callback(`Server error (${request.status}) when loading \"${url}\"`, false);\n            }\n        };\n        request.onerror = function () {\n            callback(`Unknown network error`, false);\n        };\n        request.send();\n    }\n}\nUtil._warnLevel = \"mute\";\n//# sourceMappingURL=Util.js.map"]},"metadata":{},"sourceType":"module"}