{"ast":null,"code":"import _slicedToArray from \"/Users/erickoduniyi/Desktop/Work/multi_media_signal_processing/skeuomorphic-synth-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/erickoduniyi/Desktop/Work/multi_media_signal_processing/skeuomorphic-synth-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/erickoduniyi/Desktop/Work/multi_media_signal_processing/skeuomorphic-synth-master/src/components/Button/index.tsx\";\nimport React, { useState, forwardRef } from 'react';\nimport styled from '../../styled';\nimport { space, color, get, border } from 'styled-system';\nconst ButtonInner = styled.div`\n  box-sizing: border-box;\n  border-radius: 40px;\n  height: 100%;\n  width: 100%;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  svg {\n    height: 32px;\n    width: 32px;\n  }\n`;\nconst defaultShadowPressed = `rgba(166, 171, 189, 0) 5px 5px 10px, rgb(244, 244, 244) -5px -5px 10px, rgba(166, 171, 189, 1) 3px 5px 10px inset, rgb(238, 238, 238) 4px 4px 4px inset`;\nconst defaultShadowRegular = `5px 5px 10px #A6ABBD, -5px -5px 10px #F4F4F4, inset 0px 1px 8px rgba(0, 0, 0, 0.05), inset 4px 4px 4px rgba(238, 238, 238, 0.5)`;\nconst darkShadowPressed = `rgba(166, 171, 189, 0) 5px 5px 10px, rgb(244, 244, 244) -5px -5px 10px, rgba(0, 0, 0, 1) 3px 5px 10px inset, rgb(0, 0, 0) 4px 4px 4px inset`;\nconst darkShadowRegular = `5px 5px 10px #A6ABBD, -5px -5px 10px #F4F4F4, inset 0px 1px 8px rgba(166, 171, 189, 0.05), inset 4px 4px 4px rgba(166, 171, 189, 0.5)`; // This controls the main outline of the op-1\n\nconst ButtonStyles = styled.button`\n  appearance: none;\n  border: none;\n  // background: #D9DCE5;\n  background: #C7A079;\n  // border: 3px solid #9F98F5;\n  border-radius: 6px;\n  outline: none;\n  height: 100%;\n  width: 100%;\n  padding: 15px;\n\n  ${ButtonInner} {\n    ${props => props.bg === 'dark' ? `\n      // border: 2px solid #D9DCE5;\n      border: 2px solid #C7A079;\n      box-shadow: ${props.down ? darkShadowPressed : darkShadowRegular};\n    ` : `\n      // background: #DCDFE7;\n      background: #C7A079;\n      box-shadow: ${props.down ? defaultShadowPressed : defaultShadowRegular};\n    `}\n\n    svg {\n      fill: ${props => get(props.theme.colors, props.color || 'dark')};\n    }\n\n    ${color}\n  }\n\n  ${space}\n  ${border}\n`;\n\nconst ButtonComponent = (_ref) => {\n  let ref = _ref.ref,\n      onClick = _ref.onClick,\n      children = _ref.children,\n      bg = _ref.bg,\n      rest = _objectWithoutProperties(_ref, [\"ref\", \"onClick\", \"children\", \"bg\"]);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        mouseDown = _useState2[0],\n        setMouseDown = _useState2[1];\n\n  return React.createElement(ButtonStyles, Object.assign({\n    bg: bg,\n    down: mouseDown,\n    onMouseDown: () => setMouseDown(true),\n    onMouseUp: () => setMouseDown(false),\n    onClick: onClick\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(ButtonInner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, children));\n};\n\nexport const Button = forwardRef((props, ref) => React.createElement(ButtonComponent, Object.assign({\n  ref: ref\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83\n  },\n  __self: this\n})));","map":{"version":3,"sources":["/Users/erickoduniyi/Desktop/Work/multi_media_signal_processing/skeuomorphic-synth-master/src/components/Button/index.tsx"],"names":["React","useState","forwardRef","styled","space","color","get","border","ButtonInner","div","defaultShadowPressed","defaultShadowRegular","darkShadowPressed","darkShadowRegular","ButtonStyles","button","props","bg","down","theme","colors","ButtonComponent","ref","onClick","children","rest","mouseDown","setMouseDown","Button"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAA6C,cAA7C;AACA,SAASC,KAAT,EAAyDC,KAAzD,EAAgEC,GAAhE,EAAkFC,MAAlF,QAAgG,eAAhG;AAQA,MAAMC,WAAW,GAAGL,MAAM,CAACM,GAAI;;;;;;;;;;;;;;CAA/B;AAgBA,MAAMC,oBAAoB,GAAI,yJAA9B;AACA,MAAMC,oBAAoB,GAAI,iIAA9B;AAEA,MAAMC,iBAAiB,GAAI,6IAA3B;AACA,MAAMC,iBAAiB,GAAI,uIAA3B,C,CAEA;;AACA,MAAMC,YAAY,GAAGX,MAAM,CAACY,MAAyB;;;;;;;;;;;;IAYjDP,WAAY;MACVQ,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAa,MAAb,GAAuB;;;oBAGlBD,KAAK,CAACE,IAAN,GAAaN,iBAAb,GAAiCC,iBAAkB;KAHxD,GAIN;;;oBAGWG,KAAK,CAACE,IAAN,GAAaR,oBAAb,GAAoCC,oBAAqB;KACvE;;;cAGQK,KAAK,IAAIV,GAAG,CAACU,KAAK,CAACG,KAAN,CAAYC,MAAb,EAAqBJ,KAAK,CAACX,KAAN,IAAe,MAApC,CAA4C;;;MAGhEA,KAAM;;;IAGRD,KAAM;IACNG,MAAO;CA/BX;;AAkCA,MAAMc,eAA2C,GAAG,UAA6C;AAAA,MAA1CC,GAA0C,QAA1CA,GAA0C;AAAA,MAArCC,OAAqC,QAArCA,OAAqC;AAAA,MAA5BC,QAA4B,QAA5BA,QAA4B;AAAA,MAAlBP,EAAkB,QAAlBA,EAAkB;AAAA,MAAXQ,IAAW;;AAAA,oBAC7DxB,QAAQ,CAAU,KAAV,CADqD;AAAA;AAAA,QACxFyB,SADwF;AAAA,QAC7EC,YAD6E;;AAG/F,SACE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAEV,EAAlB;AAAsB,IAAA,IAAI,EAAES,SAA5B;AAAuC,IAAA,WAAW,EAAE,MAAMC,YAAY,CAAC,IAAD,CAAtE;AAA8E,IAAA,SAAS,EAAE,MAAMA,YAAY,CAAC,KAAD,CAA3G;AAAoH,IAAA,OAAO,EAAEJ;AAA7H,KAA0IE,IAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QADH,CADF,CADF;AAOD,CAVD;;AAcA,OAAO,MAAMI,MAAM,GAAG1B,UAAU,CAAwB,CAACc,KAAD,EAAQM,GAAR,KACtD,oBAAC,eAAD;AAAiB,EAAA,GAAG,EAAEA;AAAtB,GAA+BN,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAD8B,CAAzB","sourcesContent":["import React, { useState, forwardRef } from 'react';\nimport styled, { IThemeStyledFunction } from '../../styled';\nimport { space, ColorProps, SpaceProps, BackgroundProps, color, get, BorderProps, border } from 'styled-system';\n\ntype ButtonProps = React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\ntype ButtonStyleProps = IThemeStyledFunction & ButtonProps & BorderProps & SpaceProps & ColorProps & BackgroundProps & {\n  bg?: string;\n  down?: boolean;\n};\n\nconst ButtonInner = styled.div`\n  box-sizing: border-box;\n  border-radius: 40px;\n  height: 100%;\n  width: 100%;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  svg {\n    height: 32px;\n    width: 32px;\n  }\n`;\n\nconst defaultShadowPressed = `rgba(166, 171, 189, 0) 5px 5px 10px, rgb(244, 244, 244) -5px -5px 10px, rgba(166, 171, 189, 1) 3px 5px 10px inset, rgb(238, 238, 238) 4px 4px 4px inset`;\nconst defaultShadowRegular = `5px 5px 10px #A6ABBD, -5px -5px 10px #F4F4F4, inset 0px 1px 8px rgba(0, 0, 0, 0.05), inset 4px 4px 4px rgba(238, 238, 238, 0.5)`;\n\nconst darkShadowPressed = `rgba(166, 171, 189, 0) 5px 5px 10px, rgb(244, 244, 244) -5px -5px 10px, rgba(0, 0, 0, 1) 3px 5px 10px inset, rgb(0, 0, 0) 4px 4px 4px inset`;\nconst darkShadowRegular = `5px 5px 10px #A6ABBD, -5px -5px 10px #F4F4F4, inset 0px 1px 8px rgba(166, 171, 189, 0.05), inset 4px 4px 4px rgba(166, 171, 189, 0.5)`;\n\n// This controls the main outline of the op-1\nconst ButtonStyles = styled.button<ButtonStyleProps>`\n  appearance: none;\n  border: none;\n  // background: #D9DCE5;\n  background: #C7A079;\n  // border: 3px solid #9F98F5;\n  border-radius: 6px;\n  outline: none;\n  height: 100%;\n  width: 100%;\n  padding: 15px;\n\n  ${ButtonInner} {\n    ${props => props.bg === 'dark' ? `\n      // border: 2px solid #D9DCE5;\n      border: 2px solid #C7A079;\n      box-shadow: ${props.down ? darkShadowPressed : darkShadowRegular};\n    ` : `\n      // background: #DCDFE7;\n      background: #C7A079;\n      box-shadow: ${props.down ? defaultShadowPressed : defaultShadowRegular};\n    `}\n\n    svg {\n      fill: ${props => get(props.theme.colors, props.color || 'dark')};\n    }\n\n    ${color}\n  }\n\n  ${space}\n  ${border}\n`;\n\nconst ButtonComponent: React.FC<ButtonStyleProps> = ({ ref, onClick, children, bg, ...rest }) => {\n  const [mouseDown, setMouseDown] = useState<boolean>(false);\n\n  return (\n    <ButtonStyles bg={bg} down={mouseDown} onMouseDown={() => setMouseDown(true)} onMouseUp={() => setMouseDown(false)} onClick={onClick} {...rest}>\n      <ButtonInner>\n        {children}\n      </ButtonInner>\n    </ButtonStyles>\n  );\n}\n\ntype Ref = HTMLButtonElement;\n\nexport const Button = forwardRef<Ref, ButtonStyleProps>((props, ref) => (\n  <ButtonComponent ref={ref} {...props} />\n));\n"]},"metadata":{},"sourceType":"module"}