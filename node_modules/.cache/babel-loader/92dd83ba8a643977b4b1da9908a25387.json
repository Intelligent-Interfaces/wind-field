{"ast":null,"code":"/*! Source code licensed under Apache License 2.0. Copyright Â© 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nimport { MultiTouchSpace } from './Space';\nimport { VisualForm, Font } from \"./Form\";\nimport { Util } from './Util';\nimport { Pt, Bound } from './Pt';\nexport class DOMSpace extends MultiTouchSpace {\n  constructor(elem, callback) {\n    super();\n    this.id = \"domspace\";\n    this._autoResize = true;\n    this._bgcolor = \"#e1e9f0\";\n    this._css = {};\n    var _selector = null;\n    var _existed = false;\n    this.id = \"pts\";\n\n    if (elem instanceof Element) {\n      _selector = elem;\n      this.id = \"pts_existing_space\";\n    } else {\n      _selector = document.querySelector(elem);\n      _existed = true;\n      this.id = elem.substr(1);\n    }\n\n    if (!_selector) {\n      this._container = DOMSpace.createElement(\"div\", \"pts_container\");\n      this._canvas = DOMSpace.createElement(\"div\", \"pts_element\");\n\n      this._container.appendChild(this._canvas);\n\n      document.body.appendChild(this._container);\n      _existed = false;\n    } else {\n      this._canvas = _selector;\n      this._container = _selector.parentElement;\n    }\n\n    setTimeout(this._ready.bind(this, callback), 50);\n  }\n\n  static createElement(elem = \"div\", id, appendTo) {\n    let d = document.createElement(elem);\n    if (id) d.setAttribute(\"id\", id);\n    if (appendTo && appendTo.appendChild) appendTo.appendChild(d);\n    return d;\n  }\n\n  _ready(callback) {\n    if (!this._container) throw new Error(`Cannot initiate #${this.id} element`);\n    this._isReady = true;\n\n    this._resizeHandler(null);\n\n    this.clear(this._bgcolor);\n\n    this._canvas.dispatchEvent(new Event(\"ready\"));\n\n    for (let k in this.players) {\n      if (this.players.hasOwnProperty(k)) {\n        if (this.players[k].start) this.players[k].start(this.bound.clone(), this);\n      }\n    }\n\n    this._pointer = this.center;\n    this.refresh(false);\n    if (callback) callback(this.bound, this._canvas);\n  }\n\n  setup(opt) {\n    if (opt.bgcolor) {\n      this._bgcolor = opt.bgcolor;\n    }\n\n    this.autoResize = opt.resize != undefined ? opt.resize : false;\n    return this;\n  }\n\n  getForm() {\n    return null;\n  }\n\n  set autoResize(auto) {\n    this._autoResize = auto;\n\n    if (auto) {\n      window.addEventListener('resize', this._resizeHandler.bind(this));\n    } else {\n      delete this._css['width'];\n      delete this._css['height'];\n      window.removeEventListener('resize', this._resizeHandler.bind(this));\n    }\n  }\n\n  get autoResize() {\n    return this._autoResize;\n  }\n\n  resize(b, evt) {\n    this.bound = b;\n    this.styles({\n      width: `${b.width}px`,\n      height: `${b.height}px`\n    }, true);\n\n    for (let k in this.players) {\n      if (this.players.hasOwnProperty(k)) {\n        let p = this.players[k];\n        if (p.resize) p.resize(this.bound, evt);\n      }\n    }\n\n    return this;\n  }\n\n  _resizeHandler(evt) {\n    let b = Bound.fromBoundingRect(this._container.getBoundingClientRect());\n\n    if (this._autoResize) {\n      this.styles({\n        width: \"100%\",\n        height: \"100%\"\n      }, true);\n    } else {\n      this.styles({\n        width: `${b.width}px`,\n        height: `${b.height}px`\n      }, true);\n    }\n\n    this.resize(b, evt);\n  }\n\n  get element() {\n    return this._canvas;\n  }\n\n  get parent() {\n    return this._container;\n  }\n\n  get ready() {\n    return this._isReady;\n  }\n\n  clear(bg) {\n    if (bg) this.background = bg;\n    this._canvas.innerHTML = \"\";\n    return this;\n  }\n\n  set background(bg) {\n    this._bgcolor = bg;\n    this._container.style.backgroundColor = this._bgcolor;\n  }\n\n  get background() {\n    return this._bgcolor;\n  }\n\n  style(key, val, update = false) {\n    this._css[key] = val;\n    if (update) this._canvas.style[key] = val;\n    return this;\n  }\n\n  styles(styles, update = false) {\n    for (let k in styles) {\n      if (styles.hasOwnProperty(k)) this.style(k, styles[k], update);\n    }\n\n    return this;\n  }\n\n  static setAttr(elem, data) {\n    for (let k in data) {\n      if (data.hasOwnProperty(k)) {\n        elem.setAttribute(k, data[k]);\n      }\n    }\n\n    return elem;\n  }\n\n  static getInlineStyles(data) {\n    let str = \"\";\n\n    for (let k in data) {\n      if (data.hasOwnProperty(k)) {\n        if (data[k]) str += `${k}: ${data[k]}; `;\n      }\n    }\n\n    return str;\n  }\n\n}\nexport class HTMLSpace extends DOMSpace {\n  getForm() {\n    return new HTMLForm(this);\n  }\n\n  static htmlElement(parent, name, id, autoClass = true) {\n    if (!parent || !parent.appendChild) throw new Error(\"parent is not a valid DOM element\");\n    let elem = document.querySelector(`#${id}`);\n\n    if (!elem) {\n      elem = document.createElement(name);\n      elem.setAttribute(\"id\", id);\n      if (autoClass) elem.setAttribute(\"class\", id.substring(0, id.indexOf(\"-\")));\n      parent.appendChild(elem);\n    }\n\n    return elem;\n  }\n\n  remove(player) {\n    let temp = this._container.querySelectorAll(\".\" + HTMLForm.scopeID(player));\n\n    temp.forEach(el => {\n      el.parentNode.removeChild(el);\n    });\n    return super.remove(player);\n  }\n\n  removeAll() {\n    this._container.innerHTML = \"\";\n    return super.removeAll();\n  }\n\n}\nexport class HTMLForm extends VisualForm {\n  constructor(space) {\n    super();\n    this._style = {\n      \"filled\": true,\n      \"stroked\": true,\n      \"background\": \"#f03\",\n      \"border-color\": \"#fff\",\n      \"color\": \"#000\",\n      \"border-width\": \"1px\",\n      \"border-radius\": \"0\",\n      \"border-style\": \"solid\",\n      \"opacity\": 1,\n      \"position\": \"absolute\",\n      \"top\": 0,\n      \"left\": 0,\n      \"width\": 0,\n      \"height\": 0\n    };\n    this._ctx = {\n      group: null,\n      groupID: \"pts\",\n      groupCount: 0,\n      currentID: \"pts0\",\n      currentClass: \"\",\n      style: {}\n    };\n    this._ready = false;\n    this._space = space;\n\n    this._space.add({\n      start: () => {\n        this._ctx.group = this._space.element;\n        this._ctx.groupID = \"pts_dom_\" + HTMLForm.groupID++;\n        this._ctx.style = Object.assign({}, this._style);\n        this._ready = true;\n      }\n    });\n  }\n\n  get space() {\n    return this._space;\n  }\n\n  styleTo(k, v, unit = '') {\n    if (this._ctx.style[k] === undefined) throw new Error(`${k} style property doesn't exist`);\n    this._ctx.style[k] = `${v}${unit}`;\n  }\n\n  alpha(a) {\n    this.styleTo(\"opacity\", a);\n    return this;\n  }\n\n  fill(c) {\n    if (typeof c == \"boolean\") {\n      this.styleTo(\"filled\", c);\n      if (!c) this.styleTo(\"background\", \"transparent\");\n    } else {\n      this.styleTo(\"filled\", true);\n      this.styleTo(\"background\", c);\n    }\n\n    return this;\n  }\n\n  stroke(c, width, linejoin, linecap) {\n    if (typeof c == \"boolean\") {\n      this.styleTo(\"stroked\", c);\n      if (!c) this.styleTo(\"border-width\", 0);\n    } else {\n      this.styleTo(\"stroked\", true);\n      this.styleTo(\"border-color\", c);\n      this.styleTo(\"border-width\", (width || 1) + \"px\");\n    }\n\n    return this;\n  }\n\n  fillText(c) {\n    this.styleTo(\"color\", c);\n    return this;\n  }\n\n  cls(c) {\n    if (typeof c == \"boolean\") {\n      this._ctx.currentClass = \"\";\n    } else {\n      this._ctx.currentClass = c;\n    }\n\n    return this;\n  }\n\n  font(sizeOrFont, weight, style, lineHeight, family) {\n    if (typeof sizeOrFont == \"number\") {\n      this._font.size = sizeOrFont;\n      if (family) this._font.face = family;\n      if (weight) this._font.weight = weight;\n      if (style) this._font.style = style;\n      if (lineHeight) this._font.lineHeight = lineHeight;\n    } else {\n      this._font = sizeOrFont;\n    }\n\n    this._ctx.style['font'] = this._font.value;\n    return this;\n  }\n\n  reset() {\n    this._ctx.style = Object.assign({}, this._style);\n    this._font = new Font(10, \"sans-serif\");\n    this._ctx.style['font'] = this._font.value;\n    return this;\n  }\n\n  updateScope(group_id, group) {\n    this._ctx.group = group;\n    this._ctx.groupID = group_id;\n    this._ctx.groupCount = 0;\n    this.nextID();\n    return this._ctx;\n  }\n\n  scope(item) {\n    if (!item || item.animateID == null) throw new Error(\"item not defined or not yet added to Space\");\n    return this.updateScope(HTMLForm.scopeID(item), this.space.element);\n  }\n\n  nextID() {\n    this._ctx.groupCount++;\n    this._ctx.currentID = `${this._ctx.groupID}-${this._ctx.groupCount}`;\n    return this._ctx.currentID;\n  }\n\n  static getID(ctx) {\n    return ctx.currentID || `p-${HTMLForm.domID++}`;\n  }\n\n  static scopeID(item) {\n    return `item-${item.animateID}`;\n  }\n\n  static style(elem, styles) {\n    let st = [];\n    if (!styles[\"filled\"]) st.push(\"background: none\");\n    if (!styles[\"stroked\"]) st.push(\"border: none\");\n\n    for (let k in styles) {\n      if (styles.hasOwnProperty(k) && k != \"filled\" && k != \"stroked\") {\n        let v = styles[k];\n\n        if (v) {\n          if (!styles[\"filled\"] && k.indexOf('background') === 0) {\n            continue;\n          } else if (!styles[\"stroked\"] && k.indexOf('border-width') === 0) {\n            continue;\n          } else {\n            st.push(`${k}: ${v}`);\n          }\n        }\n      }\n    }\n\n    return HTMLSpace.setAttr(elem, {\n      style: st.join(\";\")\n    });\n  }\n\n  static rectStyle(ctx, pt, size) {\n    ctx.style[\"left\"] = pt[0] + \"px\";\n    ctx.style[\"top\"] = pt[1] + \"px\";\n    ctx.style[\"width\"] = size[0] + \"px\";\n    ctx.style[\"height\"] = size[1] + \"px\";\n    return ctx;\n  }\n\n  static textStyle(ctx, pt) {\n    ctx.style[\"left\"] = pt[0] + \"px\";\n    ctx.style[\"top\"] = pt[1] + \"px\";\n    return ctx;\n  }\n\n  static point(ctx, pt, radius = 5, shape = \"square\") {\n    if (shape === \"circle\") {\n      return HTMLForm.circle(ctx, pt, radius);\n    } else {\n      return HTMLForm.square(ctx, pt, radius);\n    }\n  }\n\n  point(pt, radius = 5, shape = \"square\") {\n    this.nextID();\n    if (shape == \"circle\") this.styleTo(\"border-radius\", \"100%\");\n    HTMLForm.point(this._ctx, pt, radius, shape);\n    return this;\n  }\n\n  static circle(ctx, pt, radius = 10) {\n    let elem = HTMLSpace.htmlElement(ctx.group, \"div\", HTMLForm.getID(ctx));\n    HTMLSpace.setAttr(elem, {\n      class: `pts-form pts-circle ${ctx.currentClass}`\n    });\n    HTMLForm.rectStyle(ctx, new Pt(pt).$subtract(radius), new Pt(radius * 2, radius * 2));\n    HTMLForm.style(elem, ctx.style);\n    return elem;\n  }\n\n  circle(pts) {\n    this.nextID();\n    this.styleTo(\"border-radius\", \"100%\");\n    HTMLForm.circle(this._ctx, pts[0], pts[1][0]);\n    return this;\n  }\n\n  static square(ctx, pt, halfsize) {\n    let elem = HTMLSpace.htmlElement(ctx.group, \"div\", HTMLForm.getID(ctx));\n    HTMLSpace.setAttr(elem, {\n      class: `pts-form pts-square ${ctx.currentClass}`\n    });\n    HTMLForm.rectStyle(ctx, new Pt(pt).$subtract(halfsize), new Pt(halfsize * 2, halfsize * 2));\n    HTMLForm.style(elem, ctx.style);\n    return elem;\n  }\n\n  square(pt, halfsize) {\n    this.nextID();\n    HTMLForm.square(this._ctx, pt, halfsize);\n    return this;\n  }\n\n  static rect(ctx, pts) {\n    if (!this._checkSize(pts)) return;\n    let elem = HTMLSpace.htmlElement(ctx.group, \"div\", HTMLForm.getID(ctx));\n    HTMLSpace.setAttr(elem, {\n      class: `pts-form pts-rect ${ctx.currentClass}`\n    });\n    HTMLForm.rectStyle(ctx, pts[0], pts[1]);\n    HTMLForm.style(elem, ctx.style);\n    return elem;\n  }\n\n  rect(pts) {\n    this.nextID();\n    this.styleTo(\"border-radius\", \"0\");\n    HTMLForm.rect(this._ctx, pts);\n    return this;\n  }\n\n  static text(ctx, pt, txt) {\n    let elem = HTMLSpace.htmlElement(ctx.group, \"div\", HTMLForm.getID(ctx));\n    HTMLSpace.setAttr(elem, {\n      class: `pts-form pts-text ${ctx.currentClass}`\n    });\n    elem.textContent = txt;\n    HTMLForm.textStyle(ctx, pt);\n    HTMLForm.style(elem, ctx.style);\n    return elem;\n  }\n\n  text(pt, txt) {\n    this.nextID();\n    HTMLForm.text(this._ctx, pt, txt);\n    return this;\n  }\n\n  log(txt) {\n    this.fill(\"#000\").stroke(\"#fff\", 0.5).text([10, 14], txt);\n    return this;\n  }\n\n  arc(pt, radius, startAngle, endAngle, cc) {\n    Util.warn(\"arc is not implemented in HTMLForm\");\n    return this;\n  }\n\n  line(pts) {\n    Util.warn(\"line is not implemented in HTMLForm\");\n    return this;\n  }\n\n  polygon(pts) {\n    Util.warn(\"polygon is not implemented in HTMLForm\");\n    return this;\n  }\n\n}\nHTMLForm.groupID = 0;\nHTMLForm.domID = 0;","map":{"version":3,"sources":["/Users/erickoduniyi/Desktop/Work/multi_media_signal_processing/skeuomorphic-synth-master/node_modules/pts/dist/es2015/Dom.js"],"names":["MultiTouchSpace","VisualForm","Font","Util","Pt","Bound","DOMSpace","constructor","elem","callback","id","_autoResize","_bgcolor","_css","_selector","_existed","Element","document","querySelector","substr","_container","createElement","_canvas","appendChild","body","parentElement","setTimeout","_ready","bind","appendTo","d","setAttribute","Error","_isReady","_resizeHandler","clear","dispatchEvent","Event","k","players","hasOwnProperty","start","bound","clone","_pointer","center","refresh","setup","opt","bgcolor","autoResize","resize","undefined","getForm","auto","window","addEventListener","removeEventListener","b","evt","styles","width","height","p","fromBoundingRect","getBoundingClientRect","element","parent","ready","bg","background","innerHTML","style","backgroundColor","key","val","update","setAttr","data","getInlineStyles","str","HTMLSpace","HTMLForm","htmlElement","name","autoClass","substring","indexOf","remove","player","temp","querySelectorAll","scopeID","forEach","el","parentNode","removeChild","removeAll","space","_style","_ctx","group","groupID","groupCount","currentID","currentClass","_space","add","Object","assign","styleTo","v","unit","alpha","a","fill","c","stroke","linejoin","linecap","fillText","cls","font","sizeOrFont","weight","lineHeight","family","_font","size","face","value","reset","updateScope","group_id","nextID","scope","item","animateID","getID","ctx","domID","st","push","join","rectStyle","pt","textStyle","point","radius","shape","circle","square","class","$subtract","pts","halfsize","rect","_checkSize","text","txt","textContent","log","arc","startAngle","endAngle","cc","warn","line","polygon"],"mappings":"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","sourcesContent":["/*! Source code licensed under Apache License 2.0. Copyright Â© 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nimport { MultiTouchSpace } from './Space';\nimport { VisualForm, Font } from \"./Form\";\nimport { Util } from './Util';\nimport { Pt, Bound } from './Pt';\nexport class DOMSpace extends MultiTouchSpace {\n    constructor(elem, callback) {\n        super();\n        this.id = \"domspace\";\n        this._autoResize = true;\n        this._bgcolor = \"#e1e9f0\";\n        this._css = {};\n        var _selector = null;\n        var _existed = false;\n        this.id = \"pts\";\n        if (elem instanceof Element) {\n            _selector = elem;\n            this.id = \"pts_existing_space\";\n        }\n        else {\n            _selector = document.querySelector(elem);\n            _existed = true;\n            this.id = elem.substr(1);\n        }\n        if (!_selector) {\n            this._container = DOMSpace.createElement(\"div\", \"pts_container\");\n            this._canvas = DOMSpace.createElement(\"div\", \"pts_element\");\n            this._container.appendChild(this._canvas);\n            document.body.appendChild(this._container);\n            _existed = false;\n        }\n        else {\n            this._canvas = _selector;\n            this._container = _selector.parentElement;\n        }\n        setTimeout(this._ready.bind(this, callback), 50);\n    }\n    static createElement(elem = \"div\", id, appendTo) {\n        let d = document.createElement(elem);\n        if (id)\n            d.setAttribute(\"id\", id);\n        if (appendTo && appendTo.appendChild)\n            appendTo.appendChild(d);\n        return d;\n    }\n    _ready(callback) {\n        if (!this._container)\n            throw new Error(`Cannot initiate #${this.id} element`);\n        this._isReady = true;\n        this._resizeHandler(null);\n        this.clear(this._bgcolor);\n        this._canvas.dispatchEvent(new Event(\"ready\"));\n        for (let k in this.players) {\n            if (this.players.hasOwnProperty(k)) {\n                if (this.players[k].start)\n                    this.players[k].start(this.bound.clone(), this);\n            }\n        }\n        this._pointer = this.center;\n        this.refresh(false);\n        if (callback)\n            callback(this.bound, this._canvas);\n    }\n    setup(opt) {\n        if (opt.bgcolor) {\n            this._bgcolor = opt.bgcolor;\n        }\n        this.autoResize = (opt.resize != undefined) ? opt.resize : false;\n        return this;\n    }\n    getForm() {\n        return null;\n    }\n    set autoResize(auto) {\n        this._autoResize = auto;\n        if (auto) {\n            window.addEventListener('resize', this._resizeHandler.bind(this));\n        }\n        else {\n            delete this._css['width'];\n            delete this._css['height'];\n            window.removeEventListener('resize', this._resizeHandler.bind(this));\n        }\n    }\n    get autoResize() { return this._autoResize; }\n    resize(b, evt) {\n        this.bound = b;\n        this.styles({ width: `${b.width}px`, height: `${b.height}px` }, true);\n        for (let k in this.players) {\n            if (this.players.hasOwnProperty(k)) {\n                let p = this.players[k];\n                if (p.resize)\n                    p.resize(this.bound, evt);\n            }\n        }\n        return this;\n    }\n    _resizeHandler(evt) {\n        let b = Bound.fromBoundingRect(this._container.getBoundingClientRect());\n        if (this._autoResize) {\n            this.styles({ width: \"100%\", height: \"100%\" }, true);\n        }\n        else {\n            this.styles({ width: `${b.width}px`, height: `${b.height}px` }, true);\n        }\n        this.resize(b, evt);\n    }\n    get element() {\n        return this._canvas;\n    }\n    get parent() {\n        return this._container;\n    }\n    get ready() { return this._isReady; }\n    clear(bg) {\n        if (bg)\n            this.background = bg;\n        this._canvas.innerHTML = \"\";\n        return this;\n    }\n    set background(bg) {\n        this._bgcolor = bg;\n        this._container.style.backgroundColor = this._bgcolor;\n    }\n    get background() { return this._bgcolor; }\n    style(key, val, update = false) {\n        this._css[key] = val;\n        if (update)\n            this._canvas.style[key] = val;\n        return this;\n    }\n    styles(styles, update = false) {\n        for (let k in styles) {\n            if (styles.hasOwnProperty(k))\n                this.style(k, styles[k], update);\n        }\n        return this;\n    }\n    static setAttr(elem, data) {\n        for (let k in data) {\n            if (data.hasOwnProperty(k)) {\n                elem.setAttribute(k, data[k]);\n            }\n        }\n        return elem;\n    }\n    static getInlineStyles(data) {\n        let str = \"\";\n        for (let k in data) {\n            if (data.hasOwnProperty(k)) {\n                if (data[k])\n                    str += `${k}: ${data[k]}; `;\n            }\n        }\n        return str;\n    }\n}\nexport class HTMLSpace extends DOMSpace {\n    getForm() {\n        return new HTMLForm(this);\n    }\n    static htmlElement(parent, name, id, autoClass = true) {\n        if (!parent || !parent.appendChild)\n            throw new Error(\"parent is not a valid DOM element\");\n        let elem = document.querySelector(`#${id}`);\n        if (!elem) {\n            elem = document.createElement(name);\n            elem.setAttribute(\"id\", id);\n            if (autoClass)\n                elem.setAttribute(\"class\", id.substring(0, id.indexOf(\"-\")));\n            parent.appendChild(elem);\n        }\n        return elem;\n    }\n    remove(player) {\n        let temp = this._container.querySelectorAll(\".\" + HTMLForm.scopeID(player));\n        temp.forEach((el) => {\n            el.parentNode.removeChild(el);\n        });\n        return super.remove(player);\n    }\n    removeAll() {\n        this._container.innerHTML = \"\";\n        return super.removeAll();\n    }\n}\nexport class HTMLForm extends VisualForm {\n    constructor(space) {\n        super();\n        this._style = {\n            \"filled\": true,\n            \"stroked\": true,\n            \"background\": \"#f03\",\n            \"border-color\": \"#fff\",\n            \"color\": \"#000\",\n            \"border-width\": \"1px\",\n            \"border-radius\": \"0\",\n            \"border-style\": \"solid\",\n            \"opacity\": 1,\n            \"position\": \"absolute\",\n            \"top\": 0,\n            \"left\": 0,\n            \"width\": 0,\n            \"height\": 0\n        };\n        this._ctx = {\n            group: null,\n            groupID: \"pts\",\n            groupCount: 0,\n            currentID: \"pts0\",\n            currentClass: \"\",\n            style: {},\n        };\n        this._ready = false;\n        this._space = space;\n        this._space.add({ start: () => {\n                this._ctx.group = this._space.element;\n                this._ctx.groupID = \"pts_dom_\" + (HTMLForm.groupID++);\n                this._ctx.style = Object.assign({}, this._style);\n                this._ready = true;\n            } });\n    }\n    get space() { return this._space; }\n    styleTo(k, v, unit = '') {\n        if (this._ctx.style[k] === undefined)\n            throw new Error(`${k} style property doesn't exist`);\n        this._ctx.style[k] = `${v}${unit}`;\n    }\n    alpha(a) {\n        this.styleTo(\"opacity\", a);\n        return this;\n    }\n    fill(c) {\n        if (typeof c == \"boolean\") {\n            this.styleTo(\"filled\", c);\n            if (!c)\n                this.styleTo(\"background\", \"transparent\");\n        }\n        else {\n            this.styleTo(\"filled\", true);\n            this.styleTo(\"background\", c);\n        }\n        return this;\n    }\n    stroke(c, width, linejoin, linecap) {\n        if (typeof c == \"boolean\") {\n            this.styleTo(\"stroked\", c);\n            if (!c)\n                this.styleTo(\"border-width\", 0);\n        }\n        else {\n            this.styleTo(\"stroked\", true);\n            this.styleTo(\"border-color\", c);\n            this.styleTo(\"border-width\", (width || 1) + \"px\");\n        }\n        return this;\n    }\n    fillText(c) {\n        this.styleTo(\"color\", c);\n        return this;\n    }\n    cls(c) {\n        if (typeof c == \"boolean\") {\n            this._ctx.currentClass = \"\";\n        }\n        else {\n            this._ctx.currentClass = c;\n        }\n        return this;\n    }\n    font(sizeOrFont, weight, style, lineHeight, family) {\n        if (typeof sizeOrFont == \"number\") {\n            this._font.size = sizeOrFont;\n            if (family)\n                this._font.face = family;\n            if (weight)\n                this._font.weight = weight;\n            if (style)\n                this._font.style = style;\n            if (lineHeight)\n                this._font.lineHeight = lineHeight;\n        }\n        else {\n            this._font = sizeOrFont;\n        }\n        this._ctx.style['font'] = this._font.value;\n        return this;\n    }\n    reset() {\n        this._ctx.style = Object.assign({}, this._style);\n        this._font = new Font(10, \"sans-serif\");\n        this._ctx.style['font'] = this._font.value;\n        return this;\n    }\n    updateScope(group_id, group) {\n        this._ctx.group = group;\n        this._ctx.groupID = group_id;\n        this._ctx.groupCount = 0;\n        this.nextID();\n        return this._ctx;\n    }\n    scope(item) {\n        if (!item || item.animateID == null)\n            throw new Error(\"item not defined or not yet added to Space\");\n        return this.updateScope(HTMLForm.scopeID(item), this.space.element);\n    }\n    nextID() {\n        this._ctx.groupCount++;\n        this._ctx.currentID = `${this._ctx.groupID}-${this._ctx.groupCount}`;\n        return this._ctx.currentID;\n    }\n    static getID(ctx) {\n        return ctx.currentID || `p-${HTMLForm.domID++}`;\n    }\n    static scopeID(item) {\n        return `item-${item.animateID}`;\n    }\n    static style(elem, styles) {\n        let st = [];\n        if (!styles[\"filled\"])\n            st.push(\"background: none\");\n        if (!styles[\"stroked\"])\n            st.push(\"border: none\");\n        for (let k in styles) {\n            if (styles.hasOwnProperty(k) && k != \"filled\" && k != \"stroked\") {\n                let v = styles[k];\n                if (v) {\n                    if (!styles[\"filled\"] && k.indexOf('background') === 0) {\n                        continue;\n                    }\n                    else if (!styles[\"stroked\"] && k.indexOf('border-width') === 0) {\n                        continue;\n                    }\n                    else {\n                        st.push(`${k}: ${v}`);\n                    }\n                }\n            }\n        }\n        return HTMLSpace.setAttr(elem, { style: st.join(\";\") });\n    }\n    static rectStyle(ctx, pt, size) {\n        ctx.style[\"left\"] = pt[0] + \"px\";\n        ctx.style[\"top\"] = pt[1] + \"px\";\n        ctx.style[\"width\"] = size[0] + \"px\";\n        ctx.style[\"height\"] = size[1] + \"px\";\n        return ctx;\n    }\n    static textStyle(ctx, pt) {\n        ctx.style[\"left\"] = pt[0] + \"px\";\n        ctx.style[\"top\"] = pt[1] + \"px\";\n        return ctx;\n    }\n    static point(ctx, pt, radius = 5, shape = \"square\") {\n        if (shape === \"circle\") {\n            return HTMLForm.circle(ctx, pt, radius);\n        }\n        else {\n            return HTMLForm.square(ctx, pt, radius);\n        }\n    }\n    point(pt, radius = 5, shape = \"square\") {\n        this.nextID();\n        if (shape == \"circle\")\n            this.styleTo(\"border-radius\", \"100%\");\n        HTMLForm.point(this._ctx, pt, radius, shape);\n        return this;\n    }\n    static circle(ctx, pt, radius = 10) {\n        let elem = HTMLSpace.htmlElement(ctx.group, \"div\", HTMLForm.getID(ctx));\n        HTMLSpace.setAttr(elem, { class: `pts-form pts-circle ${ctx.currentClass}` });\n        HTMLForm.rectStyle(ctx, new Pt(pt).$subtract(radius), new Pt(radius * 2, radius * 2));\n        HTMLForm.style(elem, ctx.style);\n        return elem;\n    }\n    circle(pts) {\n        this.nextID();\n        this.styleTo(\"border-radius\", \"100%\");\n        HTMLForm.circle(this._ctx, pts[0], pts[1][0]);\n        return this;\n    }\n    static square(ctx, pt, halfsize) {\n        let elem = HTMLSpace.htmlElement(ctx.group, \"div\", HTMLForm.getID(ctx));\n        HTMLSpace.setAttr(elem, { class: `pts-form pts-square ${ctx.currentClass}` });\n        HTMLForm.rectStyle(ctx, new Pt(pt).$subtract(halfsize), new Pt(halfsize * 2, halfsize * 2));\n        HTMLForm.style(elem, ctx.style);\n        return elem;\n    }\n    square(pt, halfsize) {\n        this.nextID();\n        HTMLForm.square(this._ctx, pt, halfsize);\n        return this;\n    }\n    static rect(ctx, pts) {\n        if (!this._checkSize(pts))\n            return;\n        let elem = HTMLSpace.htmlElement(ctx.group, \"div\", HTMLForm.getID(ctx));\n        HTMLSpace.setAttr(elem, { class: `pts-form pts-rect ${ctx.currentClass}` });\n        HTMLForm.rectStyle(ctx, pts[0], pts[1]);\n        HTMLForm.style(elem, ctx.style);\n        return elem;\n    }\n    rect(pts) {\n        this.nextID();\n        this.styleTo(\"border-radius\", \"0\");\n        HTMLForm.rect(this._ctx, pts);\n        return this;\n    }\n    static text(ctx, pt, txt) {\n        let elem = HTMLSpace.htmlElement(ctx.group, \"div\", HTMLForm.getID(ctx));\n        HTMLSpace.setAttr(elem, { class: `pts-form pts-text ${ctx.currentClass}` });\n        elem.textContent = txt;\n        HTMLForm.textStyle(ctx, pt);\n        HTMLForm.style(elem, ctx.style);\n        return elem;\n    }\n    text(pt, txt) {\n        this.nextID();\n        HTMLForm.text(this._ctx, pt, txt);\n        return this;\n    }\n    log(txt) {\n        this.fill(\"#000\").stroke(\"#fff\", 0.5).text([10, 14], txt);\n        return this;\n    }\n    arc(pt, radius, startAngle, endAngle, cc) {\n        Util.warn(\"arc is not implemented in HTMLForm\");\n        return this;\n    }\n    line(pts) {\n        Util.warn(\"line is not implemented in HTMLForm\");\n        return this;\n    }\n    polygon(pts) {\n        Util.warn(\"polygon is not implemented in HTMLForm\");\n        return this;\n    }\n}\nHTMLForm.groupID = 0;\nHTMLForm.domID = 0;\n//# sourceMappingURL=Dom.js.map"]},"metadata":{},"sourceType":"module"}