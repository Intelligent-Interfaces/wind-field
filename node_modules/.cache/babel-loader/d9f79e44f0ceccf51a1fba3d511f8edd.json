{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { Panner } from \"../component/channel/Panner\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFOEffect } from \"./LFOEffect\";\n/**\n * AutoPanner is a [[Panner]] with an [[LFO]] connected to the pan amount.\n * [Related Reading](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).\n *\n * @example\n * import { AutoPanner, Oscillator } from \"tone\";\n * // create an autopanner and start it\n * const autoPanner = new AutoPanner(\"4n\").toDestination().start();\n * // route an oscillator through the panner and start it\n * const oscillator = new Oscillator().connect(autoPanner).start();\n * @category Effect\n */\n\nvar AutoPanner =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(AutoPanner, _super);\n\n  function AutoPanner() {\n    var _this = _super.call(this, optionsFromArguments(AutoPanner.getDefaults(), arguments, [\"frequency\"])) || this;\n\n    _this.name = \"AutoPanner\";\n    _this._panner = new Panner({\n      context: _this.context\n    }); // connections\n\n    _this.connectEffect(_this._panner);\n\n    _this._lfo.connect(_this._panner.pan);\n\n    _this._lfo.min = -1;\n    _this._lfo.max = 1;\n    return _this;\n  }\n\n  AutoPanner.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._panner.dispose();\n\n    return this;\n  };\n\n  return AutoPanner;\n}(LFOEffect);\n\nexport { AutoPanner };","map":{"version":3,"sources":["../../../Tone/effect/AutoPanner.ts"],"names":[],"mappings":";AAAA,SAAS,MAAT,QAAuB,6BAAvB;AACA,SAAS,oBAAT,QAAqC,uBAArC;AACA,SAAS,SAAT,QAA4C,aAA5C;AAKA;;;;;;;;;;;;;AAYA,IAAA,UAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgC,EAAA,OAAA,CAAA,SAAA,CAAA,UAAA,EAAA,MAAA;;AAc/B,WAAA,UAAA,GAAA;AAAA,QAAA,KAAA,GAEC,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,oBAAoB,CAAC,UAAU,CAAC,WAAX,EAAD,EAA2B,SAA3B,EAAsC,CAAC,WAAD,CAAtC,CAA1B,KAA+E,IAFhF;;AAZS,IAAA,KAAA,CAAA,IAAA,GAAe,YAAf;AAgBR,IAAA,KAAI,CAAC,OAAL,GAAe,IAAI,MAAJ,CAAW;AAAE,MAAA,OAAO,EAAE,KAAI,CAAC;AAAhB,KAAX,CAAf,CAJD,CAKC;;AACA,IAAA,KAAI,CAAC,aAAL,CAAmB,KAAI,CAAC,OAAxB;;AACA,IAAA,KAAI,CAAC,IAAL,CAAU,OAAV,CAAkB,KAAI,CAAC,OAAL,CAAa,GAA/B;;AACA,IAAA,KAAI,CAAC,IAAL,CAAU,GAAV,GAAgB,CAAC,CAAjB;AACA,IAAA,KAAI,CAAC,IAAL,CAAU,GAAV,GAAgB,CAAhB;;AACA;;AAED,EAAA,UAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACC,IAAA,MAAA,CAAA,SAAA,CAAM,OAAN,CAAa,IAAb,CAAa,IAAb;;AACA,SAAK,OAAL,CAAa,OAAb;;AACA,WAAO,IAAP;AACA,GAJD;;AAKD,SAAA,UAAA;AAAC,CA/BD,CAAgC,SAAhC,CAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { Panner } from \"../component/channel/Panner\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFOEffect } from \"./LFOEffect\";\n/**\n * AutoPanner is a [[Panner]] with an [[LFO]] connected to the pan amount.\n * [Related Reading](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).\n *\n * @example\n * import { AutoPanner, Oscillator } from \"tone\";\n * // create an autopanner and start it\n * const autoPanner = new AutoPanner(\"4n\").toDestination().start();\n * // route an oscillator through the panner and start it\n * const oscillator = new Oscillator().connect(autoPanner).start();\n * @category Effect\n */\nvar AutoPanner = /** @class */ (function (_super) {\n    tslib_1.__extends(AutoPanner, _super);\n    function AutoPanner() {\n        var _this = _super.call(this, optionsFromArguments(AutoPanner.getDefaults(), arguments, [\"frequency\"])) || this;\n        _this.name = \"AutoPanner\";\n        _this._panner = new Panner({ context: _this.context });\n        // connections\n        _this.connectEffect(_this._panner);\n        _this._lfo.connect(_this._panner.pan);\n        _this._lfo.min = -1;\n        _this._lfo.max = 1;\n        return _this;\n    }\n    AutoPanner.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._panner.dispose();\n        return this;\n    };\n    return AutoPanner;\n}(LFOEffect));\nexport { AutoPanner };\n//# sourceMappingURL=AutoPanner.js.map"]},"metadata":{},"sourceType":"module"}