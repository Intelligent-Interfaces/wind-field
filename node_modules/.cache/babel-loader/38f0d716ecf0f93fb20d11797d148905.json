{"ast":null,"code":"/*! Source code licensed under Apache License 2.0. Copyright Â© 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nimport { VisualForm, Font } from \"./Form\";\nimport { Geom } from './Num';\nimport { Const } from './Util';\nimport { Pt, Group } from './Pt';\nimport { Rectangle } from \"./Op\";\nimport { DOMSpace } from \"./Dom\";\nexport class SVGSpace extends DOMSpace {\n  constructor(elem, callback) {\n    super(elem, callback);\n    this.id = \"svgspace\";\n    this._bgcolor = \"#999\";\n\n    if (this._canvas.nodeName.toLowerCase() != \"svg\") {\n      let s = SVGSpace.svgElement(this._canvas, \"svg\", `${this.id}_svg`);\n      this._container = this._canvas;\n      this._canvas = s;\n    }\n  }\n\n  getForm() {\n    return new SVGForm(this);\n  }\n\n  get element() {\n    return this._canvas;\n  }\n\n  resize(b, evt) {\n    super.resize(b, evt);\n    SVGSpace.setAttr(this.element, {\n      \"viewBox\": `0 0 ${this.bound.width} ${this.bound.height}`,\n      \"width\": `${this.bound.width}`,\n      \"height\": `${this.bound.height}`,\n      \"xmlns\": \"http://www.w3.org/2000/svg\",\n      \"version\": \"1.1\"\n    });\n    return this;\n  }\n\n  static svgElement(parent, name, id) {\n    if (!parent || !parent.appendChild) throw new Error(\"parent is not a valid DOM element\");\n    let elem = document.querySelector(`#${id}`);\n\n    if (!elem) {\n      elem = document.createElementNS(\"http://www.w3.org/2000/svg\", name);\n      elem.setAttribute(\"id\", id);\n      parent.appendChild(elem);\n    }\n\n    return elem;\n  }\n\n  remove(player) {\n    let temp = this._container.querySelectorAll(\".\" + SVGForm.scopeID(player));\n\n    temp.forEach(el => {\n      el.parentNode.removeChild(el);\n    });\n    return super.remove(player);\n  }\n\n  removeAll() {\n    this._container.innerHTML = \"\";\n    return super.removeAll();\n  }\n\n}\nexport class SVGForm extends VisualForm {\n  constructor(space) {\n    super();\n    this._style = {\n      \"filled\": true,\n      \"stroked\": true,\n      \"fill\": \"#f03\",\n      \"stroke\": \"#fff\",\n      \"stroke-width\": 1,\n      \"stroke-linejoin\": \"bevel\",\n      \"stroke-linecap\": \"sqaure\",\n      \"opacity\": 1\n    };\n    this._ctx = {\n      group: null,\n      groupID: \"pts\",\n      groupCount: 0,\n      currentID: \"pts0\",\n      currentClass: \"\",\n      style: {}\n    };\n    this._ready = false;\n    this._space = space;\n\n    this._space.add({\n      start: () => {\n        this._ctx.group = this._space.element;\n        this._ctx.groupID = \"pts_svg_\" + SVGForm.groupID++;\n        this._ctx.style = Object.assign({}, this._style);\n        this._ready = true;\n      }\n    });\n  }\n\n  get space() {\n    return this._space;\n  }\n\n  styleTo(k, v) {\n    if (this._ctx.style[k] === undefined) throw new Error(`${k} style property doesn't exist`);\n    this._ctx.style[k] = v;\n  }\n\n  alpha(a) {\n    this.styleTo(\"opacity\", a);\n    return this;\n  }\n\n  fill(c) {\n    if (typeof c == \"boolean\") {\n      this.styleTo(\"filled\", c);\n    } else {\n      this.styleTo(\"filled\", true);\n      this.styleTo(\"fill\", c);\n    }\n\n    return this;\n  }\n\n  stroke(c, width, linejoin, linecap) {\n    if (typeof c == \"boolean\") {\n      this.styleTo(\"stroked\", c);\n    } else {\n      this.styleTo(\"stroked\", true);\n      this.styleTo(\"stroke\", c);\n      if (width) this.styleTo(\"stroke-width\", width);\n      if (linejoin) this.styleTo(\"stroke-linejoin\", linejoin);\n      if (linecap) this.styleTo(\"stroke-linecap\", linecap);\n    }\n\n    return this;\n  }\n\n  cls(c) {\n    if (typeof c == \"boolean\") {\n      this._ctx.currentClass = \"\";\n    } else {\n      this._ctx.currentClass = c;\n    }\n\n    return this;\n  }\n\n  font(sizeOrFont, weight, style, lineHeight, family) {\n    if (typeof sizeOrFont == \"number\") {\n      this._font.size = sizeOrFont;\n      if (family) this._font.face = family;\n      if (weight) this._font.weight = weight;\n      if (style) this._font.style = style;\n      if (lineHeight) this._font.lineHeight = lineHeight;\n    } else {\n      this._font = sizeOrFont;\n    }\n\n    this._ctx.style['font'] = this._font.value;\n    return this;\n  }\n\n  reset() {\n    this._ctx.style = Object.assign({}, this._style);\n    this._font = new Font(10, \"sans-serif\");\n    this._ctx.style['font'] = this._font.value;\n    return this;\n  }\n\n  updateScope(group_id, group) {\n    this._ctx.group = group;\n    this._ctx.groupID = group_id;\n    this._ctx.groupCount = 0;\n    this.nextID();\n    return this._ctx;\n  }\n\n  scope(item) {\n    if (!item || item.animateID == null) throw new Error(\"item not defined or not yet added to Space\");\n    return this.updateScope(SVGForm.scopeID(item), this.space.element);\n  }\n\n  nextID() {\n    this._ctx.groupCount++;\n    this._ctx.currentID = `${this._ctx.groupID}-${this._ctx.groupCount}`;\n    return this._ctx.currentID;\n  }\n\n  static getID(ctx) {\n    return ctx.currentID || `p-${SVGForm.domID++}`;\n  }\n\n  static scopeID(item) {\n    return `item-${item.animateID}`;\n  }\n\n  static style(elem, styles) {\n    let st = [];\n    if (!styles[\"filled\"]) st.push(\"fill: none\");\n    if (!styles[\"stroked\"]) st.push(\"stroke: none\");\n\n    for (let k in styles) {\n      if (styles.hasOwnProperty(k) && k != \"filled\" && k != \"stroked\") {\n        let v = styles[k];\n\n        if (v) {\n          if (!styles[\"filled\"] && k.indexOf('fill') === 0) {\n            continue;\n          } else if (!styles[\"stroked\"] && k.indexOf('stroke') === 0) {\n            continue;\n          } else {\n            st.push(`${k}: ${v}`);\n          }\n        }\n      }\n    }\n\n    return DOMSpace.setAttr(elem, {\n      style: st.join(\";\")\n    });\n  }\n\n  static point(ctx, pt, radius = 5, shape = \"square\") {\n    if (shape === \"circle\") {\n      return SVGForm.circle(ctx, pt, radius);\n    } else {\n      return SVGForm.square(ctx, pt, radius);\n    }\n  }\n\n  point(pt, radius = 5, shape = \"square\") {\n    this.nextID();\n    SVGForm.point(this._ctx, pt, radius, shape);\n    return this;\n  }\n\n  static circle(ctx, pt, radius = 10) {\n    let elem = SVGSpace.svgElement(ctx.group, \"circle\", SVGForm.getID(ctx));\n    DOMSpace.setAttr(elem, {\n      cx: pt[0],\n      cy: pt[1],\n      r: radius,\n      'class': `pts-svgform pts-circle ${ctx.currentClass}`\n    });\n    SVGForm.style(elem, ctx.style);\n    return elem;\n  }\n\n  circle(pts) {\n    this.nextID();\n    SVGForm.circle(this._ctx, pts[0], pts[1][0]);\n    return this;\n  }\n\n  static arc(ctx, pt, radius, startAngle, endAngle, cc) {\n    let elem = SVGSpace.svgElement(ctx.group, \"path\", SVGForm.getID(ctx));\n    const start = new Pt(pt).toAngle(startAngle, radius, true);\n    const end = new Pt(pt).toAngle(endAngle, radius, true);\n    const diff = Geom.boundAngle(endAngle) - Geom.boundAngle(startAngle);\n    let largeArc = diff > Const.pi ? true : false;\n    if (cc) largeArc = !largeArc;\n    const sweep = cc ? \"0\" : \"1\";\n    const d = `M ${start[0]} ${start[1]} A ${radius} ${radius} 0 ${largeArc ? \"1\" : \"0\"} ${sweep} ${end[0]} ${end[1]}`;\n    DOMSpace.setAttr(elem, {\n      d: d,\n      'class': `pts-svgform pts-arc ${ctx.currentClass}`\n    });\n    SVGForm.style(elem, ctx.style);\n    return elem;\n  }\n\n  arc(pt, radius, startAngle, endAngle, cc) {\n    this.nextID();\n    SVGForm.arc(this._ctx, pt, radius, startAngle, endAngle, cc);\n    return this;\n  }\n\n  static square(ctx, pt, halfsize) {\n    let elem = SVGSpace.svgElement(ctx.group, \"rect\", SVGForm.getID(ctx));\n    DOMSpace.setAttr(elem, {\n      x: pt[0] - halfsize,\n      y: pt[1] - halfsize,\n      width: halfsize * 2,\n      height: halfsize * 2,\n      'class': `pts-svgform pts-square ${ctx.currentClass}`\n    });\n    SVGForm.style(elem, ctx.style);\n    return elem;\n  }\n\n  square(pt, halfsize) {\n    this.nextID();\n    SVGForm.square(this._ctx, pt, halfsize);\n    return this;\n  }\n\n  static line(ctx, pts) {\n    if (!this._checkSize(pts)) return;\n    if (pts.length > 2) return SVGForm._poly(ctx, pts, false);\n    let elem = SVGSpace.svgElement(ctx.group, \"line\", SVGForm.getID(ctx));\n    DOMSpace.setAttr(elem, {\n      x1: pts[0][0],\n      y1: pts[0][1],\n      x2: pts[1][0],\n      y2: pts[1][1],\n      'class': `pts-svgform pts-line ${ctx.currentClass}`\n    });\n    SVGForm.style(elem, ctx.style);\n    return elem;\n  }\n\n  line(pts) {\n    this.nextID();\n    SVGForm.line(this._ctx, pts);\n    return this;\n  }\n\n  static _poly(ctx, pts, closePath = true) {\n    if (!this._checkSize(pts)) return;\n    let elem = SVGSpace.svgElement(ctx.group, closePath ? \"polygon\" : \"polyline\", SVGForm.getID(ctx));\n    let points = pts.reduce((a, p) => a + `${p[0]},${p[1]} `, \"\");\n    DOMSpace.setAttr(elem, {\n      points: points,\n      'class': `pts-svgform pts-polygon ${ctx.currentClass}`\n    });\n    SVGForm.style(elem, ctx.style);\n    return elem;\n  }\n\n  static polygon(ctx, pts) {\n    return SVGForm._poly(ctx, pts, true);\n  }\n\n  polygon(pts) {\n    this.nextID();\n    SVGForm.polygon(this._ctx, pts);\n    return this;\n  }\n\n  static rect(ctx, pts) {\n    if (!this._checkSize(pts)) return;\n    let elem = SVGSpace.svgElement(ctx.group, \"rect\", SVGForm.getID(ctx));\n    let bound = Group.fromArray(pts).boundingBox();\n    let size = Rectangle.size(bound);\n    DOMSpace.setAttr(elem, {\n      x: bound[0][0],\n      y: bound[0][1],\n      width: size[0],\n      height: size[1],\n      'class': `pts-svgform pts-rect ${ctx.currentClass}`\n    });\n    SVGForm.style(elem, ctx.style);\n    return elem;\n  }\n\n  rect(pts) {\n    this.nextID();\n    SVGForm.rect(this._ctx, pts);\n    return this;\n  }\n\n  static text(ctx, pt, txt) {\n    let elem = SVGSpace.svgElement(ctx.group, \"text\", SVGForm.getID(ctx));\n    DOMSpace.setAttr(elem, {\n      \"pointer-events\": \"none\",\n      x: pt[0],\n      y: pt[1],\n      dx: 0,\n      dy: 0,\n      'class': `pts-svgform pts-text ${ctx.currentClass}`\n    });\n    elem.textContent = txt;\n    SVGForm.style(elem, ctx.style);\n    return elem;\n  }\n\n  text(pt, txt) {\n    this.nextID();\n    SVGForm.text(this._ctx, pt, txt);\n    return this;\n  }\n\n  log(txt) {\n    this.fill(\"#000\").stroke(\"#fff\", 0.5).text([10, 14], txt);\n    return this;\n  }\n\n}\nSVGForm.groupID = 0;\nSVGForm.domID = 0;","map":{"version":3,"sources":["/Users/erickoduniyi/Desktop/affective_chaos_control/Emulators/wind-field/node_modules/pts/dist/es2015/Svg.js"],"names":["VisualForm","Font","Geom","Const","Pt","Group","Rectangle","DOMSpace","SVGSpace","constructor","elem","callback","id","_bgcolor","_canvas","nodeName","toLowerCase","s","svgElement","_container","getForm","SVGForm","element","resize","b","evt","setAttr","bound","width","height","parent","name","appendChild","Error","document","querySelector","createElementNS","setAttribute","remove","player","temp","querySelectorAll","scopeID","forEach","el","parentNode","removeChild","removeAll","innerHTML","space","_style","_ctx","group","groupID","groupCount","currentID","currentClass","style","_ready","_space","add","start","Object","assign","styleTo","k","v","undefined","alpha","a","fill","c","stroke","linejoin","linecap","cls","font","sizeOrFont","weight","lineHeight","family","_font","size","face","value","reset","updateScope","group_id","nextID","scope","item","animateID","getID","ctx","domID","styles","st","push","hasOwnProperty","indexOf","join","point","pt","radius","shape","circle","square","cx","cy","r","pts","arc","startAngle","endAngle","cc","toAngle","end","diff","boundAngle","largeArc","pi","sweep","d","halfsize","x","y","line","_checkSize","length","_poly","x1","y1","x2","y2","closePath","points","reduce","p","polygon","rect","fromArray","boundingBox","text","txt","dx","dy","textContent","log"],"mappings":"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","sourcesContent":["/*! Source code licensed under Apache License 2.0. Copyright Â© 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nimport { VisualForm, Font } from \"./Form\";\nimport { Geom } from './Num';\nimport { Const } from './Util';\nimport { Pt, Group } from './Pt';\nimport { Rectangle } from \"./Op\";\nimport { DOMSpace } from \"./Dom\";\nexport class SVGSpace extends DOMSpace {\n    constructor(elem, callback) {\n        super(elem, callback);\n        this.id = \"svgspace\";\n        this._bgcolor = \"#999\";\n        if (this._canvas.nodeName.toLowerCase() != \"svg\") {\n            let s = SVGSpace.svgElement(this._canvas, \"svg\", `${this.id}_svg`);\n            this._container = this._canvas;\n            this._canvas = s;\n        }\n    }\n    getForm() { return new SVGForm(this); }\n    get element() {\n        return this._canvas;\n    }\n    resize(b, evt) {\n        super.resize(b, evt);\n        SVGSpace.setAttr(this.element, {\n            \"viewBox\": `0 0 ${this.bound.width} ${this.bound.height}`,\n            \"width\": `${this.bound.width}`,\n            \"height\": `${this.bound.height}`,\n            \"xmlns\": \"http://www.w3.org/2000/svg\",\n            \"version\": \"1.1\"\n        });\n        return this;\n    }\n    static svgElement(parent, name, id) {\n        if (!parent || !parent.appendChild)\n            throw new Error(\"parent is not a valid DOM element\");\n        let elem = document.querySelector(`#${id}`);\n        if (!elem) {\n            elem = document.createElementNS(\"http://www.w3.org/2000/svg\", name);\n            elem.setAttribute(\"id\", id);\n            parent.appendChild(elem);\n        }\n        return elem;\n    }\n    remove(player) {\n        let temp = this._container.querySelectorAll(\".\" + SVGForm.scopeID(player));\n        temp.forEach((el) => {\n            el.parentNode.removeChild(el);\n        });\n        return super.remove(player);\n    }\n    removeAll() {\n        this._container.innerHTML = \"\";\n        return super.removeAll();\n    }\n}\nexport class SVGForm extends VisualForm {\n    constructor(space) {\n        super();\n        this._style = {\n            \"filled\": true,\n            \"stroked\": true,\n            \"fill\": \"#f03\",\n            \"stroke\": \"#fff\",\n            \"stroke-width\": 1,\n            \"stroke-linejoin\": \"bevel\",\n            \"stroke-linecap\": \"sqaure\",\n            \"opacity\": 1\n        };\n        this._ctx = {\n            group: null,\n            groupID: \"pts\",\n            groupCount: 0,\n            currentID: \"pts0\",\n            currentClass: \"\",\n            style: {},\n        };\n        this._ready = false;\n        this._space = space;\n        this._space.add({ start: () => {\n                this._ctx.group = this._space.element;\n                this._ctx.groupID = \"pts_svg_\" + (SVGForm.groupID++);\n                this._ctx.style = Object.assign({}, this._style);\n                this._ready = true;\n            } });\n    }\n    get space() { return this._space; }\n    styleTo(k, v) {\n        if (this._ctx.style[k] === undefined)\n            throw new Error(`${k} style property doesn't exist`);\n        this._ctx.style[k] = v;\n    }\n    alpha(a) {\n        this.styleTo(\"opacity\", a);\n        return this;\n    }\n    fill(c) {\n        if (typeof c == \"boolean\") {\n            this.styleTo(\"filled\", c);\n        }\n        else {\n            this.styleTo(\"filled\", true);\n            this.styleTo(\"fill\", c);\n        }\n        return this;\n    }\n    stroke(c, width, linejoin, linecap) {\n        if (typeof c == \"boolean\") {\n            this.styleTo(\"stroked\", c);\n        }\n        else {\n            this.styleTo(\"stroked\", true);\n            this.styleTo(\"stroke\", c);\n            if (width)\n                this.styleTo(\"stroke-width\", width);\n            if (linejoin)\n                this.styleTo(\"stroke-linejoin\", linejoin);\n            if (linecap)\n                this.styleTo(\"stroke-linecap\", linecap);\n        }\n        return this;\n    }\n    cls(c) {\n        if (typeof c == \"boolean\") {\n            this._ctx.currentClass = \"\";\n        }\n        else {\n            this._ctx.currentClass = c;\n        }\n        return this;\n    }\n    font(sizeOrFont, weight, style, lineHeight, family) {\n        if (typeof sizeOrFont == \"number\") {\n            this._font.size = sizeOrFont;\n            if (family)\n                this._font.face = family;\n            if (weight)\n                this._font.weight = weight;\n            if (style)\n                this._font.style = style;\n            if (lineHeight)\n                this._font.lineHeight = lineHeight;\n        }\n        else {\n            this._font = sizeOrFont;\n        }\n        this._ctx.style['font'] = this._font.value;\n        return this;\n    }\n    reset() {\n        this._ctx.style = Object.assign({}, this._style);\n        this._font = new Font(10, \"sans-serif\");\n        this._ctx.style['font'] = this._font.value;\n        return this;\n    }\n    updateScope(group_id, group) {\n        this._ctx.group = group;\n        this._ctx.groupID = group_id;\n        this._ctx.groupCount = 0;\n        this.nextID();\n        return this._ctx;\n    }\n    scope(item) {\n        if (!item || item.animateID == null)\n            throw new Error(\"item not defined or not yet added to Space\");\n        return this.updateScope(SVGForm.scopeID(item), this.space.element);\n    }\n    nextID() {\n        this._ctx.groupCount++;\n        this._ctx.currentID = `${this._ctx.groupID}-${this._ctx.groupCount}`;\n        return this._ctx.currentID;\n    }\n    static getID(ctx) {\n        return ctx.currentID || `p-${SVGForm.domID++}`;\n    }\n    static scopeID(item) {\n        return `item-${item.animateID}`;\n    }\n    static style(elem, styles) {\n        let st = [];\n        if (!styles[\"filled\"])\n            st.push(\"fill: none\");\n        if (!styles[\"stroked\"])\n            st.push(\"stroke: none\");\n        for (let k in styles) {\n            if (styles.hasOwnProperty(k) && k != \"filled\" && k != \"stroked\") {\n                let v = styles[k];\n                if (v) {\n                    if (!styles[\"filled\"] && k.indexOf('fill') === 0) {\n                        continue;\n                    }\n                    else if (!styles[\"stroked\"] && k.indexOf('stroke') === 0) {\n                        continue;\n                    }\n                    else {\n                        st.push(`${k}: ${v}`);\n                    }\n                }\n            }\n        }\n        return DOMSpace.setAttr(elem, { style: st.join(\";\") });\n    }\n    static point(ctx, pt, radius = 5, shape = \"square\") {\n        if (shape === \"circle\") {\n            return SVGForm.circle(ctx, pt, radius);\n        }\n        else {\n            return SVGForm.square(ctx, pt, radius);\n        }\n    }\n    point(pt, radius = 5, shape = \"square\") {\n        this.nextID();\n        SVGForm.point(this._ctx, pt, radius, shape);\n        return this;\n    }\n    static circle(ctx, pt, radius = 10) {\n        let elem = SVGSpace.svgElement(ctx.group, \"circle\", SVGForm.getID(ctx));\n        DOMSpace.setAttr(elem, {\n            cx: pt[0],\n            cy: pt[1],\n            r: radius,\n            'class': `pts-svgform pts-circle ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    circle(pts) {\n        this.nextID();\n        SVGForm.circle(this._ctx, pts[0], pts[1][0]);\n        return this;\n    }\n    static arc(ctx, pt, radius, startAngle, endAngle, cc) {\n        let elem = SVGSpace.svgElement(ctx.group, \"path\", SVGForm.getID(ctx));\n        const start = new Pt(pt).toAngle(startAngle, radius, true);\n        const end = new Pt(pt).toAngle(endAngle, radius, true);\n        const diff = Geom.boundAngle(endAngle) - Geom.boundAngle(startAngle);\n        let largeArc = (diff > Const.pi) ? true : false;\n        if (cc)\n            largeArc = !largeArc;\n        const sweep = (cc) ? \"0\" : \"1\";\n        const d = `M ${start[0]} ${start[1]} A ${radius} ${radius} 0 ${largeArc ? \"1\" : \"0\"} ${sweep} ${end[0]} ${end[1]}`;\n        DOMSpace.setAttr(elem, {\n            d: d,\n            'class': `pts-svgform pts-arc ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    arc(pt, radius, startAngle, endAngle, cc) {\n        this.nextID();\n        SVGForm.arc(this._ctx, pt, radius, startAngle, endAngle, cc);\n        return this;\n    }\n    static square(ctx, pt, halfsize) {\n        let elem = SVGSpace.svgElement(ctx.group, \"rect\", SVGForm.getID(ctx));\n        DOMSpace.setAttr(elem, {\n            x: pt[0] - halfsize,\n            y: pt[1] - halfsize,\n            width: halfsize * 2,\n            height: halfsize * 2,\n            'class': `pts-svgform pts-square ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    square(pt, halfsize) {\n        this.nextID();\n        SVGForm.square(this._ctx, pt, halfsize);\n        return this;\n    }\n    static line(ctx, pts) {\n        if (!this._checkSize(pts))\n            return;\n        if (pts.length > 2)\n            return SVGForm._poly(ctx, pts, false);\n        let elem = SVGSpace.svgElement(ctx.group, \"line\", SVGForm.getID(ctx));\n        DOMSpace.setAttr(elem, {\n            x1: pts[0][0],\n            y1: pts[0][1],\n            x2: pts[1][0],\n            y2: pts[1][1],\n            'class': `pts-svgform pts-line ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    line(pts) {\n        this.nextID();\n        SVGForm.line(this._ctx, pts);\n        return this;\n    }\n    static _poly(ctx, pts, closePath = true) {\n        if (!this._checkSize(pts))\n            return;\n        let elem = SVGSpace.svgElement(ctx.group, ((closePath) ? \"polygon\" : \"polyline\"), SVGForm.getID(ctx));\n        let points = pts.reduce((a, p) => a + `${p[0]},${p[1]} `, \"\");\n        DOMSpace.setAttr(elem, {\n            points: points,\n            'class': `pts-svgform pts-polygon ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    static polygon(ctx, pts) {\n        return SVGForm._poly(ctx, pts, true);\n    }\n    polygon(pts) {\n        this.nextID();\n        SVGForm.polygon(this._ctx, pts);\n        return this;\n    }\n    static rect(ctx, pts) {\n        if (!this._checkSize(pts))\n            return;\n        let elem = SVGSpace.svgElement(ctx.group, \"rect\", SVGForm.getID(ctx));\n        let bound = Group.fromArray(pts).boundingBox();\n        let size = Rectangle.size(bound);\n        DOMSpace.setAttr(elem, {\n            x: bound[0][0],\n            y: bound[0][1],\n            width: size[0],\n            height: size[1],\n            'class': `pts-svgform pts-rect ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    rect(pts) {\n        this.nextID();\n        SVGForm.rect(this._ctx, pts);\n        return this;\n    }\n    static text(ctx, pt, txt) {\n        let elem = SVGSpace.svgElement(ctx.group, \"text\", SVGForm.getID(ctx));\n        DOMSpace.setAttr(elem, {\n            \"pointer-events\": \"none\",\n            x: pt[0],\n            y: pt[1],\n            dx: 0, dy: 0,\n            'class': `pts-svgform pts-text ${ctx.currentClass}`,\n        });\n        elem.textContent = txt;\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    text(pt, txt) {\n        this.nextID();\n        SVGForm.text(this._ctx, pt, txt);\n        return this;\n    }\n    log(txt) {\n        this.fill(\"#000\").stroke(\"#fff\", 0.5).text([10, 14], txt);\n        return this;\n    }\n}\nSVGForm.groupID = 0;\nSVGForm.domID = 0;\n//# sourceMappingURL=Svg.js.map"]},"metadata":{},"sourceType":"module"}