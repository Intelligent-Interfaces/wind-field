{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { Signal } from \"./Signal\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { TransportTimeClass } from \"../core/type/TransportTime\";\nimport { ToneConstantSource } from \"./ToneConstantSource\";\n/**\n * Adds the ability to synchronize the signal to the [[Transport]]\n */\n\nvar SyncedSignal =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(SyncedSignal, _super);\n\n  function SyncedSignal() {\n    var _this = _super.call(this, optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"])) || this;\n\n    _this.name = \"SyncedSignal\";\n    /**\n     * Don't override when something is connected to the input\n     */\n\n    _this.override = false;\n    var options = optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]);\n    _this._lastVal = options.value;\n    _this._synced = _this.context.transport.scheduleRepeat(_this._onTick.bind(_this), \"1i\");\n    _this._syncedCallback = _this._anchorValue.bind(_this);\n\n    _this.context.transport.on(\"start\", _this._syncedCallback);\n\n    _this.context.transport.on(\"pause\", _this._syncedCallback);\n\n    _this.context.transport.on(\"stop\", _this._syncedCallback); // disconnect the constant source from the output and replace it with another one\n\n\n    _this._constantSource.disconnect();\n\n    _this._constantSource.stop(0); // create a new one\n\n\n    _this._constantSource = _this.output = new ToneConstantSource({\n      context: _this.context,\n      offset: options.value,\n      units: options.units\n    }).start(0);\n\n    _this.setValueAtTime(options.value, 0);\n\n    return _this;\n  }\n  /**\n   * Callback which is invoked every tick.\n   */\n\n\n  SyncedSignal.prototype._onTick = function (time) {\n    var val = _super.prototype.getValueAtTime.call(this, this.context.transport.seconds); // approximate ramp curves with linear ramps\n\n\n    if (this._lastVal !== val) {\n      this._lastVal = val;\n\n      this._constantSource.offset.setValueAtTime(val, time);\n    }\n  };\n  /**\n   * Anchor the value at the start and stop of the Transport\n   */\n\n\n  SyncedSignal.prototype._anchorValue = function (time) {\n    var val = _super.prototype.getValueAtTime.call(this, this.context.transport.seconds);\n\n    this._lastVal = val;\n\n    this._constantSource.offset.cancelAndHoldAtTime(time);\n\n    this._constantSource.offset.setValueAtTime(val, time);\n  };\n\n  SyncedSignal.prototype.getValueAtTime = function (time) {\n    var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n    return _super.prototype.getValueAtTime.call(this, computedTime);\n  };\n\n  SyncedSignal.prototype.setValueAtTime = function (value, time) {\n    var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n\n    _super.prototype.setValueAtTime.call(this, value, computedTime);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.linearRampToValueAtTime = function (value, time) {\n    var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n\n    _super.prototype.linearRampToValueAtTime.call(this, value, computedTime);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.exponentialRampToValueAtTime = function (value, time) {\n    var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n\n    _super.prototype.exponentialRampToValueAtTime.call(this, value, computedTime);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n    var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n\n    _super.prototype.setTargetAtTime.call(this, value, computedTime, timeConstant);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.cancelScheduledValues = function (startTime) {\n    var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n\n    _super.prototype.cancelScheduledValues.call(this, computedTime);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.setValueCurveAtTime = function (values, startTime, duration, scaling) {\n    var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n    duration = this.toSeconds(duration);\n\n    _super.prototype.setValueCurveAtTime.call(this, values, computedTime, duration, scaling);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.cancelAndHoldAtTime = function (time) {\n    var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n\n    _super.prototype.cancelAndHoldAtTime.call(this, computedTime);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.setRampPoint = function (time) {\n    var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n\n    _super.prototype.setRampPoint.call(this, computedTime);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.exponentialRampTo = function (value, rampTime, startTime) {\n    var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n\n    _super.prototype.exponentialRampTo.call(this, value, rampTime, computedTime);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.linearRampTo = function (value, rampTime, startTime) {\n    var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n\n    _super.prototype.linearRampTo.call(this, value, rampTime, computedTime);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.targetRampTo = function (value, rampTime, startTime) {\n    var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n\n    _super.prototype.targetRampTo.call(this, value, rampTime, computedTime);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.context.transport.clear(this._synced);\n    this.context.transport.off(\"start\", this._syncedCallback);\n    this.context.transport.off(\"pause\", this._syncedCallback);\n    this.context.transport.off(\"stop\", this._syncedCallback);\n\n    this._constantSource.dispose();\n\n    return this;\n  };\n\n  return SyncedSignal;\n}(Signal);\n\nexport { SyncedSignal };","map":{"version":3,"sources":["../../../Tone/signal/SyncedSignal.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { Signal } from \"./Signal\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { TransportTimeClass } from \"../core/type/TransportTime\";\nimport { ToneConstantSource } from \"./ToneConstantSource\";\n/**\n * Adds the ability to synchronize the signal to the [[Transport]]\n */\nvar SyncedSignal = /** @class */ (function (_super) {\n    tslib_1.__extends(SyncedSignal, _super);\n    function SyncedSignal() {\n        var _this = _super.call(this, optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"])) || this;\n        _this.name = \"SyncedSignal\";\n        /**\n         * Don't override when something is connected to the input\n         */\n        _this.override = false;\n        var options = optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]);\n        _this._lastVal = options.value;\n        _this._synced = _this.context.transport.scheduleRepeat(_this._onTick.bind(_this), \"1i\");\n        _this._syncedCallback = _this._anchorValue.bind(_this);\n        _this.context.transport.on(\"start\", _this._syncedCallback);\n        _this.context.transport.on(\"pause\", _this._syncedCallback);\n        _this.context.transport.on(\"stop\", _this._syncedCallback);\n        // disconnect the constant source from the output and replace it with another one\n        _this._constantSource.disconnect();\n        _this._constantSource.stop(0);\n        // create a new one\n        _this._constantSource = _this.output = new ToneConstantSource({\n            context: _this.context,\n            offset: options.value,\n            units: options.units,\n        }).start(0);\n        _this.setValueAtTime(options.value, 0);\n        return _this;\n    }\n    /**\n     * Callback which is invoked every tick.\n     */\n    SyncedSignal.prototype._onTick = function (time) {\n        var val = _super.prototype.getValueAtTime.call(this, this.context.transport.seconds);\n        // approximate ramp curves with linear ramps\n        if (this._lastVal !== val) {\n            this._lastVal = val;\n            this._constantSource.offset.setValueAtTime(val, time);\n        }\n    };\n    /**\n     * Anchor the value at the start and stop of the Transport\n     */\n    SyncedSignal.prototype._anchorValue = function (time) {\n        var val = _super.prototype.getValueAtTime.call(this, this.context.transport.seconds);\n        this._lastVal = val;\n        this._constantSource.offset.cancelAndHoldAtTime(time);\n        this._constantSource.offset.setValueAtTime(val, time);\n    };\n    SyncedSignal.prototype.getValueAtTime = function (time) {\n        var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n        return _super.prototype.getValueAtTime.call(this, computedTime);\n    };\n    SyncedSignal.prototype.setValueAtTime = function (value, time) {\n        var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n        _super.prototype.setValueAtTime.call(this, value, computedTime);\n        return this;\n    };\n    SyncedSignal.prototype.linearRampToValueAtTime = function (value, time) {\n        var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n        _super.prototype.linearRampToValueAtTime.call(this, value, computedTime);\n        return this;\n    };\n    SyncedSignal.prototype.exponentialRampToValueAtTime = function (value, time) {\n        var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n        _super.prototype.exponentialRampToValueAtTime.call(this, value, computedTime);\n        return this;\n    };\n    SyncedSignal.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n        var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n        _super.prototype.setTargetAtTime.call(this, value, computedTime, timeConstant);\n        return this;\n    };\n    SyncedSignal.prototype.cancelScheduledValues = function (startTime) {\n        var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n        _super.prototype.cancelScheduledValues.call(this, computedTime);\n        return this;\n    };\n    SyncedSignal.prototype.setValueCurveAtTime = function (values, startTime, duration, scaling) {\n        var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n        duration = this.toSeconds(duration);\n        _super.prototype.setValueCurveAtTime.call(this, values, computedTime, duration, scaling);\n        return this;\n    };\n    SyncedSignal.prototype.cancelAndHoldAtTime = function (time) {\n        var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n        _super.prototype.cancelAndHoldAtTime.call(this, computedTime);\n        return this;\n    };\n    SyncedSignal.prototype.setRampPoint = function (time) {\n        var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n        _super.prototype.setRampPoint.call(this, computedTime);\n        return this;\n    };\n    SyncedSignal.prototype.exponentialRampTo = function (value, rampTime, startTime) {\n        var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n        _super.prototype.exponentialRampTo.call(this, value, rampTime, computedTime);\n        return this;\n    };\n    SyncedSignal.prototype.linearRampTo = function (value, rampTime, startTime) {\n        var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n        _super.prototype.linearRampTo.call(this, value, rampTime, computedTime);\n        return this;\n    };\n    SyncedSignal.prototype.targetRampTo = function (value, rampTime, startTime) {\n        var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n        _super.prototype.targetRampTo.call(this, value, rampTime, computedTime);\n        return this;\n    };\n    SyncedSignal.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.context.transport.clear(this._synced);\n        this.context.transport.off(\"start\", this._syncedCallback);\n        this.context.transport.off(\"pause\", this._syncedCallback);\n        this.context.transport.off(\"stop\", this._syncedCallback);\n        this._constantSource.dispose();\n        return this;\n    };\n    return SyncedSignal;\n}(Signal));\nexport { SyncedSignal };\n//# sourceMappingURL=SyncedSignal.js.map"]},"metadata":{},"sourceType":"module"}