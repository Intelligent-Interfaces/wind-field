{"ast":null,"code":"import _slicedToArray from \"/Users/erickoduniyi/Desktop/affective_chaos_control/Emulators/wind-field/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/erickoduniyi/Desktop/affective_chaos_control/Emulators/wind-field/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/erickoduniyi/Desktop/affective_chaos_control/Emulators/wind-field/src/components/Knob/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Box } from '../Box';\nimport styled from '../../styled';\nimport { color, space } from 'styled-system';\nimport { darken } from 'polished';\nimport { get } from 'lodash';\nconst KnobInner = styled.div`\n  align-items: center;\n  border-radius: 50%;\n  border: 5px solid #74788D;\n  display: flex;\n  height: 108px;\n  justify-content: center;\n  width: 108px;\n`;\nconst KnobCenter = styled.div`\n  align-items: center;\n  box-shadow:\n    6px 6px 5px #A6ABBD,\n    inset 0px 1px 8px rgba(0, 0, 0, 0.05),\n    inset 2px 2px 2px rgba(238, 238, 238, 0.5);\n  border-radius: 50%;\n  display: flex;\n  height: 62px;\n  justify-content: center;\n  width: 62px;\n`;\nconst KnobIndent = styled.div.attrs(props => ({\n  style: {\n    transform: `rotate(${props.deg}deg)`\n  }\n}))`\n  border: 0.5px solid;\n  box-sizing: border-box;\n  box-shadow: inset 0px 4px 4px rgba(0, 0, 0, 0.25), inset 1px 1px 0.5px rgba(0, 0, 0, 0.1);\n  border-radius: 50px;\n  height: 36px;\n  width: 10px;\n`; // This controls the knob outline\n\nconst KnobStyles = styled(Box)`\n  align-items: center;\n  // background: #D9DCE5;\n  // background: #D9DCE5;\n  background:  #C7A079;\n  // border: 3px solid #9F98F5;\n  border: 3px solid #B78963;\n  border-radius: 6px;\n  display: flex;\n  height: 100%;\n  justify-content: center;\n  outline: none;\n  width: 100%;\n  padding: 15px;\n\n  ${KnobCenter} {\n    ${color}\n  }\n\n  ${KnobIndent} {\n    border-color: ${props => darken(0.1, get(props.theme.colors, props.bg))};\n  }\n\n  ${space}\n`;\n\nconst Knob = (_ref) => {\n  let _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 150 : _ref$size,\n      _ref$min = _ref.min,\n      min = _ref$min === void 0 ? 0 : _ref$min,\n      _ref$max = _ref.max,\n      max = _ref$max === void 0 ? 360 : _ref$max,\n      _ref$numTicks = _ref.numTicks,\n      numTicks = _ref$numTicks === void 0 ? 0 : _ref$numTicks,\n      _ref$degrees = _ref.degrees,\n      degrees = _ref$degrees === void 0 ? 360 : _ref$degrees,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? 0 : _ref$value,\n      onChange = _ref.onChange,\n      rest = _objectWithoutProperties(_ref, [\"size\", \"min\", \"max\", \"numTicks\", \"degrees\", \"value\", \"onChange\"]);\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentDeg = _useState2[0],\n        setCurrentDeg = _useState2[1];\n\n  const startAngle = (360 - degrees) / 2;\n  const endAngle = startAngle + degrees;\n  useEffect(() => {\n    const startVal = Math.floor(convertRange(min, max, startAngle, endAngle, value));\n    setCurrentDeg(startVal);\n  }, [min, max, endAngle, startAngle, value, setCurrentDeg]);\n\n  const getDeg = (cX, cY, pts) => {\n    const x = cX - pts.x;\n    const y = cY - pts.y;\n    let deg = Math.atan(y / x) * 180 / Math.PI;\n\n    if (x < 0 && y >= 0 || x < 0 && y < 0) {\n      deg += 90;\n    } else {\n      deg += 270;\n    }\n\n    let finalDeg = Math.min(Math.max(startAngle, deg), endAngle);\n    return finalDeg;\n  };\n\n  const convertRange = (oldMin, oldMax, newMin, newMax, oldValue) => {\n    return (oldValue - oldMin) * (newMax - newMin) / (oldMax - oldMin) + newMin;\n  };\n\n  const startDrag = e => {\n    e.preventDefault();\n    const knob = e.target.getBoundingClientRect();\n    const pts = {\n      x: knob.left + knob.width / 2,\n      y: knob.top + knob.height / 2\n    };\n\n    const moveHandler = e => {\n      let currentDeg = getDeg(e.clientX, e.clientY, pts);\n      if (currentDeg === startAngle) currentDeg--;\n      let newValue = Math.floor(convertRange(startAngle, endAngle, min, max, currentDeg));\n      setCurrentDeg(currentDeg);\n      onChange(newValue);\n    };\n\n    document.addEventListener(\"mousemove\", moveHandler);\n    document.addEventListener(\"mouseup\", e => {\n      document.removeEventListener(\"mousemove\", moveHandler);\n    });\n  };\n\n  return React.createElement(KnobStyles, Object.assign({}, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(KnobInner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(KnobCenter, {\n    onMouseDown: e => startDrag(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(KnobIndent, {\n    deg: currentDeg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }))));\n};\n\nexport { Knob };","map":{"version":3,"sources":["/Users/erickoduniyi/Desktop/affective_chaos_control/Emulators/wind-field/src/components/Knob/index.tsx"],"names":["React","useState","useEffect","Box","styled","color","space","darken","get","KnobInner","div","KnobCenter","KnobIndent","attrs","props","style","transform","deg","KnobStyles","theme","colors","bg","Knob","size","min","max","numTicks","degrees","value","onChange","rest","currentDeg","setCurrentDeg","startAngle","endAngle","startVal","Math","floor","convertRange","getDeg","cX","cY","pts","x","y","atan","PI","finalDeg","oldMin","oldMax","newMin","newMax","oldValue","startDrag","e","preventDefault","knob","target","getBoundingClientRect","left","width","top","height","moveHandler","clientX","clientY","newValue","document","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box } from '../Box';\nimport styled, { IThemeStyledFunction } from '../../styled';\nimport { SpaceProps, ColorProps, color, space } from 'styled-system';\nimport { darken } from 'polished';\nimport { get } from 'lodash';\n\ntype KnobProps = IThemeStyledFunction & SpaceProps & ColorProps & {\n  size?: number;\n  min?: number;\n  max?: number;\n  numTicks?: number;\n  degrees?: number;\n  value?: number;\n  onChange: (e: any) => void;\n}\n\nconst KnobInner = styled.div`\n  align-items: center;\n  border-radius: 50%;\n  border: 5px solid #74788D;\n  display: flex;\n  height: 108px;\n  justify-content: center;\n  width: 108px;\n`;\n\nconst KnobCenter: any = styled.div`\n  align-items: center;\n  box-shadow:\n    6px 6px 5px #A6ABBD,\n    inset 0px 1px 8px rgba(0, 0, 0, 0.05),\n    inset 2px 2px 2px rgba(238, 238, 238, 0.5);\n  border-radius: 50%;\n  display: flex;\n  height: 62px;\n  justify-content: center;\n  width: 62px;\n`;\n\nconst KnobIndent: any = styled.div.attrs((props: { deg?: number }) => ({\n  style: {\n    transform: `rotate(${props.deg}deg)`,\n  },\n}))`\n  border: 0.5px solid;\n  box-sizing: border-box;\n  box-shadow: inset 0px 4px 4px rgba(0, 0, 0, 0.25), inset 1px 1px 0.5px rgba(0, 0, 0, 0.1);\n  border-radius: 50px;\n  height: 36px;\n  width: 10px;\n`;\n\n// This controls the knob outline\nconst KnobStyles = styled(Box)<KnobProps>`\n  align-items: center;\n  // background: #D9DCE5;\n  // background: #D9DCE5;\n  background:  #C7A079;\n  // border: 3px solid #9F98F5;\n  border: 3px solid #B78963;\n  border-radius: 6px;\n  display: flex;\n  height: 100%;\n  justify-content: center;\n  outline: none;\n  width: 100%;\n  padding: 15px;\n\n  ${KnobCenter} {\n    ${color}\n  }\n\n  ${KnobIndent} {\n    border-color: ${props => darken(0.1, get(props.theme.colors, props.bg))};\n  }\n\n  ${space}\n`;\n\nconst Knob: React.FC<KnobProps> = ({\n  size = 150,\n  min = 0,\n  max = 360,\n  numTicks = 0,\n  degrees = 360,\n  value = 0,\n  onChange,\n  ...rest\n}) => {\n\n  const [currentDeg, setCurrentDeg] = useState<number>(0);\n  const startAngle = (360 - degrees) / 2;\n  const endAngle = startAngle + degrees;\n\n  useEffect(\n    () => {\n      const startVal = Math.floor(\n        convertRange(\n          min,\n          max,\n          startAngle,\n          endAngle,\n          value\n        )\n      );\n      setCurrentDeg(startVal);\n    },\n    [min, max, endAngle, startAngle, value, setCurrentDeg]\n  )\n\n  const getDeg = (cX: number, cY: number, pts: { x: number; y: number }) => {\n    const x = cX - pts.x;\n    const y = cY - pts.y;\n    let deg = Math.atan(y / x) * 180 / Math.PI;\n    if ((x < 0 && y >= 0) || (x < 0 && y < 0)) {\n      deg += 90;\n    } else {\n      deg += 270;\n    }\n    let finalDeg = Math.min(Math.max(startAngle, deg), endAngle);\n    return finalDeg;\n  };\n\n  const convertRange = (oldMin: number, oldMax: number, newMin: number, newMax: number, oldValue: number) => {\n    return (oldValue - oldMin) * (newMax - newMin) / (oldMax - oldMin) + newMin;\n  };\n\n  const startDrag = (e: any) => {\n    e.preventDefault();\n    const knob = e.target.getBoundingClientRect();\n    const pts = {\n      x: knob.left + knob.width / 2,\n      y: knob.top + knob.height / 2\n    };\n    const moveHandler = (e: any) => {\n      let currentDeg = getDeg(e.clientX, e.clientY, pts);\n      if (currentDeg === startAngle) currentDeg--;\n      let newValue = Math.floor(\n        convertRange(\n          startAngle,\n          endAngle,\n          min,\n          max,\n          currentDeg\n        )\n      );\n      setCurrentDeg(currentDeg);\n      onChange(newValue);\n    };\n    document.addEventListener(\"mousemove\", moveHandler);\n    document.addEventListener(\"mouseup\", e => {\n      document.removeEventListener(\"mousemove\", moveHandler);\n    });\n  };\n\n  return (\n    <KnobStyles {...rest}>\n      <KnobInner>\n        <KnobCenter onMouseDown={(e: any) => startDrag(e)}>\n          <KnobIndent deg={currentDeg}/>\n        </KnobCenter>\n      </KnobInner>\n    </KnobStyles>\n  );\n}\n\nexport { Knob };\n"]},"metadata":{},"sourceType":"module"}