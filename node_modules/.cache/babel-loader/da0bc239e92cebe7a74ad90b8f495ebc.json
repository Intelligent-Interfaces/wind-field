{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n/**\n * GainToAudio converts an input in NormalRange [0,1] to AudioRange [-1,1].\n * See {@link AudioToGain}.\n * @category Signal\n */\n\nvar GainToAudio =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(GainToAudio, _super);\n\n  function GainToAudio() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = \"GainToAudio\";\n    /**\n     * The node which converts the audio ranges\n     */\n\n    _this._norm = new WaveShaper({\n      context: _this.context,\n      mapping: function (x) {\n        return Math.abs(x) * 2 - 1;\n      }\n    });\n    /**\n     * The NormalRange input [0, 1]\n     */\n\n    _this.input = _this._norm;\n    /**\n     * The AudioRange output [-1, 1]\n     */\n\n    _this.output = _this._norm;\n    return _this;\n  }\n  /**\n   * clean up\n   */\n\n\n  GainToAudio.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._norm.dispose();\n\n    return this;\n  };\n\n  return GainToAudio;\n}(SignalOperator);\n\nexport { GainToAudio };","map":{"version":3,"sources":["../../../Tone/signal/GainToAudio.ts"],"names":[],"mappings":";AACA,SAAS,cAAT,QAA+B,kBAA/B;AACA,SAAS,UAAT,QAA2B,cAA3B;AAEA;;;;;;AAKA,IAAA,WAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiC,EAAA,OAAA,CAAA,SAAA,CAAA,WAAA,EAAA,MAAA;;AAAjC,WAAA,WAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAEU,IAAA,KAAA,CAAA,IAAA,GAAe,aAAf;AAET;;;;AAGQ,IAAA,KAAA,CAAA,KAAA,GAAQ,IAAI,UAAJ,CAAe;AAC9B,MAAA,OAAO,EAAE,KAAI,CAAC,OADgB;AAE9B,MAAA,OAAO,EAAE,UAAA,CAAA,EAAC;AAAI,eAAA,IAAI,CAAC,GAAL,CAAS,CAAT,IAAc,CAAd,GAAA,CAAA;AAAmB;AAFH,KAAf,CAAR;AAKR;;;;AAGA,IAAA,KAAA,CAAA,KAAA,GAAQ,KAAI,CAAC,KAAb;AAEA;;;;AAGA,IAAA,KAAA,CAAA,MAAA,GAAS,KAAI,CAAC,KAAd;;AAUA;AARA;;;;;AAGA,EAAA,WAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACC,IAAA,MAAA,CAAA,SAAA,CAAM,OAAN,CAAa,IAAb,CAAa,IAAb;;AACA,SAAK,KAAL,CAAW,OAAX;;AACA,WAAO,IAAP;AACA,GAJD;;AAKD,SAAA,WAAA;AAAC,CA9BD,CAAiC,cAAjC,CAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n/**\n * GainToAudio converts an input in NormalRange [0,1] to AudioRange [-1,1].\n * See {@link AudioToGain}.\n * @category Signal\n */\nvar GainToAudio = /** @class */ (function (_super) {\n    tslib_1.__extends(GainToAudio, _super);\n    function GainToAudio() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"GainToAudio\";\n        /**\n         * The node which converts the audio ranges\n         */\n        _this._norm = new WaveShaper({\n            context: _this.context,\n            mapping: function (x) { return Math.abs(x) * 2 - 1; },\n        });\n        /**\n         * The NormalRange input [0, 1]\n         */\n        _this.input = _this._norm;\n        /**\n         * The AudioRange output [-1, 1]\n         */\n        _this.output = _this._norm;\n        return _this;\n    }\n    /**\n     * clean up\n     */\n    GainToAudio.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._norm.dispose();\n        return this;\n    };\n    return GainToAudio;\n}(SignalOperator));\nexport { GainToAudio };\n//# sourceMappingURL=GainToAudio.js.map"]},"metadata":{},"sourceType":"module"}