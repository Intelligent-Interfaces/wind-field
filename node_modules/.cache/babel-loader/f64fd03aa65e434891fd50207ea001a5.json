{"ast":null,"code":"import { Loop, MembraneSynth } from 'tone';\nimport { BaseSubject } from './BaseSubject';\nimport { start } from 'tone';\nexport class MetronomeSubject extends BaseSubject {\n  constructor() {\n    super({\n      enabled: false\n    });\n    this.store = 'metronome-state';\n    this.synth = void 0;\n    this.loop = void 0;\n    this.synth = new MembraneSynth().toDestination();\n    this.loop = new Loop(time => {\n      this.synth.triggerAttackRelease(\"C1\", \"8n\", time);\n    }, \"4n\");\n  }\n\n  async enable() {\n    await start();\n\n    if (this.loop.state === 'started') {\n      this.loop.stop();\n    } else {\n      this.loop.start(0);\n    }\n\n    this.patch({\n      enabled: this.loop.state === 'started' ? true : false\n    });\n  }\n\n}\nexport default new MetronomeSubject();","map":{"version":3,"sources":["/Users/erickoduniyi/Desktop/Work/multi_media_signal_processing/skeuomorphic-synth-master/src/engine/MetronomeSubject.ts"],"names":["Loop","MembraneSynth","BaseSubject","start","MetronomeSubject","constructor","enabled","store","synth","loop","toDestination","time","triggerAttackRelease","enable","state","stop","patch"],"mappings":"AAAA,SAASA,IAAT,EAAeC,aAAf,QAAoC,MAApC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,KAAT,QAAsB,MAAtB;AAGA,OAAO,MAAMC,gBAAN,SAA+BF,WAA/B,CAA2D;AAMhEG,EAAAA,WAAW,GAAG;AACZ,UAAM;AACJC,MAAAA,OAAO,EAAE;AADL,KAAN;AADY,SALJC,KAKI,GALY,iBAKZ;AAAA,SAHNC,KAGM;AAAA,SAFNC,IAEM;AAKZ,SAAKD,KAAL,GAAa,IAAIP,aAAJ,GAAoBS,aAApB,EAAb;AACA,SAAKD,IAAL,GAAY,IAAIT,IAAJ,CAAUW,IAAD,IAAU;AAC7B,WAAKH,KAAL,CAAWI,oBAAX,CAAgC,IAAhC,EAAsC,IAAtC,EAA4CD,IAA5C;AACD,KAFW,EAET,IAFS,CAAZ;AAGD;;AAED,QAAME,MAAN,GAAe;AACb,UAAMV,KAAK,EAAX;;AAEA,QAAI,KAAKM,IAAL,CAAUK,KAAV,KAAoB,SAAxB,EAAmC;AACjC,WAAKL,IAAL,CAAUM,IAAV;AACD,KAFD,MAEO;AACL,WAAKN,IAAL,CAAUN,KAAV,CAAgB,CAAhB;AACD;;AAED,SAAKa,KAAL,CAAW;AACTV,MAAAA,OAAO,EAAE,KAAKG,IAAL,CAAUK,KAAV,KAAoB,SAApB,GAAgC,IAAhC,GAAuC;AADvC,KAAX;AAGD;;AA7B+D;AAgClE,eAAe,IAAIV,gBAAJ,EAAf","sourcesContent":["import { Loop, MembraneSynth } from 'tone';\nimport { BaseSubject } from './BaseSubject';\nimport { start } from 'tone';\nimport { MetronomeState } from '../interfaces';\n\nexport class MetronomeSubject extends BaseSubject<MetronomeState> {\n  protected store: string = 'metronome-state';\n\n  private synth: MembraneSynth;\n  private loop: Loop;\n\n  constructor() {\n    super({\n      enabled: false,\n    });\n\n    this.synth = new MembraneSynth().toDestination();\n    this.loop = new Loop((time) => {\n      this.synth.triggerAttackRelease(\"C1\", \"8n\", time)\n    }, \"4n\");\n  }\n\n  async enable() {\n    await start();\n\n    if (this.loop.state === 'started') {\n      this.loop.stop();\n    } else {\n      this.loop.start(0);\n    }\n\n    this.patch({\n      enabled: this.loop.state === 'started' ? true : false\n    });\n  }\n}\n\nexport default new MetronomeSubject();\n"]},"metadata":{},"sourceType":"module"}