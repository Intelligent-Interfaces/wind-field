{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { Gain } from \"../core/context/Gain\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Effect } from \"./Effect\";\n/**\n * FeedbackEffect provides a loop between an audio source and its own output.\n * This is a base-class for feedback effects.\n */\n\nvar FeedbackEffect =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(FeedbackEffect, _super);\n\n  function FeedbackEffect(options) {\n    var _this = _super.call(this, options) || this;\n\n    _this.name = \"FeedbackEffect\";\n    _this._feedbackGain = new Gain({\n      context: _this.context,\n      gain: options.feedback,\n      units: \"normalRange\"\n    });\n    _this.feedback = _this._feedbackGain.gain;\n    readOnly(_this, \"feedback\"); // the feedback loop\n\n    _this.effectReturn.chain(_this._feedbackGain, _this.effectSend);\n\n    return _this;\n  }\n\n  FeedbackEffect.getDefaults = function () {\n    return Object.assign(Effect.getDefaults(), {\n      feedback: 0.125\n    });\n  };\n\n  FeedbackEffect.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._feedbackGain.dispose();\n\n    this.feedback.dispose();\n    return this;\n  };\n\n  return FeedbackEffect;\n}(Effect);\n\nexport { FeedbackEffect };","map":{"version":3,"sources":["../../../Tone/effect/FeedbackEffect.ts"],"names":[],"mappings":";AAAA,SAAS,IAAT,QAAqB,sBAArB;AAGA,SAAS,QAAT,QAAyB,wBAAzB;AACA,SAAS,MAAT,QAAsC,UAAtC;AAgBA;;;;;AAIA,IAAA,cAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoF,EAAA,OAAA,CAAA,SAAA,CAAA,cAAA,EAAA,MAAA;;AAcnF,WAAA,cAAA,CAAY,OAAZ,EAA0C;AAA1C,QAAA,KAAA,GAEC,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,OAAN,KAAc,IAFf;;AAZS,IAAA,KAAA,CAAA,IAAA,GAAe,gBAAf;AAgBR,IAAA,KAAI,CAAC,aAAL,GAAqB,IAAI,IAAJ,CAAS;AAC7B,MAAA,OAAO,EAAE,KAAI,CAAC,OADe;AAE7B,MAAA,IAAI,EAAE,OAAO,CAAC,QAFe;AAG7B,MAAA,KAAK,EAAE;AAHsB,KAAT,CAArB;AAMA,IAAA,KAAI,CAAC,QAAL,GAAgB,KAAI,CAAC,aAAL,CAAmB,IAAnC;AACA,IAAA,QAAQ,CAAC,KAAD,EAAO,UAAP,CAAR,CAXyC,CAazC;;AACA,IAAA,KAAI,CAAC,YAAL,CAAkB,KAAlB,CAAwB,KAAI,CAAC,aAA7B,EAA4C,KAAI,CAAC,UAAjD;;;AACA;;AAEM,EAAA,cAAA,CAAA,WAAA,GAAP,YAAA;AACC,WAAO,MAAM,CAAC,MAAP,CAAc,MAAM,CAAC,WAAP,EAAd,EAAoC;AAC1C,MAAA,QAAQ,EAAE;AADgC,KAApC,CAAP;AAGA,GAJM;;AAMP,EAAA,cAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACC,IAAA,MAAA,CAAA,SAAA,CAAM,OAAN,CAAa,IAAb,CAAa,IAAb;;AACA,SAAK,aAAL,CAAmB,OAAnB;;AACA,SAAK,QAAL,CAAc,OAAd;AACA,WAAO,IAAP;AACA,GALD;;AAMD,SAAA,cAAA;AAAC,CA3CD,CAAoF,MAApF,CAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { Gain } from \"../core/context/Gain\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Effect } from \"./Effect\";\n/**\n * FeedbackEffect provides a loop between an audio source and its own output.\n * This is a base-class for feedback effects.\n */\nvar FeedbackEffect = /** @class */ (function (_super) {\n    tslib_1.__extends(FeedbackEffect, _super);\n    function FeedbackEffect(options) {\n        var _this = _super.call(this, options) || this;\n        _this.name = \"FeedbackEffect\";\n        _this._feedbackGain = new Gain({\n            context: _this.context,\n            gain: options.feedback,\n            units: \"normalRange\",\n        });\n        _this.feedback = _this._feedbackGain.gain;\n        readOnly(_this, \"feedback\");\n        // the feedback loop\n        _this.effectReturn.chain(_this._feedbackGain, _this.effectSend);\n        return _this;\n    }\n    FeedbackEffect.getDefaults = function () {\n        return Object.assign(Effect.getDefaults(), {\n            feedback: 0.125,\n        });\n    };\n    FeedbackEffect.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._feedbackGain.dispose();\n        this.feedback.dispose();\n        return this;\n    };\n    return FeedbackEffect;\n}(Effect));\nexport { FeedbackEffect };\n//# sourceMappingURL=FeedbackEffect.js.map"]},"metadata":{},"sourceType":"module"}