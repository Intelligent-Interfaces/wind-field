{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { Timeline } from \"./Timeline\";\nimport { Tone } from \"../Tone\";\n/**\n * Represents a single value which is gettable and settable in a timed way\n */\n\nvar TimelineValue =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(TimelineValue, _super);\n  /**\n   * @param initialValue The value to return if there is no scheduled values\n   */\n\n\n  function TimelineValue(initialValue) {\n    var _this = _super.call(this) || this;\n\n    _this.name = \"TimelineValue\";\n    /**\n     * The timeline which stores the values\n     */\n\n    _this._timeline = new Timeline({\n      memory: 10\n    });\n    _this._initialValue = initialValue;\n    return _this;\n  }\n  /**\n   * Set the value at the given time\n   */\n\n\n  TimelineValue.prototype.set = function (value, time) {\n    this._timeline.add({\n      value: value,\n      time: time\n    });\n\n    return this;\n  };\n  /**\n   * Get the value at the given time\n   */\n\n\n  TimelineValue.prototype.get = function (time) {\n    var event = this._timeline.get(time);\n\n    if (event) {\n      return event.value;\n    } else {\n      return this._initialValue;\n    }\n  };\n\n  return TimelineValue;\n}(Tone);\n\nexport { TimelineValue };","map":{"version":3,"sources":["../../../../Tone/core/util/TimelineValue.ts"],"names":[],"mappings":";AAAA,SAAS,QAAT,QAAwC,YAAxC;AACA,SAAS,IAAT,QAAqB,SAArB;AAOA;;;;AAGA,IAAA,aAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyC,EAAA,OAAA,CAAA,SAAA,CAAA,aAAA,EAAA,MAAA;AAcxC;;;;;AAGA,WAAA,aAAA,CAAY,YAAZ,EAA8B;AAA9B,QAAA,KAAA,GAEC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IAFR;;AAfS,IAAA,KAAA,CAAA,IAAA,GAAe,eAAf;AAET;;;;AAGQ,IAAA,KAAA,CAAA,SAAA,GAAgD,IAAI,QAAJ,CAAa;AAAE,MAAA,MAAM,EAAE;AAAV,KAAb,CAAhD;AAaP,IAAA,KAAI,CAAC,aAAL,GAAqB,YAArB;;AACA;AAED;;;;;AAGA,EAAA,aAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,KAAJ,EAAiB,IAAjB,EAA8B;AAC7B,SAAK,SAAL,CAAe,GAAf,CAAmB;AAClB,MAAA,KAAK,EAAA,KADa;AACX,MAAA,IAAI,EAAA;AADO,KAAnB;;AAGA,WAAO,IAAP;AACA,GALD;AAOA;;;;;AAGA,EAAA,aAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,IAAJ,EAAiB;AAChB,QAAM,KAAK,GAAG,KAAK,SAAL,CAAe,GAAf,CAAmB,IAAnB,CAAd;;AACA,QAAI,KAAJ,EAAW;AACV,aAAO,KAAK,CAAC,KAAb;AACA,KAFD,MAEO;AACN,aAAO,KAAK,aAAZ;AACA;AACD,GAPD;;AAQD,SAAA,aAAA;AAAC,CA5CD,CAAyC,IAAzC,CAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { Timeline } from \"./Timeline\";\nimport { Tone } from \"../Tone\";\n/**\n * Represents a single value which is gettable and settable in a timed way\n */\nvar TimelineValue = /** @class */ (function (_super) {\n    tslib_1.__extends(TimelineValue, _super);\n    /**\n     * @param initialValue The value to return if there is no scheduled values\n     */\n    function TimelineValue(initialValue) {\n        var _this = _super.call(this) || this;\n        _this.name = \"TimelineValue\";\n        /**\n         * The timeline which stores the values\n         */\n        _this._timeline = new Timeline({ memory: 10 });\n        _this._initialValue = initialValue;\n        return _this;\n    }\n    /**\n     * Set the value at the given time\n     */\n    TimelineValue.prototype.set = function (value, time) {\n        this._timeline.add({\n            value: value, time: time\n        });\n        return this;\n    };\n    /**\n     * Get the value at the given time\n     */\n    TimelineValue.prototype.get = function (time) {\n        var event = this._timeline.get(time);\n        if (event) {\n            return event.value;\n        }\n        else {\n            return this._initialValue;\n        }\n    };\n    return TimelineValue;\n}(Tone));\nexport { TimelineValue };\n//# sourceMappingURL=TimelineValue.js.map"]},"metadata":{},"sourceType":"module"}