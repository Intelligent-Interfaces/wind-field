{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { StereoFeedbackEffect } from \"./StereoFeedbackEffect\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Just like a [[StereoFeedbackEffect]], but the feedback is routed from left to right\n * and right to left instead of on the same channel.\n * ```\n * +--------------------------------+ feedbackL <-----------------------------------+\n * |                                                                                |\n * +-->                          +----->        +---->                          +-----+\n *      feedbackMerge +--> split        (EFFECT)       merge +--> feedbackSplit     | |\n * +-->                          +----->        +---->                          +---+ |\n * |                                                                                  |\n * +--------------------------------+ feedbackR <-------------------------------------+\n * ```\n */\n\nvar StereoXFeedbackEffect =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(StereoXFeedbackEffect, _super);\n\n  function StereoXFeedbackEffect(options) {\n    var _this = _super.call(this, options) || this; // the left output connected to the right input\n\n\n    _this._feedbackL.disconnect();\n\n    _this._feedbackL.connect(_this._feedbackMerge, 0, 1); // the left output connected to the right input\n\n\n    _this._feedbackR.disconnect();\n\n    _this._feedbackR.connect(_this._feedbackMerge, 0, 0);\n\n    readOnly(_this, [\"feedback\"]);\n    return _this;\n  }\n\n  return StereoXFeedbackEffect;\n}(StereoFeedbackEffect);\n\nexport { StereoXFeedbackEffect };","map":{"version":3,"sources":["../../../Tone/effect/StereoXFeedbackEffect.ts"],"names":[],"mappings":";AAAA,SAAS,oBAAT,QAAkE,wBAAlE;AAEA,SAAS,QAAT,QAAyB,wBAAzB;AAMA;;;;;;;;;;;;;;AAaA,IAAA,qBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyF,EAAA,OAAA,CAAA,SAAA,CAAA,qBAAA,EAAA,MAAA;;AAExF,WAAA,qBAAA,CAAY,OAAZ,EAAiD;AAAjD,QAAA,KAAA,GAEC,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,OAAN,KAAc,IAFf,CAAiD,CAGhD;;;AACA,IAAA,KAAI,CAAC,UAAL,CAAgB,UAAhB;;AACA,IAAA,KAAI,CAAC,UAAL,CAAgB,OAAhB,CAAwB,KAAI,CAAC,cAA7B,EAA6C,CAA7C,EAAgD,CAAhD,EALgD,CAOhD;;;AACA,IAAA,KAAI,CAAC,UAAL,CAAgB,UAAhB;;AACA,IAAA,KAAI,CAAC,UAAL,CAAgB,OAAhB,CAAwB,KAAI,CAAC,cAA7B,EAA6C,CAA7C,EAAgD,CAAhD;;AAEA,IAAA,QAAQ,CAAC,KAAD,EAAO,CAAC,UAAD,CAAP,CAAR;;AACA;;AACF,SAAA,qBAAA;AAAC,CAfD,CAAyF,oBAAzF,CAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { StereoFeedbackEffect } from \"./StereoFeedbackEffect\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Just like a [[StereoFeedbackEffect]], but the feedback is routed from left to right\n * and right to left instead of on the same channel.\n * ```\n * +--------------------------------+ feedbackL <-----------------------------------+\n * |                                                                                |\n * +-->                          +----->        +---->                          +-----+\n *      feedbackMerge +--> split        (EFFECT)       merge +--> feedbackSplit     | |\n * +-->                          +----->        +---->                          +---+ |\n * |                                                                                  |\n * +--------------------------------+ feedbackR <-------------------------------------+\n * ```\n */\nvar StereoXFeedbackEffect = /** @class */ (function (_super) {\n    tslib_1.__extends(StereoXFeedbackEffect, _super);\n    function StereoXFeedbackEffect(options) {\n        var _this = _super.call(this, options) || this;\n        // the left output connected to the right input\n        _this._feedbackL.disconnect();\n        _this._feedbackL.connect(_this._feedbackMerge, 0, 1);\n        // the left output connected to the right input\n        _this._feedbackR.disconnect();\n        _this._feedbackR.connect(_this._feedbackMerge, 0, 0);\n        readOnly(_this, [\"feedback\"]);\n        return _this;\n    }\n    return StereoXFeedbackEffect;\n}(StereoFeedbackEffect));\nexport { StereoXFeedbackEffect };\n//# sourceMappingURL=StereoXFeedbackEffect.js.map"]},"metadata":{},"sourceType":"module"}