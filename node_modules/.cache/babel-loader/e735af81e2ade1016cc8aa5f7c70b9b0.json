{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { Multiply } from \"./Multiply\";\nimport { WaveShaper } from \"./WaveShaper\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\n/**\n * GreaterThanZero outputs 1 when the input is strictly greater than zero\n * @example\n * import { GreaterThanZero, Signal } from \"tone\";\n * const gt0 = new GreaterThanZero();\n * const sig = new Signal(0.01).connect(gt0);\n * // the output of gt0 is 1.\n * sig.value = 0;\n * // the output of gt0 is 0.\n */\n\nvar GreaterThanZero =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(GreaterThanZero, _super);\n\n  function GreaterThanZero() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(GreaterThanZero.getDefaults(), arguments))) || this;\n\n    _this.name = \"GreaterThanZero\";\n    _this._thresh = _this.output = new WaveShaper({\n      context: _this.context,\n      length: 127,\n      mapping: function (val) {\n        if (val <= 0) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    });\n    _this._scale = _this.input = new Multiply({\n      context: _this.context,\n      value: 10000\n    }); // connections\n\n    _this._scale.connect(_this._thresh);\n\n    return _this;\n  }\n\n  GreaterThanZero.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._scale.dispose();\n\n    this._thresh.dispose();\n\n    return this;\n  };\n\n  return GreaterThanZero;\n}(SignalOperator);\n\nexport { GreaterThanZero };","map":{"version":3,"sources":["../../../Tone/signal/GreaterThanZero.ts"],"names":[],"mappings":";AAAA,SAAS,cAAT,QAAsD,kBAAtD;AACA,SAAS,QAAT,QAAyB,YAAzB;AAEA,SAAS,UAAT,QAA2B,cAA3B;AACA,SAAS,oBAAT,QAAqC,uBAArC;AAIA;;;;;;;;;;;AAUA,IAAA,eAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAqC,EAAA,OAAA,CAAA,SAAA,CAAA,eAAA,EAAA,MAAA;;AAmBpC,WAAA,eAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,MAAM,CAAC,MAAP,CAAc,oBAAoB,CAAC,eAAe,CAAC,WAAhB,EAAD,EAAgC,SAAhC,CAAlC,CAAN,KAAoF,IADrF;;AAjBS,IAAA,KAAA,CAAA,IAAA,GAAe,iBAAf;AAoBR,IAAA,KAAI,CAAC,OAAL,GAAe,KAAI,CAAC,MAAL,GAAc,IAAI,UAAJ,CAAe;AAC3C,MAAA,OAAO,EAAE,KAAI,CAAC,OAD6B;AAE3C,MAAA,MAAM,EAAE,GAFmC;AAG3C,MAAA,OAAO,EAAE,UAAC,GAAD,EAAI;AACZ,YAAI,GAAG,IAAI,CAAX,EAAc;AACb,iBAAO,CAAP;AACA,SAFD,MAEO;AACN,iBAAO,CAAP;AACA;AACD;AAT0C,KAAf,CAA7B;AAWA,IAAA,KAAI,CAAC,MAAL,GAAc,KAAI,CAAC,KAAL,GAAa,IAAI,QAAJ,CAAa;AACvC,MAAA,OAAO,EAAE,KAAI,CAAC,OADyB;AAEvC,MAAA,KAAK,EAAE;AAFgC,KAAb,CAA3B,CAdD,CAmBC;;AACA,IAAA,KAAI,CAAC,MAAL,CAAY,OAAZ,CAAoB,KAAI,CAAC,OAAzB;;;AACA;;AAED,EAAA,eAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACC,IAAA,MAAA,CAAA,SAAA,CAAM,OAAN,CAAa,IAAb,CAAa,IAAb;;AACA,SAAK,MAAL,CAAY,OAAZ;;AACA,SAAK,OAAL,CAAa,OAAb;;AACA,WAAO,IAAP;AACA,GALD;;AAMD,SAAA,eAAA;AAAC,CAhDD,CAAqC,cAArC,CAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { Multiply } from \"./Multiply\";\nimport { WaveShaper } from \"./WaveShaper\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\n/**\n * GreaterThanZero outputs 1 when the input is strictly greater than zero\n * @example\n * import { GreaterThanZero, Signal } from \"tone\";\n * const gt0 = new GreaterThanZero();\n * const sig = new Signal(0.01).connect(gt0);\n * // the output of gt0 is 1.\n * sig.value = 0;\n * // the output of gt0 is 0.\n */\nvar GreaterThanZero = /** @class */ (function (_super) {\n    tslib_1.__extends(GreaterThanZero, _super);\n    function GreaterThanZero() {\n        var _this = _super.call(this, Object.assign(optionsFromArguments(GreaterThanZero.getDefaults(), arguments))) || this;\n        _this.name = \"GreaterThanZero\";\n        _this._thresh = _this.output = new WaveShaper({\n            context: _this.context,\n            length: 127,\n            mapping: function (val) {\n                if (val <= 0) {\n                    return 0;\n                }\n                else {\n                    return 1;\n                }\n            },\n        });\n        _this._scale = _this.input = new Multiply({\n            context: _this.context,\n            value: 10000\n        });\n        // connections\n        _this._scale.connect(_this._thresh);\n        return _this;\n    }\n    GreaterThanZero.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._scale.dispose();\n        this._thresh.dispose();\n        return this;\n    };\n    return GreaterThanZero;\n}(SignalOperator));\nexport { GreaterThanZero };\n//# sourceMappingURL=GreaterThanZero.js.map"]},"metadata":{},"sourceType":"module"}