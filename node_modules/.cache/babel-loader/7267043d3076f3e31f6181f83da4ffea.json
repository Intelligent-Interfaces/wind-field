{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { TicksClass } from \"../type/Ticks\";\nimport { TransportEvent } from \"./TransportEvent\";\n/**\n * TransportRepeatEvent is an internal class used by Tone.Transport\n * to schedule repeat events. This class should not be instantiated directly.\n */\n\nvar TransportRepeatEvent =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(TransportRepeatEvent, _super);\n  /**\n   * @param transport The transport object which the event belongs to\n   */\n\n\n  function TransportRepeatEvent(transport, opts) {\n    var _this = _super.call(this, transport, opts) || this;\n    /**\n     * The ID of the current timeline event\n     */\n\n\n    _this._currentId = -1;\n    /**\n     * The ID of the next timeline event\n     */\n\n    _this._nextId = -1;\n    /**\n     * The time of the next event\n     */\n\n    _this._nextTick = _this.time;\n    /**\n     * a reference to the bound start method\n     */\n\n    _this._boundRestart = _this._restart.bind(_this);\n    var options = Object.assign(TransportRepeatEvent.getDefaults(), opts);\n    _this.duration = new TicksClass(transport.context, options.duration).valueOf();\n    _this._interval = new TicksClass(transport.context, options.interval).valueOf();\n    _this._nextTick = options.time;\n\n    _this.transport.on(\"start\", _this._boundRestart);\n\n    _this.transport.on(\"loopStart\", _this._boundRestart);\n\n    _this.context = _this.transport.context;\n\n    _this._restart();\n\n    return _this;\n  }\n\n  TransportRepeatEvent.getDefaults = function () {\n    return Object.assign({}, TransportEvent.getDefaults(), {\n      duration: Infinity,\n      interval: 1,\n      once: false\n    });\n  };\n  /**\n   * Invoke the callback. Returns the tick time which\n   * the next event should be scheduled at.\n   * @param  time  The AudioContext time in seconds of the event\n   */\n\n\n  TransportRepeatEvent.prototype.invoke = function (time) {\n    // create more events if necessary\n    this._createEvents(time); // call the super class\n\n\n    _super.prototype.invoke.call(this, time);\n  };\n  /**\n   * Push more events onto the timeline to keep up with the position of the timeline\n   */\n\n\n  TransportRepeatEvent.prototype._createEvents = function (time) {\n    // schedule the next event\n    var ticks = this.transport.getTicksAtTime(time);\n\n    if (ticks >= this.time && ticks >= this._nextTick && this._nextTick + this._interval < this.time + this.duration) {\n      this._nextTick += this._interval;\n      this._currentId = this._nextId;\n      this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n    }\n  };\n  /**\n   * Push more events onto the timeline to keep up with the position of the timeline\n   */\n\n\n  TransportRepeatEvent.prototype._restart = function (time) {\n    this.transport.clear(this._currentId);\n    this.transport.clear(this._nextId);\n    this._nextTick = this.time;\n    var ticks = this.transport.getTicksAtTime(time);\n\n    if (ticks > this.time) {\n      this._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;\n    }\n\n    this._currentId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n    this._nextTick += this._interval;\n    this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n  };\n  /**\n   * Clean up\n   */\n\n\n  TransportRepeatEvent.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.transport.clear(this._currentId);\n    this.transport.clear(this._nextId);\n    this.transport.off(\"start\", this._boundRestart);\n    this.transport.off(\"loopStart\", this._boundRestart);\n    return this;\n  };\n\n  return TransportRepeatEvent;\n}(TransportEvent);\n\nexport { TransportRepeatEvent };","map":{"version":3,"sources":["../../../../Tone/core/clock/TransportRepeatEvent.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { TicksClass } from \"../type/Ticks\";\nimport { TransportEvent } from \"./TransportEvent\";\n/**\n * TransportRepeatEvent is an internal class used by Tone.Transport\n * to schedule repeat events. This class should not be instantiated directly.\n */\nvar TransportRepeatEvent = /** @class */ (function (_super) {\n    tslib_1.__extends(TransportRepeatEvent, _super);\n    /**\n     * @param transport The transport object which the event belongs to\n     */\n    function TransportRepeatEvent(transport, opts) {\n        var _this = _super.call(this, transport, opts) || this;\n        /**\n         * The ID of the current timeline event\n         */\n        _this._currentId = -1;\n        /**\n         * The ID of the next timeline event\n         */\n        _this._nextId = -1;\n        /**\n         * The time of the next event\n         */\n        _this._nextTick = _this.time;\n        /**\n         * a reference to the bound start method\n         */\n        _this._boundRestart = _this._restart.bind(_this);\n        var options = Object.assign(TransportRepeatEvent.getDefaults(), opts);\n        _this.duration = new TicksClass(transport.context, options.duration).valueOf();\n        _this._interval = new TicksClass(transport.context, options.interval).valueOf();\n        _this._nextTick = options.time;\n        _this.transport.on(\"start\", _this._boundRestart);\n        _this.transport.on(\"loopStart\", _this._boundRestart);\n        _this.context = _this.transport.context;\n        _this._restart();\n        return _this;\n    }\n    TransportRepeatEvent.getDefaults = function () {\n        return Object.assign({}, TransportEvent.getDefaults(), {\n            duration: Infinity,\n            interval: 1,\n            once: false,\n        });\n    };\n    /**\n     * Invoke the callback. Returns the tick time which\n     * the next event should be scheduled at.\n     * @param  time  The AudioContext time in seconds of the event\n     */\n    TransportRepeatEvent.prototype.invoke = function (time) {\n        // create more events if necessary\n        this._createEvents(time);\n        // call the super class\n        _super.prototype.invoke.call(this, time);\n    };\n    /**\n     * Push more events onto the timeline to keep up with the position of the timeline\n     */\n    TransportRepeatEvent.prototype._createEvents = function (time) {\n        // schedule the next event\n        var ticks = this.transport.getTicksAtTime(time);\n        if (ticks >= this.time && ticks >= this._nextTick && this._nextTick + this._interval < this.time + this.duration) {\n            this._nextTick += this._interval;\n            this._currentId = this._nextId;\n            this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n        }\n    };\n    /**\n     * Push more events onto the timeline to keep up with the position of the timeline\n     */\n    TransportRepeatEvent.prototype._restart = function (time) {\n        this.transport.clear(this._currentId);\n        this.transport.clear(this._nextId);\n        this._nextTick = this.time;\n        var ticks = this.transport.getTicksAtTime(time);\n        if (ticks > this.time) {\n            this._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;\n        }\n        this._currentId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n        this._nextTick += this._interval;\n        this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n    };\n    /**\n     * Clean up\n     */\n    TransportRepeatEvent.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.transport.clear(this._currentId);\n        this.transport.clear(this._nextId);\n        this.transport.off(\"start\", this._boundRestart);\n        this.transport.off(\"loopStart\", this._boundRestart);\n        return this;\n    };\n    return TransportRepeatEvent;\n}(TransportEvent));\nexport { TransportRepeatEvent };\n//# sourceMappingURL=TransportRepeatEvent.js.map"]},"metadata":{},"sourceType":"module"}